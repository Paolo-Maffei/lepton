# eCos saved configuration

# ---- commands --------------------------------------------------------
# This section contains information about the savefile format.
# It should not be edited. Any modifications made to this section
# may make it impossible for the configuration tools to read
# the savefile.

cdl_savefile_version 1;
cdl_savefile_command cdl_savefile_version {};
cdl_savefile_command cdl_savefile_command {};
cdl_savefile_command cdl_configuration { description hardware template package };
cdl_savefile_command cdl_package { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_component { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_option { value_source user_value wizard_value inferred_value };
cdl_savefile_command cdl_interface { value_source user_value wizard_value inferred_value };

# ---- toplevel --------------------------------------------------------
# This section defines the toplevel configuration object. The only
# values that can be changed are the name of the configuration and
# the description field. It is not possible to modify the target,
# the template or the set of packages simply by editing the lines
# below because these changes have wide-ranging effects. Instead
# the appropriate tools should be used to make such modifications.

cdl_configuration eCos {
    description "" ;

    # These fields should not be modified.
    hardware    freescale_twr_k60n512_mram ;
    template    kernel ;
    package -hardware CYGPKG_HAL_CORTEXM current ;
    package -hardware CYGPKG_HAL_CORTEXM_KINETIS current ;
    package -hardware CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM current ;
    package -hardware CYGPKG_IO_SERIAL_FREESCALE_UART_HDR current ;
    package -hardware CYGPKG_IO_SERIAL_FREESCALE_UART current ;
    package -hardware CYGPKG_DEVICES_WALLCLOCK_KINETIS_RTC current ;
    package -hardware CYGPKG_DEVS_ETH_PHY current ;
    package -hardware CYGPKG_DEVS_ETH_FREESCALE_ENET current ;
    package -template CYGPKG_HAL current ;
    package -template CYGPKG_IO_SERIAL current ;
    package -template CYGPKG_INFRA current ;
    package -template CYGPKG_KERNEL current ;
    package -template CYGPKG_ERROR current ;
    package -template CYGPKG_MEMALLOC current ;
    package -template CYGPKG_LIBC_STRING current ;
    package -template CYGPKG_ISOINFRA current ;
    package CYGPKG_CPULOAD current ;
    package CYGPKG_LIBC_I18N current ;
    package CYGPKG_LIBC_STDLIB current ;
    package CYGPKG_LIBM current ;
};

# ---- conflicts -------------------------------------------------------
# There are no conflicts.

# ---- contents --------------------------------------------------------
# >
# >
# Global build options
# Global build options including control over
# compiler flags, linker flags and choice of toolchain.
#
cdl_component CYGBLD_GLOBAL_OPTIONS {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Global command prefix
# This option specifies the command prefix used when
# invoking the build tools.
#
cdl_option CYGBLD_GLOBAL_COMMAND_PREFIX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value arm-eabi
    # value_source default
    # Default value: arm-eabi
};

# Global compiler flags
# This option controls the global compiler flags which are used to
# compile all packages by default. Individual packages may define
# options which override these global flags.
#
cdl_option CYGBLD_GLOBAL_CFLAGS {
    # Flavor: data
    user_value "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O0 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    # value_source user
    # Default value:  CYGBLD_GLOBAL_WARNFLAGS . "-mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions" 
    #     CYGBLD_GLOBAL_WARNFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings "
    #   --> "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    # option CYGBLD_INFRA_CFLAGS_WARNINGS_AS_ERRORS
    #     Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -Werror") 
    # option CYGBLD_INFRA_CFLAGS_PIPE
    #     Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -pipe") 
};

# Global linker flags
# This option controls the global linker flags. Individual
# packages may define options which override these global flags.
#
cdl_option CYGBLD_GLOBAL_LDFLAGS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    # value_source default
    # Default value: "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
};

# Standard compiler warning flags
# This option specifies the default warning-related compiler flags used
# on all eCos platforms.
#
cdl_option CYGBLD_GLOBAL_WARNFLAGS {
    # Calculated value:  "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings " 
    # Flavor: data
    # Current_value: -Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings 

    # The following properties are affected by this value
    # option CYGBLD_GLOBAL_CFLAGS
    #     DefaultValue:  CYGBLD_GLOBAL_WARNFLAGS . "-mcpu=cortex-m3 -mthumb -g -O2 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions" 
};

# Build common GDB stub ROM image
# Unless a target board has specific requirements to the
# stub implementation, it can use a simple common stub.
# This option, which gets enabled by platform HALs as
# appropriate, controls the building of the common stub.
#
cdl_option CYGBLD_BUILD_COMMON_GDB_STUBS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGBLD_HAL_CORTEXM_TWR_MK60N512_GDB_STUBS
    #     ActiveIf: CYGBLD_BUILD_COMMON_GDB_STUBS
};

# <
# Real-time clock
# Driver for the Kinetis RTC
#
cdl_package CYGPKG_DEVICES_WALLCLOCK_KINETIS_RTC {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_WALLCLOCK
    #     CYGPKG_IO_WALLCLOCK (unknown) == 0
    #   --> 0
    # ActiveIf constraint: CYGIMP_WALLCLOCK_HARDWARE
    #     CYGIMP_WALLCLOCK_HARDWARE == 1
    #   --> 1

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# Hardware wallclock
#
cdl_option CYGIMP_WALLCLOCK_HARDWARE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # package CYGPKG_DEVICES_WALLCLOCK_KINETIS_RTC
    #     ActiveIf: CYGIMP_WALLCLOCK_HARDWARE
};

# Ethernet transciever (PHY) support
# doc: ref/io-eth-phy-generic.html
# API for ethernet PHY devices
#
cdl_package CYGPKG_DEVS_ETH_PHY {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS (unknown) == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM
    #     Requires:  is_active(CYGPKG_DEVS_ETH_PHY) implies
    #             (1 == CYGHWR_DEVS_ETH_PHY_KSZ8041) 
};

# >
# Enable driver debugging
# Enables the diagnostic debug messages on the
# console device.
#
cdl_option CYGDBG_DEVS_ETH_PHY {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Time period (seconds) to wait for auto-negotiation
# The length of time to wait for auto-negotiation to complete
# before giving up and declaring the link dead/missing.
#
cdl_option CYGINT_DEVS_ETH_PHY_AUTO_NEGOTIATION_TIME {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 5
    # value_source default
    # Default value: 5
};

# NSDP8384X
# Include support for National Semiconductor DP8384X DsPHYTER II
#
cdl_option CYGHWR_DEVS_ETH_PHY_DP8384X {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# AMD 79C874
# Include support for AMD 79C874 NetPHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_AM79C874 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Intel LXT972
# Include support for Intel LXT972xxx PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_INLXT972 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# ICS 1890
# Include support for ICS 1890 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_ICS1890 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# ICS 1892
# Include support for ICS 1892 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_ICS1892 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# ICS 1893
# Include support for ICS 1893 and 1893AF PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_ICS1893 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Davicom DM9161A
# Include support for the Davicom DM9161A PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_DM9161A {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Micrel KS8721
# Include support for the Micrel KS8721 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_KS8721 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Micrel KSZ8001
# Include support for the Micrel KSZ8001 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_KSZ8001 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Micrel KSZ8041
# Include support for the Micrel KSZ8041 PHY
#
cdl_option CYGHWR_DEVS_ETH_PHY_KSZ8041 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM
    #     Requires:  is_active(CYGPKG_DEVS_ETH_PHY) implies
    #             (1 == CYGHWR_DEVS_ETH_PHY_KSZ8041) 
};

# IC+ IP101A
# Include support for IC+ IP101A
#
cdl_option CYGHWR_DEVS_ETH_PHY_IP101A {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Vitesse VSC8641
# Include support for Vitesse VSC8641
#
cdl_option CYGHWR_DEVS_ETH_PHY_VSC8641 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Vitesse VSC8244
# Include support for Vitesse VSC8244
#
cdl_option CYGHWR_DEVS_ETH_PHY_VSC8244 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Freescale ENET ethernet driver
# Ethernet driver for Freescale ENET controller. Freescale ENET
# Ethernet controller is found on some Freescale families of
# controllers such as Kinetis and ColdFire+.
#
cdl_package CYGPKG_DEVS_ETH_FREESCALE_ENET {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO_ETH_DRIVERS
    #     CYGPKG_IO_ETH_DRIVERS (unknown) == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGHWR_FREESCALE_ENET_MII_MDC_HAL_CLOCK
    #     CYGHWR_FREESCALE_ENET_MII_MDC_HAL_CLOCK == 0
    #   --> 0

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM
    #     Requires:  is_active(CYGPKG_DEVS_ETH_FREESCALE_ENET)
    #                       implies CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC" 
    # option CYGHWR_FREESCALE_ENET_MII_MDC_HAL_CLOCK
    #     ActiveIf: CYGPKG_DEVS_ETH_FREESCALE_ENET
};

# >
# Device name for Freescale ENET0 interface
# This option specifies the device name for Freescale ENET0
# interface.
#
cdl_option CYGDAT_IO_ETH_IF_FREESCALE_ENET0_NAME {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"eth0\""
    # value_source default
    # Default value: "\"eth0\""
};

# Ethernet station (MAC) address for eth0
# The default ethernet station address.
#
cdl_option CYGPKG_DEVS_ETH_FREESCALE_ENET0_MACADDR {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC"
    # value_source default
    # Default value: "0x12, 0x34, 0x56, 0x78, 0x9A, 0xBC"
};

# Interrupt priority
# This option selects the interrupt priority for the EMAC
# interrupts.
#
cdl_option CYGPKG_DEVS_ETH_FREESCALE_ENET0_INTPRIO {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x000000E0
    # value_source default
    # Default value: 0x000000E0
};

# Congestion control
#
cdl_component CYGHWR_DEVS_ETH_FREESCALE_ENET0_FLOW_CONTROL {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # There is no associated value.
};

# >
# Rx Flow control enable
# If enabled ENET shall regard pause frames requests from peer.
#
cdl_option CYGSEM_ETH_FREESCALE_ENET0_RCR_FCE {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET0_FLOW_CONTROL is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values:  0 1 
};

# Tx flow control pause duration
# Flow control pause legth in pause quanta asked from peer.
# 1 pause quant equals to 512 bit time increments.
#
cdl_option CYGNUM_ETH_FREESCALE_ENET0_OPD_PAUSE_DUR {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET0_FLOW_CONTROL is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 255
};

# <
# Buffers
# Rx and Tx buffers
#
cdl_component CYGHWR_DEVS_ETH_FREESCALE_ENET0_BUFFS {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # There is no associated value.
};

# >
# Maximal frame length
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET0_BUFFS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1518
    # value_source default
    # Default value: 1518
    # Legal values: 64 to 1522

    # The following properties are affected by this value
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN
    #                 
};

# Number of RX buffers
# Number of buffers for receiving. The number of receive
# buffers also defines the number of descriptors in the
# descriptor array.
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RX_BUFS {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET0_BUFFS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
    # Legal values: 2 to 64
};

# Rx buffer size
# Rx buffer size must be evenly divisible by 16.
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET0_BUFFS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN
    #                 
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN == 0
    #   --> 0
    # Legal values: 16 to 1536
    # Requires:  (CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE %
    #                             CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN) == 0
    #                 
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE
    #     Requires:  (CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE %
    #                             CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN) == 0
    #                 
};

# Number of TX descriptors (buffers)
# Number of transmit buffers or descriptors. We need one
# descriptor/buffer for each element in the scatter/gather list.
# If NoCopy is selected then only buffer descriptors are allocated.
# If Copying is selected (NoCopy == 0) then a buffer is allocated
# for every buffer descriptor.
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TX_BUFS {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET0_BUFFS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value: ( CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY ? 8 : CYGPKG_IO_ETH_DRIVERS_NET ? 8 : 2 )
    #     CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY == 0
    #     CYGPKG_IO_ETH_DRIVERS_NET (unknown) == 0
    #   --> 2
    # Legal values: 2 to 64
};

# Tx buffer size
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET0_BUFFS is not active
    # ActiveIf constraint:  !CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY 
    #     CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY == 0
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN
    #                 
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN == 0
    #   --> 0
    # Legal values:  16 to 1536 
    # Requires:  (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_SIZE %
    #                             CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN) == 0
    #                 
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_SIZE (unknown) == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN == 0
    #   --> 1
};

# <
# Enhanced buffer descriptors
#
cdl_option CYGSEM_DEVS_ETH_FREESCALE_ENET_BD_ENHANCED {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL
    #     Requires: CYGSEM_DEVS_ETH_FREESCALE_ENET_BD_ENHANCED
    # component CYGSEM_DEVS_ETH_FREESCALE_ENET_1588
    #     Requires: CYGSEM_DEVS_ETH_FREESCALE_ENET_BD_ENHANCED
};

# Buffer/descriptor memory alignment
# ENET conatins internal DMA controller that
# requires certain memory alighment
#
cdl_component CYGHWR_DEVS_ETH_FREESCALE_ENET_ALIGN {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # There is no associated value.
};

# >
# Rx buffer descriptor alignment
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBD_ALIGN {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET_ALIGN is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
    # Legal values:  8 16 
};

# Rx buffer alignment
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET_ALIGN is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16
    # value_source default
    # Default value: 16
    # Legal values:  16 

    # The following properties are affected by this value
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE
    #     Requires:  (CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE %
    #                             CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN) == 0
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_RXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_RXBUF_ALIGN
    #                 
};

# Tx buffer descriptor alignment
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBD_ALIGN {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET_ALIGN is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
    # Legal values:  8 16 
};

# Tx buffer alignment
#
cdl_option CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN {
    # This option is not active
    # The parent CYGHWR_DEVS_ETH_FREESCALE_ENET_ALIGN is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
    # Legal values:  8 16 

    # The following properties are affected by this value
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE
    #     Requires:  (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_SIZE %
    #                             CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN) == 0
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN
    #                 
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE
    #     DefaultValue: 
    #                     ((CYGNUM_DEVS_ETH_FREESCALE_ENET0_MAX_FRAME_LEN +
    #                       CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN-1)/
    #                       (CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN ?
    #                        CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN : 1)) *
    #                     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN
    #                 
    # option CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY
    #     Requires:  is_active(CYGPKG_NET_LWIP) implies
    #                        (CYGNUM_LWIP_MEM_ALIGNMENT >=
    #                         CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN) 
};

# <
# RMII or MII Phy
#
cdl_component CYGSEM_DEVS_ETH_FREESCALE_ENET_PHY {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value RMII
    # value_source default
    # Default value: RMII
    # Legal values:  "RMII" "MII" 
};

# >
# Enable PHY Rx Error signal
#
cdl_option CYGOPT_DEVS_ETH_FREESCALE_ENET_PHY_RXER_USE {
    # This option is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_PHY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# TCP/IP acceleration
# Freescale ENET provides for hardware TCP/IP header checksum
# generation and check.
#
cdl_component CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active
    # ActiveIf constraint: CYGPKG_NET_LWIP
    #     CYGPKG_NET_LWIP (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  is_active (CYGPKG_LWIP_CHECKSUMS) ? 1 : 0 
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #   --> 0
    # Requires: CYGSEM_DEVS_ETH_FREESCALE_ENET_BD_ENHANCED
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_BD_ENHANCED == 0
    #   --> 0
    # Requires: CYGPKG_LWIP_CHECKSUMS
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #   --> 0
};

# >
# IP Checksum generation
#
cdl_component CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_IP {
    # This option is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  is_active(CYGPKG_LWIP_CHECKSUMS) implies
    #                     (CYGIMP_LWIP_CHECKSUM_GEN_IP == 0) 
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #     CYGIMP_LWIP_CHECKSUM_GEN_IP (unknown) == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_ENET_LWIP_CHECKSUMS
    #     Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_IP implies
    #                     CYGIMP_LWIP_CHECKSUM_GEN_IP == 1 
};

# >
# TCP and UDP Checksum generation
#
cdl_option CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_PROT {
    # This option is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_IP is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  is_active(CYGPKG_LWIP_CHECKSUMS) implies
    #                         (CYGIMP_LWIP_CHECKSUM_GEN_TCP == 0) 
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #     CYGIMP_LWIP_CHECKSUM_GEN_TCP (unknown) == 0
    #   --> 1
    # Requires:  is_active(CYGPKG_LWIP_CHECKSUMS) implies
    #                         (CYGIMP_LWIP_CHECKSUM_GEN_UDP == 0) 
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #     CYGIMP_LWIP_CHECKSUM_GEN_UDP (unknown) == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_ENET_LWIP_CHECKSUMS
    #     Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_GEN_TCP == 1 
    # option CYGSEM_ENET_LWIP_CHECKSUMS
    #     Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_GEN_UDP == 1 
};

# <
# IP Checksum check
#
cdl_component CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_IP {
    # This option is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  is_active(CYGPKG_LWIP_CHECKSUMS) implies
    #                     (CYGIMP_LWIP_CHECKSUM_CHECK_IP == 0) 
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #     CYGIMP_LWIP_CHECKSUM_CHECK_IP (unknown) == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_ENET_LWIP_CHECKSUMS
    #     Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_IP implies
    #                     CYGIMP_LWIP_CHECKSUM_CHECK_IP == 1 
};

# >
# TCP and UDP checksum check
#
cdl_option CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_PROT {
    # This option is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_IP is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  is_active(CYGPKG_LWIP_CHECKSUMS) implies
    #                         (CYGIMP_LWIP_CHECKSUM_CHECK_TCP == 0) 
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #     CYGIMP_LWIP_CHECKSUM_CHECK_TCP (unknown) == 0
    #   --> 1
    # Requires:  is_active(CYGPKG_LWIP_CHECKSUMS) implies
    #                         (CYGIMP_LWIP_CHECKSUM_CHECK_UDP == 0) 
    #     CYGPKG_LWIP_CHECKSUMS (unknown) == 0
    #     CYGIMP_LWIP_CHECKSUM_CHECK_UDP (unknown) == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_ENET_LWIP_CHECKSUMS
    #     Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_CHECK_TCP == 1 
    # option CYGSEM_ENET_LWIP_CHECKSUMS
    #     Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_CHECK_UDP == 1 
};

# <
# lwIP Checksum calculation
# Re-enable lwIP software checksum generation/check if
# hardware generation/check is disabled.
#
cdl_option CYGSEM_ENET_LWIP_CHECKSUMS {
    # This option is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL is disabled

    # There is no associated value.
    # Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_IP implies
    #                     CYGIMP_LWIP_CHECKSUM_GEN_IP == 1 
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_IP == 0
    #     CYGIMP_LWIP_CHECKSUM_GEN_IP (unknown) == 0
    #   --> 0
    # Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_GEN_TCP == 1 
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_PROT == 0
    #     CYGIMP_LWIP_CHECKSUM_GEN_TCP (unknown) == 0
    #   --> 0
    # Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_GEN_UDP == 1 
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_TX_PROT == 0
    #     CYGIMP_LWIP_CHECKSUM_GEN_UDP (unknown) == 0
    #   --> 0
    # Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_IP implies
    #                     CYGIMP_LWIP_CHECKSUM_CHECK_IP == 1 
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_IP == 0
    #     CYGIMP_LWIP_CHECKSUM_CHECK_IP (unknown) == 0
    #   --> 0
    # Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_CHECK_TCP == 1 
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_PROT == 0
    #     CYGIMP_LWIP_CHECKSUM_CHECK_TCP (unknown) == 0
    #   --> 0
    # Requires:  !CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_PROT implies
    #                     CYGIMP_LWIP_CHECKSUM_CHECK_UDP == 1 
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_ACCEL_RX_PROT == 0
    #     CYGIMP_LWIP_CHECKSUM_CHECK_UDP (unknown) == 0
    #   --> 0
};

# <
# IEEE 1588 timers
#
cdl_component CYGSEM_DEVS_ETH_FREESCALE_ENET_1588 {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_DEVS_ETH_FREESCALE_ENET_BD_ENHANCED
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_BD_ENHANCED == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_FREESCALE_ENET_E0_1588_PORT
    #     ActiveIf: CYGSEM_DEVS_ETH_FREESCALE_ENET_1588
};

# >
# IEEE 1588 Port
# Digital I/O provided by HAL for ENET IEEE 1588 timers.
#
cdl_option CYGHWR_HAL_FREESCALE_ENET_E0_1588_PORT {
    # This option is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_1588 is not active
    # The parent CYGSEM_DEVS_ETH_FREESCALE_ENET_1588 is disabled
    # ActiveIf constraint: CYGSEM_DEVS_ETH_FREESCALE_ENET_1588
    #     CYGSEM_DEVS_ETH_FREESCALE_ENET_1588 == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value B
    # value_source default
    # Default value: B
    # Legal values:  "B" "C" "User" 
};

# <
# ENET Error statistics
#
cdl_component CYGOPT_DEVS_ETH_FREESCALE_ENET_STATS {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Debug print ENET error statistics
#
cdl_option CYGOPT_DEVS_ETH_FREESCALE_ENET_STATS_DEBUG {
    # This option is not active
    # The parent CYGOPT_DEVS_ETH_FREESCALE_ENET_STATS is not active
    # The parent CYGOPT_DEVS_ETH_FREESCALE_ENET_STATS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# NullCopy send
# ENET driver can send buffers 'out of place'
# (wihout making a private copy), offloading CPU from
# copying data and saving space for Tx buffers . This is
# 'NullCopy' option, opposite to 'Copying' option where ENET
# driver has private Tx buffers and requires additional copying
# operation (by CPU).
# On the pther hand, 'Copying' option needs no Tx IRQ which may
# make it better choice than NullCopy if system dominantly sends
# short messages. Also, ENET has some requiresments for buffer
# alignment, therefore if upper layer networking stack /
# application can not guarantee for boundary alignment then
# 'Copying' should be used.
#
cdl_option CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active
    # ActiveIf constraint: (CYGPKG_NET_LWIP)
    #     CYGPKG_NET_LWIP (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_active(CYGPKG_NET_LWIP) implies
    #                        (CYGNUM_LWIP_MEM_ALIGNMENT >=
    #                         CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN) 
    #     CYGPKG_NET_LWIP (unknown) == 0
    #     CYGNUM_LWIP_MEM_ALIGNMENT (unknown) == 0
    #     CYGNUM_DEVS_ETH_FREESCALE_ENET_TXBUF_ALIGN == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TX_BUFS
    #     DefaultValue: ( CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY ? 8 : CYGPKG_IO_ETH_DRIVERS_NET ? 8 : 2 )
    # option CYGNUM_DEVS_ETH_FREESCALE_ENET0_TXBUF_SIZE
    #     ActiveIf:  !CYGOPT_ETH_FREESCALE_ENET_TX_NOCOPY 
};

# Fast IRQ masking
# Fast (un)masking operates on bits in ENET's EIR
# register instead of calling cyg_drv_interrupt_(un)mask.
# This allows sumultaneous (un)masking of both Tx and Rx
# interrupts and is prefered mode, but  case of compatibility
# problems disable fast IRQ mask.
#
cdl_option CYGOPT_DEVS_ETH_FREESCALE_ENET_IRQ_FASTMASK {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Driver debug output level
# This option specifies the level of debug data output by
# the Freescale ENET ethernet device driver. A value of 0 signifies
# no debug data output; 1 signifies normal debug data
# output; and 2 signifies maximum debug data output.
#
cdl_option CYGPKG_DEVS_ETH_FREESCALE_ENET_DEBUG_LEVEL {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values:  0 1 2 3 
};

# Additional compiler flags
# This option modifies the set of compiler flags for
# building the Freescale ENET ethernet driver package.
# These flags are used in addition to the set of global flags.
#
cdl_option CYGPKG_DEVS_ETH_FREESCALE_ENET_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "-D_KERNEL -D__ECOS"
    # value_source default
    # Default value: "-D_KERNEL -D__ECOS"
};

# ENET MII MDC clock provided by HAL
# ENET needs a clock with typical frequency of up to 2.5 MHz for
# MII MDC. The input clock, typically provided by HAL, is further
# divided by ENET according to setting of ENET MSCR register in order to
# provide frequency within 2.5 MHz range.
#
cdl_option CYGHWR_FREESCALE_ENET_MII_MDC_HAL_CLOCK {
    # This option is not active
    # The parent CYGPKG_DEVS_ETH_FREESCALE_ENET is not active
    # ActiveIf constraint: CYGPKG_DEVS_ETH_FREESCALE_ENET
    #     CYGPKG_DEVS_ETH_FREESCALE_ENET == 0
    #   --> 0

    # Calculated value: CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS == 48000000
    # Flavor: data
    # Current_value: 48000000

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ETH_FREESCALE_ENET
    #     Requires: CYGHWR_FREESCALE_ENET_MII_MDC_HAL_CLOCK
};

# <
# Serial device drivers
# doc: ref/io.html
# This option enables drivers for basic I/O services on
# serial devices.
#
cdl_package CYGPKG_IO_SERIAL {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # ActiveIf constraint: CYGPKG_IO
    #     CYGPKG_IO (unknown) == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR == current
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_IO_SERIAL_FREESCALE_UART
    #     ActiveIf: CYGPKG_IO_SERIAL
};

# >
# Support non-blocking read and write calls
# This option enables extra code in the generic serial driver
# which allows clients to switch read() and write() call
# semantics from blocking to non-blocking.
#
cdl_option CYGOPT_IO_SERIAL_SUPPORT_NONBLOCKING {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Driver requires block transfer callback functions
# Some low-level drivers can be optimized to transfer blocks
# of data instead of a single character at a time. These usually
# rely on a hardware FIFO of some sort.
#
cdl_interface CYGINT_IO_SERIAL_BLOCK_TRANSFER {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Serial driver supports line status
#
cdl_interface CYGINT_IO_SERIAL_LINE_STATUS_HW {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS
    #     Requires:  CYGINT_IO_SERIAL_LINE_STATUS_HW > 0 
    # option CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS
    #     DefaultValue:  0 != CYGINT_IO_SERIAL_LINE_STATUS_HW 
};

# Support line status callbacks
# This option indicates that if the serial driver supports it,
# serial line status and modem status information should be
# propagated to higher layers via callbacks.
#
cdl_option CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  0 != CYGINT_IO_SERIAL_LINE_STATUS_HW 
    #     CYGINT_IO_SERIAL_LINE_STATUS_HW == 0
    #   --> 0
    # Requires:  CYGINT_IO_SERIAL_LINE_STATUS_HW > 0 
    #     CYGINT_IO_SERIAL_LINE_STATUS_HW == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGOPT_IO_SERIAL_FLOW_CONTROL_HW
    #     Requires: CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS
    # option CYGOPT_IO_SERIAL_FLOW_CONTROL_HW
    #     DefaultValue:  CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0 ?  CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS : 0 
};

# Flow control
# This component contains options related to flow control.
#
cdl_component CYGPKG_IO_SERIAL_FLOW_CONTROL {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: (CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE || CYGOPT_IO_SERIAL_FLOW_CONTROL_HW)
    #     CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE == 0
    #     CYGOPT_IO_SERIAL_FLOW_CONTROL_HW == 0
    #   --> 0
};

# >
# Software flow control
# This component enables support of software flow control.
#
cdl_component CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FLOW_CONTROL
    #     Requires: (CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE || CYGOPT_IO_SERIAL_FLOW_CONTROL_HW)
};

# >
# Start character
# This option specifies the ascii character used to
# indicate that transmission should start.
#
cdl_option CYGDAT_IO_SERIAL_FLOW_CONTROL_XON_CHAR {
    # This option is not active
    # The parent CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 17
    # value_source default
    # Default value: 17
    # Legal values: 0 to 255
};

# Stop character
# This option specifies the ascii character used to
# indicate that transmission should stop.
#
cdl_option CYGDAT_IO_SERIAL_FLOW_CONTROL_XOFF_CHAR {
    # This option is not active
    # The parent CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 19
    # value_source default
    # Default value: 19
    # Legal values: 0 to 255
};

# <
# Hardware flow control
# If the hardware supports it, this option allows hardware
# flow control to be enabled. This may be in the form of
# either or both of RTS/CTS, or DSR/DTR flow control.
#
cdl_option CYGOPT_IO_SERIAL_FLOW_CONTROL_HW {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is disabled
    # ActiveIf constraint:  CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0 
    #     CYGINT_IO_SERIAL_FLOW_CONTROL_HW == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0 ?  CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS : 0 
    #     CYGINT_IO_SERIAL_FLOW_CONTROL_HW == 0
    #     CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS == 0
    #   --> 0
    # Requires:  CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0 
    #     CYGINT_IO_SERIAL_FLOW_CONTROL_HW == 0
    #   --> 0
    # Requires: CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS
    #     CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FLOW_CONTROL
    #     Requires: (CYGOPT_IO_SERIAL_FLOW_CONTROL_SOFTWARE || CYGOPT_IO_SERIAL_FLOW_CONTROL_HW)
};

# Serial h/w supports hardware flow control
#
cdl_interface CYGINT_IO_SERIAL_FLOW_CONTROL_HW {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGOPT_IO_SERIAL_FLOW_CONTROL_HW
    #     ActiveIf:  CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0 
    # option CYGOPT_IO_SERIAL_FLOW_CONTROL_HW
    #     Requires:  CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0 
    # option CYGOPT_IO_SERIAL_FLOW_CONTROL_HW
    #     DefaultValue:  CYGINT_IO_SERIAL_FLOW_CONTROL_HW > 0 ?  CYGOPT_IO_SERIAL_SUPPORT_LINE_STATUS : 0 
};

# Default flow control method
# This option allows a default flow control method
# to be defined. Combinations of flow control methods
# may also be set, but this is only possible by
# using the cyg_io_set_config() API in source code.
#
cdl_option CYGDAT_IO_SERIAL_FLOW_CONTROL_DEFAULT {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value NONE
    # value_source default
    # Default value: NONE
    # Legal values:  "NONE" "XONXOFF" "RTSCTS" "DSRDTR" 
};

# Rx flow control low water mark
# This sets the water mark used for determining
# when to disable flow control, expressed
# as a percentage of the buffer size. When the
# receive buffer size is lower than this percentage,
# if the transmitter had previously been throttled, it
# will now be informed it can restart.
#
cdl_option CYGNUM_IO_SERIAL_FLOW_CONTROL_LOW_WATER_PERCENT {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 33
    # value_source default
    # Default value: 33
    # Legal values: 1 to 100

    # The following properties are affected by this value
    # option CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT
    #     Requires:  CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT >=  CYGNUM_IO_SERIAL_FLOW_CONTROL_LOW_WATER_PERCENT 
};

# Rx flow control high water mark
# This sets the water mark used for determining
# when to enable flow control, expressed
# as a percentage of the buffer size. When the
# receive buffer size exceeds this percentage,
# signals are sent to the transmitter to tell it
# to throttle tranmission.
#
cdl_option CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is not active
    # The parent CYGPKG_IO_SERIAL_FLOW_CONTROL is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 66
    # value_source default
    # Default value: 66
    # Legal values: 1 to 100
    # Requires:  CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT >=  CYGNUM_IO_SERIAL_FLOW_CONTROL_LOW_WATER_PERCENT 
    #     CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT == 0
    #     CYGNUM_IO_SERIAL_FLOW_CONTROL_LOW_WATER_PERCENT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT
    #     Requires:  CYGNUM_IO_SERIAL_FLOW_CONTROL_HIGH_WATER_PERCENT >=  CYGNUM_IO_SERIAL_FLOW_CONTROL_LOW_WATER_PERCENT 
};

# <
# TTY-mode serial device drivers
# This option enables a simple terminal-like device driver 
# that can be used for serial devices that interact with humans,
# such as a system console.
#
cdl_component CYGPKG_IO_SERIAL_TTY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGDAT_IO_SERIAL_TTY_ADD_INL
    #     ActiveIf: CYGPKG_IO_SERIAL_TTY
    # component CYGPKG_IO_SERIAL_TTY_TTY4
    #     ActiveIf: CYGPKG_IO_SERIAL_TTY
    # component CYGPKG_IO_SERIAL_TTY_TTY5
    #     ActiveIf: CYGPKG_IO_SERIAL_TTY
};

# >
# HAL/diag serial device driver
# This option enables the use of the HAL diagnostic channel
# via the standard I/O drivers.
#
cdl_component CYGPKG_IO_SERIAL_HALDIAG {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Console device name
# This option selects the TTY device to use for the console.
#
cdl_option CYGDAT_IO_SERIAL_TTY_CONSOLE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ttydiag\""
    # value_source default
    # Default value: "\"/dev/ttydiag\""
};

# TTY mode HAL/diag channel
# This option causes '/dev/ttydiag' to be included in the standard
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TTY_TTYDIAG {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# TTY mode channel #0
# This option causes '/dev/tty0' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TTY_TTY0 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# TTY mode channel #0 device
# This option selects the physical device to use for 
# '/dev/tty0'.
#
cdl_option CYGDAT_IO_SERIAL_TTY_TTY0_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY0 is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY0 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser0\""
    # value_source default
    # Default value: "\"/dev/ser0\""
};

# <
# TTY mode channel #1
# This option causes '/dev/tty1' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TTY_TTY1 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# TTY mode channel #1 device
# This option selects the physical device to use for 
# '/dev/tty1'.
#
cdl_option CYGDAT_IO_SERIAL_TTY_TTY1_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY1 is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser1\""
    # value_source default
    # Default value: "\"/dev/ser1\""
};

# <
# TTY mode channel #2
# This option causes '/dev/tty2' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TTY_TTY2 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# TTY mode channel #2 device
# This option selects the physical device to use for 
# '/dev/tty2'.
#
cdl_option CYGDAT_IO_SERIAL_TTY_TTY2_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY2 is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser2\""
    # value_source default
    # Default value: "\"/dev/ser2\""
};

# <
# TTY mode channel #3
# This option causes '/dev/tty3' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TTY_TTY3 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# TTY mode channel #3 device
# This option selects the physical device to use for 
# '/dev/tty3'.
#
cdl_option CYGDAT_IO_SERIAL_TTY_TTY3_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY3 is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser3\""
    # value_source default
    # Default value: "\"/dev/ser3\""
};

# <
# TTY mode channel #4
# This option causes '/dev/tty4', which is provided by Freescale
# UART, to be included in the standard drivers.
#
cdl_component CYGPKG_IO_SERIAL_TTY_TTY4 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL_TTY
    #     CYGPKG_IO_SERIAL_TTY == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# TTY mode channel #4 device
# This option selects the physical device to use for
# '/dev/tty4'.
#
cdl_option CYGDAT_IO_SERIAL_TTY_TTY4_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY4 is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser4\""
    # value_source default
    # Default value: "\"/dev/ser4\""
};

# <
# TTY mode channel #5
# This option causes '/dev/tty5', which is provided by Freescale
# UART, to be included in the standard drivers.
#
cdl_component CYGPKG_IO_SERIAL_TTY_TTY5 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL_TTY
    #     CYGPKG_IO_SERIAL_TTY == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# TTY mode channel #5 device
# This option selects the physical device to use for
# '/dev/tty5'.
#
cdl_option CYGDAT_IO_SERIAL_TTY_TTY5_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY5 is not active
    # The parent CYGPKG_IO_SERIAL_TTY_TTY5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser5\""
    # value_source default
    # Default value: "\"/dev/ser5\""
};

# <
# <
# Termios compatible TTY drivers
# This option enables terminal drivers compatible with
# POSIX termios.
#
cdl_component CYGPKG_IO_SERIAL_TERMIOS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  0 != CYGPKG_ISOINFRA && 0 != CYGPKG_IO_FILEIO &&  0 != CYGINT_ISO_ERRNO_CODES &&  0 != CYGINT_ISO_ERRNO 
    #     CYGPKG_ISOINFRA == current
    #     CYGPKG_IO_FILEIO (unknown) == 0
    #     CYGINT_ISO_ERRNO_CODES == 1
    #     CYGINT_ISO_ERRNO == 1
    #   --> 0
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires: CYGPKG_IO_FILEIO
    #     CYGPKG_IO_FILEIO (unknown) == 0
    #   --> 0
    # Requires: CYGINT_ISO_ERRNO_CODES
    #     CYGINT_ISO_ERRNO_CODES == 1
    #   --> 1
    # Requires: CYGINT_ISO_ERRNO
    #     CYGINT_ISO_ERRNO == 1
    #   --> 1
    # Requires: CYGINT_ISO_MALLOC
    #     CYGINT_ISO_MALLOC == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGDAT_IO_SERIAL_TERMIOS_ADD_INL
    #     ActiveIf: CYGPKG_IO_SERIAL_TERMIOS
    # component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS4
    #     ActiveIf: CYGPKG_IO_SERIAL_TERMIOS
    # component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS5
    #     ActiveIf: CYGPKG_IO_SERIAL_TERMIOS
};

# >
# Interface for termios tty driver file enabling
#
cdl_interface CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY {
    # Implemented by CYGPKG_IO_SERIAL_TERMIOS_TERMIOS0, inactive, disabled
    # Implemented by CYGPKG_IO_SERIAL_TERMIOS_TERMIOS1, inactive, disabled
    # Implemented by CYGPKG_IO_SERIAL_TERMIOS_TERMIOS2, inactive, disabled
    # Implemented by CYGPKG_IO_SERIAL_TERMIOS_TERMIOS3, inactive, disabled
    # Implemented by CYGPKG_IO_SERIAL_TERMIOS_TERMIOS4, inactive, disabled
    # Implemented by CYGPKG_IO_SERIAL_TERMIOS_TERMIOS5, inactive, disabled
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGBLD_IO_SERIAL_TERMIOS_TERMIOS_TTY
    #     ActiveIf:  CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY > 0 
};

# Build termios tty driver file
#
cdl_option CYGBLD_IO_SERIAL_TERMIOS_TERMIOS_TTY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled
    # ActiveIf constraint:  CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY > 0 
    #     CYGINT_IO_SERIAL_TERMIOS_TERMIOS_TTY == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Termios TTY channel #0
# This option causes '/dev/termios0' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS0 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Termios TTY channel #0 device
# This option selects the physical device to use for 
# '/dev/termios0'.
#
cdl_option CYGDAT_IO_SERIAL_TERMIOS_TERMIOS0_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS0 is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS0 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser0\""
    # value_source default
    # Default value: "\"/dev/ser0\""
};

# <
# Termios TTY channel #1
# This option causes '/dev/termios1' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS1 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Termios TTY channel #1 device
# This option selects the physical device to use for 
# '/dev/termios1'.
#
cdl_option CYGDAT_IO_SERIAL_TERMIOS_TERMIOS1_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS1 is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser1\""
    # value_source default
    # Default value: "\"/dev/ser1\""
};

# <
# Termios TTY channel #2
# This option causes '/dev/termios2' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS2 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Termios TTY channel #2 device
# This option selects the physical device to use for 
# '/dev/termios2'.
#
cdl_option CYGDAT_IO_SERIAL_TERMIOS_TERMIOS2_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS2 is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser2\""
    # value_source default
    # Default value: "\"/dev/ser2\""
};

# <
# Termios TTY channel #3
# This option causes '/dev/termios3' to be included in the standard 
# drivers.
#
cdl_component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS3 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Termios TTY channel #3 device
# This option selects the physical device to use for 
# '/dev/termios3'.
#
cdl_option CYGDAT_IO_SERIAL_TERMIOS_TERMIOS3_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS3 is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser3\""
    # value_source default
    # Default value: "\"/dev/ser3\""
};

# <
# Support signals
# This option selects whether those parts of the termios
# interface involving signals is supported. This includes
# BRKINT mode, the INTR and QUIT characters, and whether
# SIGHUP is sent on terminal close.
#
cdl_option CYGSEM_IO_SERIAL_TERMIOS_USE_SIGNALS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGINT_ISO_SIGNAL_NUMBERS != 0 &&  CYGINT_ISO_SIGNAL_IMPL != 0 
    #     CYGINT_ISO_SIGNAL_NUMBERS == 0
    #     CYGINT_ISO_SIGNAL_IMPL == 0
    #   --> 0
    # Requires: CYGINT_ISO_SIGNAL_NUMBERS
    #     CYGINT_ISO_SIGNAL_NUMBERS == 0
    #   --> 0
    # Requires: CYGINT_ISO_SIGNAL_IMPL
    #     CYGINT_ISO_SIGNAL_IMPL == 0
    #   --> 0
};

# Termios TTY channel #4
# This option causes '/dev/termios4' to be included in the
# standard drivers.
#
cdl_component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS4 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled
    # ActiveIf constraint: CYGPKG_IO_SERIAL_TERMIOS
    #     CYGPKG_IO_SERIAL_TERMIOS == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Termios TTY channel #4 device
# This option selects the physical device to use for
# '/dev/termios4'.
#
cdl_option CYGDAT_IO_SERIAL_TERMIOS_TERMIOS4_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS4 is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser4\""
    # value_source default
    # Default value: "\"/dev/ser4\""
};

# <
# Termios TTY channel #5
# This option causes '/dev/termios5' to be included in the
# standard drivers.
#
cdl_component CYGPKG_IO_SERIAL_TERMIOS_TERMIOS5 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS is disabled
    # ActiveIf constraint: CYGPKG_IO_SERIAL_TERMIOS
    #     CYGPKG_IO_SERIAL_TERMIOS == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Termios TTY channel #5 device
# This option selects the physical device to use for
# '/dev/termios5'.
#
cdl_option CYGDAT_IO_SERIAL_TERMIOS_TERMIOS5_DEV {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS5 is not active
    # The parent CYGPKG_IO_SERIAL_TERMIOS_TERMIOS5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser5\""
    # value_source default
    # Default value: "\"/dev/ser5\""
};

# <
# <
# Hardware serial device drivers
# This option enables the hardware device drivers
# for the current platform.
#
cdl_component CYGPKG_IO_SERIAL_DEVICES {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGPKG_IO_SERIAL_TESTS
    #     Calculated:  CYGPKG_IO_SERIAL_DEVICES ? "tests/serial1 tests/serial2 tests/serial3 tests/serial4 tests/serial5 tests/tty1 tests/tty2 tests/flow1 tests/flow2" : "" 
};

# >
# Freescale UART device driver
# This option enables the serial device drivers for the
# Freescale UART, an on-chip serial controller found on some
# freescale microcontrollers such as Kinetis, etc.
#
cdl_package CYGPKG_IO_SERIAL_FREESCALE_UART {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This option is not active
    # The parent CYGPKG_IO_SERIAL_DEVICES is not active
    # The parent CYGPKG_IO_SERIAL_DEVICES is disabled
    # ActiveIf constraint: CYGPKG_IO_SERIAL
    #     CYGPKG_IO_SERIAL == 0
    #   --> 0

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_IO_SERIAL_FREESCALE_UART_HDR
    #     CYGPKG_IO_SERIAL_FREESCALE_UART_HDR == current
    #   --> 1
    # Requires: CYGPKG_ERROR
    #     CYGPKG_ERROR == current
    #   --> 1
};

# >
# Platform provides UART 0
# This interface will be implemented if the specific
# controller being used has on-chip UART 0, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_FREESCALE_UART0 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FREESCALE_UART0
    #     ActiveIf: CYGINT_IO_SERIAL_FREESCALE_UART0
    # component CYGPKG_IO_SERIAL_FREESCALE_UART0
    #     DefaultValue: CYGINT_IO_SERIAL_FREESCALE_UART0
};

# Freescale UART port 0 driver
# This option includes the serial device driver for Freescale
# UART port 0.
#
cdl_component CYGPKG_IO_SERIAL_FREESCALE_UART0 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_FREESCALE_UART0
    #     CYGINT_IO_SERIAL_FREESCALE_UART0 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_IO_SERIAL_FREESCALE_UART0
    #     CYGINT_IO_SERIAL_FREESCALE_UART0 == 0
    #   --> 0
};

# >
# Device name for Freescale UART port 0
# This option specifies the device name for
# Freescale UART port 0.
#
cdl_option CYGDAT_IO_SERIAL_FREESCALE_UART0_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser0\""
    # value_source default
    # Default value: "\"/dev/ser0\""
};

# Baud rate for the Freescale UART port 0 driver
# This option specifies the default baud rate for the
# UART port 0.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART0_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  300 600 1200 2400 4800 9600 14400 19200 38400
    #                         57600 115200 230400 
};

# Buffer size for the Freescale UART port 0 driver
# This option specifies the size of the internal buffers used
# for Freescale UART port 0.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART0_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Freescale UART port 0 interrupt priority
# This option selects the interupt priority for the
# UART 0 interrupts.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART0_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART0 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# <
# Platform provides UART 1
# This interface will be implemented if the specific
# controller being used has on-chip UART 1, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_FREESCALE_UART1 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FREESCALE_UART1
    #     ActiveIf: CYGINT_IO_SERIAL_FREESCALE_UART1
    # component CYGPKG_IO_SERIAL_FREESCALE_UART1
    #     DefaultValue: CYGINT_IO_SERIAL_FREESCALE_UART1
};

# Freescale UART port 1 driver
# This option includes the serial device driver for Freescale
# UART port 1.
#
cdl_component CYGPKG_IO_SERIAL_FREESCALE_UART1 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_FREESCALE_UART1
    #     CYGINT_IO_SERIAL_FREESCALE_UART1 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_IO_SERIAL_FREESCALE_UART1
    #     CYGINT_IO_SERIAL_FREESCALE_UART1 == 0
    #   --> 0
};

# >
# Device name for Freescale UART port 1
# This option specifies the device name for
# Freescale UART port 1.
#
cdl_option CYGDAT_IO_SERIAL_FREESCALE_UART1_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser1\""
    # value_source default
    # Default value: "\"/dev/ser1\""
};

# Baud rate for the Freescale UART port 1 driver
# This option specifies the default baud rate for the
# UART port 1.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART1_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  300 600 1200 2400 4800 9600 14400 19200 38400
    #                         57600 115200 230400 
};

# Buffer size for the Freescale UART port 1 driver
# This option specifies the size of the internal buffers used
# for Freescale UART port 1.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART1_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Freescale UART port 1 interrupt priority
# This option selects the interupt priority for the
# UART 1 interrupts.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART1_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART1 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# <
# Platform provides UART 2
# This interface will be implemented if the specific
# controller being used has on-chip UART 2, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_FREESCALE_UART2 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FREESCALE_UART2
    #     ActiveIf: CYGINT_IO_SERIAL_FREESCALE_UART2
    # component CYGPKG_IO_SERIAL_FREESCALE_UART2
    #     DefaultValue: CYGINT_IO_SERIAL_FREESCALE_UART2
};

# Freescale UART port 2 driver
# This option includes the serial device driver for Freescale
# UART port 2.
#
cdl_component CYGPKG_IO_SERIAL_FREESCALE_UART2 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_FREESCALE_UART2
    #     CYGINT_IO_SERIAL_FREESCALE_UART2 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_IO_SERIAL_FREESCALE_UART2
    #     CYGINT_IO_SERIAL_FREESCALE_UART2 == 0
    #   --> 0
};

# >
# Device name for Freescale UART port 2
# This option specifies the device name for
# Freescale UART port 2.
#
cdl_option CYGDAT_IO_SERIAL_FREESCALE_UART2_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser2\""
    # value_source default
    # Default value: "\"/dev/ser2\""
};

# Baud rate for the Freescale UART port 2 driver
# This option specifies the default baud rate for the
# UART port 2.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART2_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  300 600 1200 2400 4800 9600 14400 19200 38400
    #                         57600 115200 230400 
};

# Buffer size for the Freescale UART port 2 driver
# This option specifies the size of the internal buffers used
# for Freescale UART port 2.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART2_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Freescale UART port 2 interrupt priority
# This option selects the interupt priority for the
# UART 2 interrupts.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART2_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART2 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# <
# Platform provides UART 3
# This interface will be implemented if the specific
# controller being used has on-chip UART 3, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_FREESCALE_UART3 {
    # Implemented by CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM, active, enabled
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FREESCALE_UART3
    #     ActiveIf: CYGINT_IO_SERIAL_FREESCALE_UART3
    # component CYGPKG_IO_SERIAL_FREESCALE_UART3
    #     DefaultValue: CYGINT_IO_SERIAL_FREESCALE_UART3
};

# Freescale UART port 3 driver
# This option includes the serial device driver for Freescale
# UART port 3.
#
cdl_component CYGPKG_IO_SERIAL_FREESCALE_UART3 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_FREESCALE_UART3
    #     CYGINT_IO_SERIAL_FREESCALE_UART3 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_IO_SERIAL_FREESCALE_UART3
    #     CYGINT_IO_SERIAL_FREESCALE_UART3 == 0
    #   --> 0
};

# >
# Device name for Freescale UART port 3
# This option specifies the device name for
# Freescale UART port 3.
#
cdl_option CYGDAT_IO_SERIAL_FREESCALE_UART3_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser3\""
    # value_source default
    # Default value: "\"/dev/ser3\""
};

# Baud rate for the Freescale UART port 3 driver
# This option specifies the default baud rate for the
# UART port 3.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART3_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  300 600 1200 2400 4800 9600 14400 19200 38400
    #                         57600 115200 230400 
};

# Buffer size for the Freescale UART port 3 driver
# This option specifies the size of the internal buffers used
# for Freescale UART port 3.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART3_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Freescale UART port 3 interrupt priority
# This option selects the interupt priority for the
# UART 3 interrupts.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART3_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART3 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# <
# Platform provides UART 4
# This interface will be implemented if the specific
# controller being used has on-chip UART 4, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_FREESCALE_UART4 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FREESCALE_UART4
    #     ActiveIf: CYGINT_IO_SERIAL_FREESCALE_UART4
    # component CYGPKG_IO_SERIAL_FREESCALE_UART4
    #     DefaultValue: CYGINT_IO_SERIAL_FREESCALE_UART4
};

# Freescale UART port 4 driver
# This option includes the serial device driver for Freescale
# UART port 4.
#
cdl_component CYGPKG_IO_SERIAL_FREESCALE_UART4 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_FREESCALE_UART4
    #     CYGINT_IO_SERIAL_FREESCALE_UART4 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_IO_SERIAL_FREESCALE_UART4
    #     CYGINT_IO_SERIAL_FREESCALE_UART4 == 0
    #   --> 0
};

# >
# Device name for Freescale UART port 4
# This option specifies the device name for
# Freescale UART port 4.
#
cdl_option CYGDAT_IO_SERIAL_FREESCALE_UART4_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser4\""
    # value_source default
    # Default value: "\"/dev/ser4\""
};

# Baud rate for the Freescale UART port 4 driver
# This option specifies the default baud rate for the
# UART port 4.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART4_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  300 600 1200 2400 4800 9600 14400 19200 38400
    #                         57600 115200 230400 
};

# Buffer size for the Freescale UART port 4 driver
# This option specifies the size of the internal buffers used
# for Freescale UART port 4.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART4_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Freescale UART port 4 interrupt priority
# This option selects the interupt priority for the
# UART 4 interrupts.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART4_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART4 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# <
# Platform provides UART 5
# This interface will be implemented if the specific
# controller being used has on-chip UART 5, and if
# that UART is accessible on the target hardware.
#
cdl_interface CYGINT_IO_SERIAL_FREESCALE_UART5 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_FREESCALE_UART5
    #     ActiveIf: CYGINT_IO_SERIAL_FREESCALE_UART5
    # component CYGPKG_IO_SERIAL_FREESCALE_UART5
    #     DefaultValue: CYGINT_IO_SERIAL_FREESCALE_UART5
};

# Freescale UART port 5 driver
# This option includes the serial device driver for Freescale
# UART port 5.
#
cdl_component CYGPKG_IO_SERIAL_FREESCALE_UART5 {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active
    # ActiveIf constraint: CYGINT_IO_SERIAL_FREESCALE_UART5
    #     CYGINT_IO_SERIAL_FREESCALE_UART5 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_IO_SERIAL_FREESCALE_UART5
    #     CYGINT_IO_SERIAL_FREESCALE_UART5 == 0
    #   --> 0
};

# >
# Device name for Freescale UART port 5
# This option specifies the device name for
# Freescale UART port 5.
#
cdl_option CYGDAT_IO_SERIAL_FREESCALE_UART5_NAME {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "\"/dev/ser5\""
    # value_source default
    # Default value: "\"/dev/ser5\""
};

# Baud rate for the Freescale UART port 5 driver
# This option specifies the default baud rate for the
# UART port 5.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART5_BAUD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values:  300 600 1200 2400 4800 9600 14400 19200 38400
    #                         57600 115200 230400 
};

# Buffer size for the Freescale UART port 5 driver
# This option specifies the size of the internal buffers used
# for Freescale UART port 5.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART5_BUFSIZE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 128
    # value_source default
    # Default value: 128
    # Legal values: 0 to 8192
};

# Freescale UART port 5 interrupt priority
# This option selects the interupt priority for the
# UART 5 interrupts.
#
cdl_option CYGNUM_IO_SERIAL_FREESCALE_UART5_INT_PRIORITY {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART5 is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 0x00000080
};

# <
# Serial device driver build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_IO_SERIAL_FREESCALE_UART_OPTIONS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are
# used in addition to the set of global flags.
#
cdl_option CYGPKG_IO_SERIAL_FREESCALE_UART_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building these serial device drivers. These flags are
# removed from the set of global flags if present.
#
cdl_option CYGPKG_IO_SERIAL_FREESCALE_UART_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_FREESCALE_UART_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# <
# Build extra serial tests
# This option enables the building of some extra tests which
# can be used when testing / debugging serial drivers. These
# are not built by default since they do not use the dedicated
# testing infrastructure.
#
cdl_option CYGBLD_IO_SERIAL_EXTRA_TESTS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Serial device driver build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_IO_SERIAL_OPTIONS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the serial device drivers. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_IO_SERIAL_CFLAGS_ADD {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the serial device drivers. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_IO_SERIAL_CFLAGS_REMOVE {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_OPTIONS is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Serial device driver tests
# This option specifies the set of tests for the serial device drivers.
#
cdl_option CYGPKG_IO_SERIAL_TESTS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_OPTIONS is not active

    # Calculated value:  CYGPKG_IO_SERIAL_DEVICES ? "tests/serial1 tests/serial2 tests/serial3 tests/serial4 tests/serial5 tests/tty1 tests/tty2 tests/flow1 tests/flow2" : "" 
    #     CYGPKG_IO_SERIAL_DEVICES == 0
    # Flavor: data
    # Current_value: 
};

# <
# Enable serial device select support
# This option enables support for the select() API function on all
# serial devices.
#
cdl_option CYGPKG_IO_SERIAL_SELECT_SUPPORT {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active
    # ActiveIf constraint: CYGPKG_IO_FILEIO
    #     CYGPKG_IO_FILEIO (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  CYGFUN_IO_FILEIO_SELECT == 1 
    #     CYGFUN_IO_FILEIO_SELECT (unknown) == 0
    #   --> 0
};

# Serial testing specification
#
cdl_component CYGPKG_IO_SERIAL_TEST_SPECS {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# >
# Skip 9600 baud testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_9600 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip 14400 baud testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_14400 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip 19200 baud testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_19200 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip 38400 baud testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_38400 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip 57600 baud testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_57600 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip 115200 baud testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_115200 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip even-parity testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_PARITY_EVEN {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip odd-parity testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_PARITY_ODD {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Skip 2-stop bit testing
#
cdl_interface CYGINT_IO_SERIAL_TEST_SKIP_STOP_2 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_IO_SERIAL_TEST_SPECS is not active

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# <
# Freescale TTY devices beyond #3
#
cdl_component CYGDAT_IO_SERIAL_TTY_ADD_INL {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL_TTY
    #     CYGPKG_IO_SERIAL_TTY == 0
    #   --> 0

    # Calculated value:  "<cyg/io/ser_freescale_uart_tty_add.inl>" 
    # Flavor: data
    # Current_value: <cyg/io/ser_freescale_uart_tty_add.inl>
};

# Freescale TERMIOS devices beyond #3
#
cdl_component CYGDAT_IO_SERIAL_TERMIOS_ADD_INL {
    # This option is not active
    # The parent CYGPKG_IO_SERIAL is not active
    # ActiveIf constraint: CYGPKG_IO_SERIAL_TERMIOS
    #     CYGPKG_IO_SERIAL_TERMIOS == 0
    #   --> 0

    # Calculated value:  "<cyg/io/ser_freescale_uart_termiostty_add.inl>" 
    # Flavor: data
    # Current_value: <cyg/io/ser_freescale_uart_termiostty_add.inl>
};

# <
# ISO C library string functions
# doc: ref/libc.html
# This package provides string functions specified by the
# ISO C standard - ISO/IEC 9899:1990.
#
cdl_package CYGPKG_LIBC_STRING {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_MEMFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRING_STRFUNCS_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
    #     CYGBLD_ISO_STRTOK_R_HEADER == <cyg/libc/string/string.h>
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
};

# >
# Inline versions of <string.h> functions
# This option chooses whether some of the
# particularly simple string functions from
# <string.h> are available as inline
# functions. This may improve performance, and as
# the functions are small, may even improve code
# size.
#
cdl_option CYGIMP_LIBC_STRING_INLINES {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Optimize string functions for code size
# This option tries to reduce string function
# code size at the expense of execution speed. The
# same effect can be produced if the code is
# compiled with the -Os option to the compiler.
#
cdl_option CYGIMP_LIBC_STRING_PREFER_SMALL_TO_FAST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide BSD compatibility functions
# Enabling this option causes various compatibility functions
# commonly found in the BSD UNIX operating system to be included.
# These are functions such as bzero, bcmp, bcopy, bzero, strcasecmp,
# strncasecmp, index, rindex and swab.
#
cdl_option CYGFUN_LIBC_STRING_BSD_FUNCS {
    # Flavor: bool
    user_value 1
    # The inferred value should not be edited directly.
    inferred_value 0
    # value_source user
    # Default value: 1
    # Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
    #     CYGBLD_ISO_STRING_BSD_FUNCS_HEADER == <cyg/libc/string/bsdstring.h>
    #   --> 1
    # Requires: CYGINT_ISO_CTYPE
    #     CYGINT_ISO_CTYPE == 1
    #   --> 1
};

# strtok
# These options control the behaviour of the
# strtok() and strtok_r() string tokenization
# functions.
#
cdl_component CYGPKG_LIBC_STRING_STRTOK {
    # There is no associated value.
};

# >
# Per-thread strtok()
# This option controls whether the string function
# strtok() has its state recorded on a per-thread
# basis rather than global. If this option is
# disabled, some per-thread space can be saved.
# Note there is also a POSIX-standard strtok_r()
# function to achieve a similar effect with user
# support. Enabling this option will use one slot
# of kernel per-thread data. You should ensure you
# have enough slots configured for all your
# per-thread data.
#
cdl_option CYGSEM_LIBC_STRING_PER_THREAD_STRTOK {
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1
};

# Tracing level
# Trace verbosity level for debugging the <string.h>
# functions strtok() and strtok_r(). Increase this
# value to get additional trace output.
#
cdl_option CYGNUM_LIBC_STRING_STRTOK_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# <
# strdup
# This option indicates whether strdup() is to be supported.
#
cdl_option CYGFUN_LIBC_STRING_STRDUP {
    # ActiveIf constraint: CYGINT_ISO_MALLOC
    #     CYGINT_ISO_MALLOC == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# Provide strnlen() GNU extension
# This option controls support for the strnlen() function.
# (This is a GNU extension, not part of ANSI C.)
#
cdl_option CYGFUN_LIBC_STRING_GNU_STRNLEN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# C library string functions build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_LIBC_STRING_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_LIBC_STRING_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# C library string function tests
# This option specifies the set of tests for the C library
# string functions.
#
cdl_option CYGPKG_LIBC_STRING_TESTS {
    # Calculated value:  "tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2 tests/strnlen" 
    # Flavor: data
    # Current_value: tests/memchr tests/memcmp1 tests/memcmp2 tests/memcpy1 tests/memcpy2 tests/memmove1 tests/memmove2 tests/memset tests/strcat1 tests/strcat2 tests/strchr tests/strcmp1 tests/strcmp2 tests/strcoll1 tests/strcoll2 tests/strcpy1 tests/strcpy2 tests/strcspn tests/strcspn tests/strlen tests/strncat1 tests/strncat2 tests/strncpy1 tests/strncpy2 tests/strpbrk tests/strrchr tests/strspn tests/strstr tests/strtok tests/strxfrm1 tests/strxfrm2 tests/strnlen
};

# <
# <
# ISO C library internationalization functions
# doc: ref/libc.html
# This package provides internationalization functions specified by the
# ISO C standard - ISO/IEC 9899:1990. These include locale-related
# functionality and <ctype.h> functionality.
#
cdl_package CYGPKG_LIBC_I18N {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
};

# >
# Supported locales
# These options determine which locales other than the "C" locale
# are supported and hence contribute to the size of the executable.
#
cdl_component CYGPKG_LIBC_I18N_LOCALES {
    # There is no associated value.
};

# >
# Support for multiple locales required
#
cdl_interface CYGINT_LIBC_I18N_MB_REQUIRED {
    # Implemented by CYGFUN_LIBC_I18N_LOCALE_C_SJIS, active, disabled
    # Implemented by CYGFUN_LIBC_I18N_LOCALE_C_JIS, active, disabled
    # Implemented by CYGFUN_LIBC_I18N_LOCALE_C_EUCJP, active, disabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER ==  "<cyg/libc/i18n/mb.h>" 
    #     CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER == 0
    #   --> 0

    # The following properties are affected by this value
};

# C-SJIS locale support
# This option controls if the "C-SJIS" locale will be
# supported by setlocale().  The locale is a hybrid locale
# that is mostly the "C" locale with Japanese SJIS multibyte
# support added.
#
cdl_option CYGFUN_LIBC_I18N_LOCALE_C_SJIS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE
    #     LegalValues:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2))) to 0x7fffffff 
    # option CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE
    #     DefaultValue:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2)))  
};

# C-JIS locale support
# This option controls if the "C-JIS" locale will be
# supported by setlocale().  The locale is a hybrid locale
# that is mostly the "C" locale with Japanese JIS multibyte
# support added.
#
cdl_option CYGFUN_LIBC_I18N_LOCALE_C_JIS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE
    #     LegalValues:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2))) to 0x7fffffff 
    # option CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE
    #     DefaultValue:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2)))  
};

# C-EUCJP locale support
# This option controls if the "C-EUCJP" locale will be
# supported by setlocale().  The locale is a hybrid locale
# that is mostly the "C" locale with Japanese EUCJP multibyte
# support added.
#
cdl_option CYGFUN_LIBC_I18N_LOCALE_C_EUCJP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE
    #     LegalValues:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2))) to 0x7fffffff 
    # option CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE
    #     DefaultValue:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2)))  
};

# <
# Newlib's ctype implementation
# This option enables the implementation of the ctype functions
# that comes with newlib. It is table driven and therefore
# exhibits different performance characteristics. It also offers
# a limited amount of binary compatibility
# with newlib so that programs linked against newlib ctype/locale
# do not need to be recompiled when linked with eCos.
#
cdl_option CYGPKG_LIBC_I18N_NEWLIB_CTYPE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYGBLD_ISO_CTYPE_HEADER ==  "<cyg/libc/i18n/newlibctype.h>" 
    #     CYGBLD_ISO_CTYPE_HEADER == 0
    #   --> 0
};

# Per-thread multibyte state
# This option controls whether the multibyte character
# handling functions mblen(), mbtowc(), and wctomb(),
# have their state recorded on a per-thread
# basis rather than global. If this option is
# disabled, some per-thread space can be saved.
# Enabling this option will use three slots
# of kernel per-thread data. You should ensure you
# have enough slots configured for all your
# per-thread data.
#
cdl_option CYGSEM_LIBC_I18N_PER_THREAD_MB {
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGVAR_KERNEL_THREADS_DATA != 0 
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1
};

# Size of locale name strings
# This option controls the maximum size of
# locale names and is used, among other things
# to instantiate a static string used
# as a return value from the
# setlocale() function. When requesting the
# current locale settings with LC_ALL, a string
# must be constructed to contain this data, rather
# than just returning a constant string. This
# string data is stored in the static string.
# This depends on the length of locale names,
# hence this option. If just the C locale is
# present, this option can be set as low as 2.
#
cdl_option CYGNUM_LIBC_I18N_MAX_LOCALE_NAME_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2)))  
    #     CYGFUN_LIBC_I18N_LOCALE_C_EUCJP == 0
    #     CYGFUN_LIBC_I18N_LOCALE_C_SJIS == 0
    #     CYGFUN_LIBC_I18N_LOCALE_C_JIS == 0
    #   --> 2
    # Legal values:  (CYGFUN_LIBC_I18N_LOCALE_C_EUCJP ? 8 :  (CYGFUN_LIBC_I18N_LOCALE_C_SJIS ? 7 :   (CYGFUN_LIBC_I18N_LOCALE_C_JIS ? 6 : 2))) to 0x7fffffff 
    #     CYGFUN_LIBC_I18N_LOCALE_C_EUCJP == 0
    #     CYGFUN_LIBC_I18N_LOCALE_C_SJIS == 0
    #     CYGFUN_LIBC_I18N_LOCALE_C_JIS == 0
};

# Inline versions of <ctype.h> functions
# This option chooses whether the simple character
# classification and conversion functions (e.g.
# isupper(), isalpha(), toupper(), etc.)
# from <ctype.h> are available as inline
# functions. This may improve performance and as
# the functions are small, may even improve code
# size.
#
cdl_option CYGIMP_LIBC_I18N_CTYPE_INLINES {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
    # Requires:  CYGBLD_ISO_CTYPE_HEADER ==  "<cyg/libc/i18n/ctype.inl>" 
    #     CYGBLD_ISO_CTYPE_HEADER == 0
    #   --> 0
};

# C library i18n functions build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_LIBC_I18N_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_LIBC_I18N_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the C library. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_LIBC_I18N_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# C library i18n function tests
# This option specifies the set of tests for the C library
# i18n functions.
#
cdl_option CYGPKG_LIBC_I18N_TESTS {
    # Calculated value:  "tests/ctype tests/setlocale tests/i18nmb" 
    # Flavor: data
    # Current_value: tests/ctype tests/setlocale tests/i18nmb
};

# <
# <
# ISO C library general utility functions
# doc: ref/libc.html
# This package provides general utility functions in <stdlib.h>
# as specified by the ISO C standard - ISO/IEC 9899:1990.
#
cdl_package CYGPKG_LIBC_STDLIB {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires: CYGINT_ISO_CTYPE
    #     CYGINT_ISO_CTYPE == 1
    #   --> 1
    # Requires: CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1
};

# >
# Inline versions of <stdlib.h> functions
# This option chooses whether some of the
# particularly simple standard utility functions
# from <stdlib.h> are available as inline
# functions. This may improve performance, and as
# the functions are small, may even improve code
# size.
#
cdl_component CYGIMP_LIBC_STDLIB_INLINES {
    # There is no associated value.
};

# >
# abs() / labs()
#
cdl_option CYGIMP_LIBC_STDLIB_INLINE_ABS {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
    # Requires:  CYGBLD_ISO_STDLIB_ABS_HEADER ==  "<cyg/libc/stdlib/abs.inl>" 
    #     CYGBLD_ISO_STDLIB_ABS_HEADER == 0
    #   --> 0
};

# div() / ldiv()
#
cdl_option CYGIMP_LIBC_STDLIB_INLINE_DIV {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
    # Requires:  CYGBLD_ISO_STDLIB_DIV_HEADER ==  "<cyg/libc/stdlib/div.inl>" 
    #     CYGBLD_ISO_STDLIB_DIV_HEADER == 0
    #   --> 0
};

# atof() / atoi() / atol()
#
cdl_option CYGIMP_LIBC_STDLIB_INLINE_ATOX {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
    # Requires:  CYGBLD_ISO_STDLIB_STRCONV_HEADER ==  "<cyg/libc/stdlib/atox.inl>" 
    #     CYGBLD_ISO_STDLIB_STRCONV_HEADER == 0
    #   --> 0
};

# <
# Random number generation
# These options control the behaviour of the
# functions rand(), srand() and rand_r()
#
cdl_component CYGPKG_LIBC_RAND {
    # There is no associated value.
};

# >
# Per-thread random seed
# doc: ref/libc-thread-safety.html
# This option controls whether the pseudo-random
# number generation functions rand() and srand()
# have their state recorded on a per-thread
# basis rather than global. If this option is
# disabled, some per-thread space can be saved.
# Note there is also a POSIX-standard rand_r()
# function to achieve a similar effect with user
# support. Enabling this option will use one slot
# of kernel per-thread data. You should ensure you
# have enough slots configured for all your
# per-thread data.
#
cdl_option CYGSEM_LIBC_PER_THREAD_RAND {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1
};

# Random number seed
# This selects the initial random number seed for
# rand()'s pseudo-random number generator. For
# strict ISO standard compliance, this should be 1,
# as per section 7.10.2.2 of the standard.
#
cdl_option CYGNUM_LIBC_RAND_SEED {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values: 0 to 0x7fffffff
};

# Tracing level
# Trace verbosity level for debugging the rand(),
# srand() and rand_r() functions. Increase this
# value to get additional trace output.
#
cdl_option CYGNUM_LIBC_RAND_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# Simplest implementation
# This provides a very simple implementation of rand()
# that does not perform well with randomness in the
# lower significant bits. However it is exceptionally
# fast. It uses the sample algorithm from the ISO C
# standard itself.
#
cdl_option CYGIMP_LIBC_RAND_SIMPLEST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Simple implementation #1
# This provides a very simple implementation of rand()
# based on the simplest implementation above. However
# it does try to work around the lack of randomness
# in the lower significant bits, at the expense of a
# little speed.
#
cdl_option CYGIMP_LIBC_RAND_SIMPLE1 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Knuth implementation #1
# This implements a slightly more complex algorithm
# published in Donald E. Knuth's Art of Computer
# Programming Vol.2 section 3.6 (p.185 in the 3rd ed.).
# This produces better random numbers than the
# simplest approach but is slower.
#
cdl_option CYGIMP_LIBC_RAND_KNUTH1 {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Provides strtod()
# This option allows use of the utility function
# strtod() (and consequently atof()) to convert
# from string to double precision floating point
# numbers. Disabling this option removes the
# dependency on the math library package.
#
cdl_option CYGFUN_LIBC_strtod {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value:  0 != CYGPKG_LIBM 
    #     CYGPKG_LIBM == current
    #   --> 1
    # Requires: CYGPKG_LIBM
    #     CYGPKG_LIBM == current
    #   --> 1
};

# Provides long long conversion functions
# Enabling this option will provide support for the strtoll(),
# strtoull() and atoll() conversion functions, which are
# the long long variants of the standard versions of these
# functions. Supporting this requires extra code and compile
# time.
#
cdl_option CYGFUN_LIBC_STDLIB_CONV_LONGLONG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# bsearch() tracing level
# Trace verbosity level for debugging the <stdlib.h>
# binary search function bsearch(). Increase this
# value to get additional trace output.
#
cdl_option CYGNUM_LIBC_BSEARCH_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# qsort() tracing level
# Trace verbosity level for debugging the <stdlib.h>
# quicksort function qsort(). Increase this value
# to get additional trace output.
#
cdl_option CYGNUM_LIBC_QSORT_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# C library stdlib build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_LIBC_STDLIB_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_LIBC_STDLIB_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_LIBC_STDLIB_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# C library stdlib tests
# This option specifies the set of tests for this package.
#
cdl_option CYGPKG_LIBC_STDLIB_TESTS {
    # Calculated value:  "tests/abs tests/atoi tests/atol tests/bsearch tests/div tests/getenv tests/labs tests/ldiv tests/qsort tests/rand1 tests/rand2 tests/rand3 tests/rand4 tests/srand tests/strtol tests/strtoul" 
    # Flavor: data
    # Current_value: tests/abs tests/atoi tests/atol tests/bsearch tests/div tests/getenv tests/labs tests/ldiv tests/qsort tests/rand1 tests/rand2 tests/rand3 tests/rand4 tests/srand tests/strtol tests/strtoul
};

# <
# <
# <
# Freescale UART header
# This pacckage provides header file with definitions and macros for
# Freescale UART. Same header is used by Freescale UART serial driver
# as well as by HAL. Freescale UART is on-chip serial controller found
# on some Freescale micro-controllers such as Kinetis familly, etc.
#
cdl_package CYGPKG_IO_SERIAL_FREESCALE_UART_HDR {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_IO_SERIAL_FREESCALE_UART
    #     Requires: CYGPKG_IO_SERIAL_FREESCALE_UART_HDR
};

# eCos HAL
# doc: ref/the-ecos-hardware-abstraction-layer.html
# The eCos HAL package provide a porting layer for
# higher-level parts of the system such as the kernel and the
# C library. Each installation should have HAL packages for
# one or more architectures, and for each architecture there
# may be one or more supported platforms. It is necessary to
# select one target architecture and one platform for that
# architecture. There are also a number of configuration
# options that are common to all HAL packages.
#
cdl_package CYGPKG_HAL {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_INFRA
    #     CYGPKG_INFRA == current
    #   --> 1

    # The following properties are affected by this value
};

# >
# Platform-independent HAL options
# A number of configuration options are common to most or all
# HAL packages, for example options controlling how much state
# should be saved during a context switch. The implementations
# of these options will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON {
    # There is no associated value.
};

# >
# Provide eCos kernel support
# The HAL can be configured to either support the full eCos
# kernel, or to support only very simple applications which do
# not require a full kernel. If kernel support is not required
# then some of the startup, exception, and interrupt handling
# code can be eliminated.
#
cdl_option CYGFUN_HAL_COMMON_KERNEL_SUPPORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1
};

# HAL exception support
# When a processor exception occurs, for example an attempt to
# execute an illegal instruction or to perform a divide by
# zero, this exception may be handled in a number of different
# ways. If the target system has gdb support then typically
# the exception will be handled by gdb code. Otherwise if the
# HAL exception support is enabled then the HAL will invoke a
# routine deliver_exception(). Typically this routine will be
# provided by the eCos kernel, but it is possible for
# application code to provide its own implementation. If the
# HAL exception support is not enabled and a processor
# exception occurs then the behaviour of the system is
# undefined.
#
cdl_option CYGPKG_HAL_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS == 1
    #   --> 1
    # Requires: CYGPKG_KERNEL_EXCEPTIONS
    #     CYGPKG_KERNEL_EXCEPTIONS == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGPKG_KERNEL_EXCEPTIONS
    #     Requires: CYGPKG_HAL_EXCEPTIONS
};

# Stop calling constructors early
# This option supports environments where some constructors
# must be run in the context of a thread rather than at
# simple system startup time. A boolean flag named
# cyg_hal_stop_constructors is set to 1 when constructors
# should no longer be invoked. It is up to some other
# package to deal with the rest of the constructors.
# In the current version this is only possible with the
# C library.
#
cdl_option CYGSEM_HAL_STOP_CONSTRUCTORS_ON_FLAG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS
    #     CYGSEM_LIBC_INVOKE_DEFAULT_STATIC_CONSTRUCTORS (unknown) == 0
    #   --> 0
};

# HAL uses the MMU and allows for CDL manipulation of it's use
#
cdl_interface CYGINT_HAL_SUPPORTS_MMU_TABLES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     ActiveIf: CYGINT_HAL_SUPPORTS_MMU_TABLES
};

# Install MMU tables.
# This option controls whether this application installs
# its own Memory Management Unit (MMU) tables, or relies on the
# existing environment to run.
#
cdl_option CYGSEM_HAL_INSTALL_MMU_TABLES {
    # This option is not active
    # ActiveIf constraint: CYGINT_HAL_SUPPORTS_MMU_TABLES
    #     CYGINT_HAL_SUPPORTS_MMU_TABLES == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYG_HAL_STARTUP != "RAM" 
    #     CYG_HAL_STARTUP == MRAM
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_STATIC_MMU_TABLES
    #     Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
};

# Use static MMU tables.
# This option defines an environment where any Memory
# Management Unit (MMU) tables are constant.  Normally used by ROM
# based environments, this provides a way to save RAM usage which
# would otherwise be required for these tables.
#
cdl_option CYGSEM_HAL_STATIC_MMU_TABLES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGSEM_HAL_INSTALL_MMU_TABLES
    #     CYGSEM_HAL_INSTALL_MMU_TABLES == 0
    #   --> 0
};

# Route diagnostic output to debug channel
# If not inheriting the console setup from the ROM monitor,
# it is possible to redirect diagnostic output to the debug
# channel by enabling this option. Depending on the debugger
# used it may also be necessary to select a mangler for the
# output to be displayed by the debugger.
#
cdl_component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN {
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #   --> 1
    # ActiveIf constraint:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    #     CYGPKG_HAL_ARM (unknown) == 0
    #     CYGPKG_HAL_POWERPC_MPC8xx (unknown) == 0
    #     CYGPKG_HAL_V85X_V850 (unknown) == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0

    # The following properties are affected by this value
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# >
# Mangler used on diag output
# It is sometimes necessary to mangle (encode) the
# diag ASCII text output in order for it to show up at the
# other end. In particular, GDB may silently ignore raw
# ASCII text.
#
cdl_option CYGSEM_HAL_DIAG_MANGLER {
    # This option is not active
    # The parent CYGDBG_HAL_DIAG_TO_DEBUG_CHAN is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value GDB
    # value_source default
    # Default value: GDB
    # Legal values: "GDB" "None"
};

# <
# Grouped libraries for linking
# This option provides a list of libraries used to satisfy
# linker dependencies, but necessary for building eCos. It is passed
# to a GROUP() directive in the linker script, which is analogous
# to using the "-(" aka "--start-group", and "-)" aka
# "--end-group" options on the linker command line.
# It provides a similar function to adding "-llibname" to the
# linker, but with the added feature that each library in the group
# is scanned in turn for unresolved symbols, and this process is
# repeated until there are no more unresolved symbols. This is important
# for system libraries as there are often mutual dependencies.
# This option should not be used for adding application specific
# libraries. That should be done in the application's own makefile
# or link line.
# Users wishing to use the GNU Compiler prior to GCC 3.0 will
# need to remove libsupc++.a from this option.
# Note that libtarget.a is always required to build eCos.
#
cdl_component CYGBLD_HAL_LINKER_GROUPED_LIBS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "libtarget.a libgcc.a libsupc++.a"
    # value_source default
    # Default value: CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT
    #     CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT == "libtarget.a libgcc.a libsupc++.a"
    #   --> "libtarget.a libgcc.a libsupc++.a"
    # Requires:  is_substr(CYGBLD_HAL_LINKER_GROUPED_LIBS, "libtarget.a") 
    #     CYGBLD_HAL_LINKER_GROUPED_LIBS == "libtarget.a libgcc.a libsupc++.a"
    #   --> 1

    # The following properties are affected by this value
    # component CYGBLD_HAL_LINKER_GROUPED_LIBS
    #     Requires:  is_substr(CYGBLD_HAL_LINKER_GROUPED_LIBS, "libtarget.a") 
};

# >
# Default setting
# This option is intended to be used by other eCos packages (including
# HAL packages) to provide a different default value for
# CYGBLD_HAL_LINKER_GROUPED_LIBS.
# This is separated into its own option to continue to
# allow the user to make customisations to the grouped library
# list.
#
cdl_option CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "libtarget.a libgcc.a libsupc++.a"
    # value_source default
    # Default value: "libtarget.a libgcc.a libsupc++.a"

    # The following properties are affected by this value
    # component CYGBLD_HAL_LINKER_GROUPED_LIBS
    #     DefaultValue: CYGBLD_HAL_LINKER_GROUPED_LIBS_DEFAULT
};

# <
# <
# HAL interrupt handling
# A number of configuration options related to interrupt
# handling are common to most or all HAL packages, even though
# the implementations will vary from architecture to
# architecture.
#
cdl_component CYGPKG_HAL_COMMON_INTERRUPTS {
    # There is no associated value.
};

# >
# Use separate stack for interrupts
# When an interrupt occurs this interrupt can be handled either
# on the current stack or on a separate stack maintained by the
# HAL. Using a separate stack requires a small number of extra
# instructions in the interrupt handling code, but it has the
# advantage that it is no longer necessary to allow extra space
# in every thread stack for the interrupt handlers. The amount
# of extra space required depends on the interrupt handlers
# that are being used.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_USE_INTERRUPT_STACK {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Interrupt stack size
# This configuration option specifies the stack size in bytes
# for the interrupt stack. Typically this should be a multiple
# of 16, but the exact requirements will vary from architecture
# to architecture. The interrupt stack serves two separate
# purposes. It is used as the stack during system
# initialization. In addition, if the interrupt system is
# configured to use a separate stack then all interrupts will
# be processed on this stack. The exact memory requirements
# will vary from application to application, and will depend
# heavily on whether or not other interrupt-related options,
# for example nested interrupts, are enabled. On most targets,
# in a configuration with no kernel this stack will also be
# the stack used to invoke the application, and must obviously
# be appropriately large in that case.
#
cdl_option CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4096
    # value_source default
    # Default value:  CYGPKG_KERNEL ? 4096 : 32768 
    #     CYGPKG_KERNEL == current
    #   --> 4096
    # Legal values: 128 to 1048576
};

# Allow nested interrupts
# When an interrupt occurs the HAL interrupt handling code can
# either leave interrupts disabled for the duration of the
# interrupt handling code, or by doing some extra work it can
# reenable interrupts before invoking the interrupt handler and
# thus allow nested interrupts to happen. If all the interrupt
# handlers being used are small and do not involve any loops
# then it is usually better to disallow nested interrupts.
# However if any of the interrupt handlers are more complicated
# than nested interrupts will usually be required.
#
cdl_option CYGSEM_HAL_COMMON_INTERRUPTS_ALLOW_NESTING {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Save minimum context on interrupt
# The HAL interrupt handling code can exploit the calling conventions
# defined for a given architecture to reduce the amount of state
# that has to be saved. Generally this improves performance and
# reduces code size. However it can make source-level debugging
# more difficult.
#
cdl_option CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
};

# Chain all interrupts together
# Interrupts can be attached to vectors either singly, or be
# chained together. The latter is necessary if there is no way
# of discovering which device has interrupted without
# inspecting the device itself. It can also reduce the amount
# of RAM needed for interrupt decoding tables and code.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGIMP_KERNEL_INTERRUPTS_CHAIN
    #     Requires: CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN
};

# Ignore spurious [fleeting] interrupts
# On some hardware, interrupt sources may not be de-bounced or
# de-glitched.  Rather than try to handle these interrupts (no
# handling may be possible), this option allows the HAL to simply
# ignore them.  In most cases, if the interrupt is real it will
# reoccur in a detectable form.
#
cdl_option CYGIMP_HAL_COMMON_INTERRUPTS_IGNORE_SPURIOUS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# HAL context switch support
# A number of configuration options related to thread contexts
# are common to most or all HAL packages, even though the
# implementations will vary from architecture to architecture.
#
cdl_component CYGPKG_HAL_COMMON_CONTEXT {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Use minimum thread context
# The thread context switch code can exploit the calling
# conventions defined for a given architecture to reduce the
# amount of state that has to be saved during a context
# switch. Generally this improves performance and reduces
# code size. However it can make source-level debugging more
# difficult.
#
cdl_option CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
};

# <
# Explicit control over cache behaviour
# These options let the default behaviour of the caches 
# be easily configurable.
#
cdl_component CYGPKG_HAL_CACHE_CONTROL {
    # There is no associated value.
};

# >
# Enable DATA cache on startup
# Enabling this option will cause the data cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the data cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_component CYGSEM_HAL_ENABLE_DCACHE_ON_STARTUP {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# >
# DATA cache mode on startup
# This option controls the mode the cache will be set to
# when enabled on startup.
#
cdl_option CYGSEM_HAL_DCACHE_STARTUP_MODE {
    # This option is not active
    # The parent CYGSEM_HAL_ENABLE_DCACHE_ON_STARTUP is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value COPYBACK
    # value_source default
    # Default value: COPYBACK
    # Legal values:  "COPYBACK" "WRITETHRU" 
};

# <
# Enable INSTRUCTION cache on startup
# Enabling this option will cause the instruction cache to be enabled
# as soon as practicable when eCos starts up.  One would choose
# to disable this if the instruction cache cannot safely be turned on,
# such as a case where the cache(s) require additional platform
# specific setup.
#
cdl_option CYGSEM_HAL_ENABLE_ICACHE_ON_STARTUP {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# <
# Source-level debugging support
# If the source level debugger gdb is to be used for debugging
# application code then it may be necessary to configure in support
# for this in the HAL.
#
cdl_component CYGPKG_HAL_DEBUG {
    # There is no associated value.
};

# >
# Support for GDB stubs
# The HAL implements GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS {
    # Implemented by CYGPKG_HAL_CORTEXM_KINETIS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS
};

# Include GDB stubs in HAL
# This option causes a set of GDB stubs to be included into the
# system. On some target systems the GDB support will be
# provided by other means, for example by a ROM monitor. On
# other targets, especially when building a ROM-booting system,
# the necessary support has to go into the target library
# itself. When GDB stubs are include in a configuration, HAL
# serial drivers must also be included.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS
    #     CYGINT_HAL_DEBUG_GDB_STUBS == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT
    #     CYGDBG_HAL_COMMON_INTERRUPTS_SAVE_MINIMUM_CONTEXT == 0
    #   --> 1
    # Requires: ! CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM
    #     CYGDBG_HAL_COMMON_CONTEXT_SAVE_MINIMUM == 0
    #   --> 1
    # Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_DIAG == 1
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     DefaultValue: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     DefaultValue:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGBLD_BUILD_COMMON_GDB_STUBS
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    # option CYGPKG_HAL_GDB_FILEIO
    #     Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
};

# Support for external break support in GDB stubs
# The HAL implements external break (or asynchronous interrupt)
# in the GDB stubs for the target.
#
cdl_interface CYGINT_HAL_DEBUG_GDB_STUBS_BREAK {
    # Implemented by CYGPKG_HAL_CORTEXM_KINETIS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     ActiveIf: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
};

# Include GDB external break support for stubs
# This option causes the GDB stub to add a serial interrupt handler
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT in that it is used when
# GDB stubs are present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_DEBUG_GDB_STUBS_BREAK
    #     CYGINT_HAL_DEBUG_GDB_STUBS_BREAK == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #   --> 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
};

# Platform does not support CTRLC
#
cdl_interface CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
};

# Include GDB external break support when no stubs
# This option adds an interrupt handler for the GDB serial line
# which will listen for GDB break packets. This lets you stop the
# target asynchronously when using GDB, usually by hitting Control+C
# or pressing the STOP button. This option differs from
# CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT in that it is used when the GDB
# stubs are NOT present.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT {
    # This option is not active
    # ActiveIf constraint:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #   --> 0
    # ActiveIf constraint:  CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0 
    #     CYGINT_HAL_DEBUG_GDB_CTRLC_UNSUPPORTED == 0
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  !CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #   --> 1
    # Requires: !CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT == 0
    #   --> 1
};

# Include GDB multi-threading debug support
# This option enables some extra HAL code which is needed
# to support multi-threaded source level debugging.
#
cdl_option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT {
    # This option is not active
    # ActiveIf constraint:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
    #     CYGSEM_HAL_ROM_MONITOR == 0
    #     CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT == 0
    #   --> 0

    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # option CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT
    #     Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
};

# Number of times to retry sending a $O packet
# This option controls the number of attempts that eCos programs
# will make to send a $O packet to a host GDB process.  If it is
# set non-zero, then the target process will attempt to resend the
# $O packet data up to this number of retries.  Caution: use of
# this option is not recommended as it can thoroughly confuse the
# host GDB process.
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Timeout period for GDB packets
# This option controls the time (in milliseconds) that eCos programs
# will wait for a response when sending packets to a host GDB process.
# If this time elapses, then the packet will be resent, up to some
# maximum number of times (CYGNUM_HAL_DEBUG_GDB_PROTOCOL_RETRIES).
#
cdl_option CYGNUM_HAL_DEBUG_GDB_PROTOCOL_TIMEOUT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 500
    # value_source default
    # Default value: 500
};

# Location of CRC32 table
# The stubs use a 1 kilobyte CRC table that can either be pregenerated
# and placed in ROM, or generated at runtime in RAM. Depending on
# your memory constraints, one of these options may be better.
#
cdl_option CYGDBG_HAL_CRCTABLE_LOCATION {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value RAM
    # value_source default
    # Default value: RAM
    # Legal values: "ROM" "RAM"

    # The following properties are affected by this value
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  CYGDBG_HAL_CRCTABLE_LOCATION == "ROM" 
};

# <
# ROM monitor support
# Support for ROM monitors can be built in to your application. 
# It may also be relevant to build your application as a ROM monitor
# itself. Such options are contained here if relevant for your chosen
# platform. The options and ROM monitors available to choose are
# platform-dependent.
#
cdl_component CYGPKG_HAL_ROM_MONITOR {
    # There is no associated value.

    # The following properties are affected by this value
};

# >
# Target has virtual vector support
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT {
    # Implemented by CYGPKG_HAL_CORTEXM_KINETIS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
    #     ActiveIf: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
};

# Target supports baud rate control via vectors
# Whether this target supports the __COMMCTL_GETBAUD
# and __COMMCTL_SETBAUD virtual vector comm control operations.
#
cdl_interface CYGINT_HAL_VIRTUAL_VECTOR_COMM_BAUD_SUPPORT {
    # Implemented by CYGPKG_HAL_CORTEXM_KINETIS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
};

# Enable use of virtual vector calling interface
# Virtual vector support allows the HAL to let the ROM
# monitor handle certain operations. The virtual vector table
# defines a calling interface between applications running in
# RAM and the ROM monitor.
#
cdl_component CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT {
    # ActiveIf constraint: CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT
    #     CYGINT_HAL_VIRTUAL_VECTOR_SUPPORT == 1
    #   --> 1

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # package CYGPKG_DEVS_ETH_PHY
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_SUPPORT
};

# >
# Inherit console settings from ROM monitor
# When this option is set, the application will inherit
# the console as set up by the ROM monitor. This means
# that the application will use whatever channel and
# mangling style was used by the ROM monitor when
# the application was launched.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE {
    # This option is not active
    # ActiveIf constraint: CYGSEM_HAL_USE_ROM_MONITOR
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 0
    #   --> 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    # option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     Calculated:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
};

# Debug channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the debug channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE {
    # Calculated value:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 0
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
};

# Console channel is configurable
# This option is a configuration hint - it is enabled
# when the HAL initialization code will make use
# of the console channel configuration option.
#
cdl_option CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE {
    # Calculated value:  !CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE  && !CYGDBG_HAL_DIAG_TO_DEBUG_CHAN 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE == 0
    #     CYGDBG_HAL_DIAG_TO_DEBUG_CHAN == 0
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     ActiveIf: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
};

# Initialize whole of virtual vector table
# This option will cause the whole of the virtual
# vector table to be initialized with dummy values on
# startup. When this option is enabled, all the
# options below must also be enabled - or the
# table would be empty when the application
# launches.
# On targets where older ROM monitors without
# virtual vector support may still be in use, it is
# necessary for RAM applictions to initialize the
# table (since all HAL diagnostics and debug IO
# happens via the table).
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
    #     CYG_HAL_STARTUP == MRAM
    #     CYGSEM_HAL_USE_ROM_MONITOR == 0
    #   --> 1
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET == 0
    #   --> 0
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US == 0
    #   --> 0
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA == 0
    #   --> 0
    # Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT
    #     ActiveIf: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_VERSION
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
};

# Claim virtual vector table entries by default
# By default most virtual vectors will be claimed by
# RAM startup configurations, meaning that the RAM
# application will provide the services. The
# exception is COMMS support (HAL
# diagnostics/debugging IO) which is left in the
# control of the ROM monitor.
# The reasoning behind this is to get as much of the
# code exercised during regular development so it
# is known to be working the few times a new ROM
# monitor or a ROM production configuration is used
# - COMMS are excluded only by necessity in order to
# avoid breaking an existing debugger connections
# (there may be ways around this).
# For production RAM configurations this option can
# be switched off, causing the appliction to rely on
# the ROM monitor for these services, thus
# saving some space.
# Individual vectors may also be left unclaimed,
# controlled by the below options (meaning that the
# associated service provided by the ROM monitor
# will be used).
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT {
    # ActiveIf constraint: !CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 0
    #   --> 1

    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
    #     DefaultValue:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
};

# Claim reset virtual vectors
# This option will cause the reset and kill_by_reset
# virtual vectors to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_RESET
};

# Claim version virtual vectors
# This option will cause the version
# virtual vectors to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_VERSION {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 0
    #   --> 0
};

# Claim delay_us virtual vector
# This option will cause the delay_us
# virtual vector to be claimed.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DELAY_US
};

# Claim data virtual vectors
# This option will cause the data virtual vectors
# to be claimed. At present there is only one, used
# by the RedBoot ethernet driver to share diag output.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 0
    #     CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DEFAULT == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_DATA
};

# Claim comms virtual vectors
# This option will cause the communication tables
# that are part of the virtual vectors mechanism to
# be claimed. Note that doing this may cause an
# existing ROM monitor communication connection to
# be closed. For this reason, the option is disabled
# per default for normal application
# configurations.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE  || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    #     CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE == 0
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     DefaultValue:  !CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     Calculated:  CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     Requires: CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS
};

# Do diagnostic IO via virtual vector table
# All HAL IO happens via the virtual vector table / comm
# tables when those tables are supported by the HAL.
# If so desired, the low-level IO functions can
# still be provided by the RAM application by
# enabling the CLAIM_COMMS option.
#
cdl_option CYGSEM_HAL_VIRTUAL_VECTOR_DIAG {
    # Calculated value: 1
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     ActiveIf:  CYGPKG_HAL_ARM || CYGPKG_HAL_POWERPC_MPC8xx  || CYGPKG_HAL_V85X_V850 || CYGSEM_HAL_VIRTUAL_VECTOR_DIAG 
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires:  !CYGSEM_HAL_VIRTUAL_VECTOR_DIAG  || CYGSEM_HAL_VIRTUAL_VECTOR_CLAIM_COMMS 
};

# <
# Behave as a ROM monitor
# Enable this option if this program is to be used as a ROM monitor,
# i.e. applications will be loaded into RAM on the board, and this
# ROM monitor may process exceptions or interrupts generated from the
# application. This enables features such as utilizing a separate
# interrupt stack when exceptions are generated.
#
cdl_option CYGSEM_HAL_ROM_MONITOR {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "JTAG" 
    #     CYG_HAL_STARTUP == MRAM
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0
    # Requires:  CYGDBG_HAL_CRCTABLE_LOCATION == "ROM" 
    #     CYGDBG_HAL_CRCTABLE_LOCATION == RAM
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
};

# Work with a ROM monitor
# Support can be enabled for different varieties of ROM monitor.
# This support changes various eCos semantics such as the encoding
# of diagnostic output, or the overriding of hardware interrupt
# vectors.
# Firstly there is "Generic" support which prevents the HAL
# from overriding the hardware vectors that it does not use, to
# instead allow an installed ROM monitor to handle them. This is
# the most basic support which is likely to be common to most
# implementations of ROM monitor.
# "GDB_stubs" provides support when GDB stubs are included in
# the ROM monitor or boot ROM.
#
cdl_option CYGSEM_HAL_USE_ROM_MONITOR {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0 0
    # Legal values:  "Generic" "GDB_stubs" 
    # Requires:  CYG_HAL_STARTUP == "RAM" 
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     Requires: ! CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_USE_ROM_MONITOR || CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS 
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INHERIT_CONSOLE
    #     ActiveIf: CYGSEM_HAL_USE_ROM_MONITOR
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
};

# <
# Platform defined I/O channels
# Platforms which provide additional I/O channels can implement
# this interface, indicating that the function plf_if_init()
# needs to be called.
#
cdl_interface CYGINT_HAL_PLF_IF_INIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Platform IDE I/O support
# Platforms which provide IDE controllers can implement
# this interface, indicating that IDE I/O macros are
# available.
#
cdl_interface CYGINT_HAL_PLF_IF_IDE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
};

# Saved interrupt state required
# Components requiring access to saved interrupt state via the
# hal_saved_interrupt_state symbol should implement this
# interface.
#
cdl_interface CYGINT_HAL_COMMON_SAVED_INTERRUPT_STATE_REQUIRED {
    # Implemented by CYGDBG_HAL_DEBUG_GDB_BREAK_SUPPORT, active, disabled
    # Implemented by CYGDBG_HAL_DEBUG_GDB_CTRLC_SUPPORT, inactive, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
};

# File I/O operations via GDB
# This option enables support for various file I/O
# operations using the GDB remote protocol to communicate
# with GDB. The operations are then performed on the
# debugging host by proxy. These operations are only
# currently available by using a system call interface
# to RedBoot. This may change in the future.
#
cdl_option CYGPKG_HAL_GDB_FILEIO {
    # This option is not active
    # ActiveIf constraint: CYGSEM_REDBOOT_BSP_SYSCALLS
    #     CYGSEM_REDBOOT_BSP_SYSCALLS (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS
    #     CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS == 0
    #   --> 0
};

# Build Compiler sanity checking tests
# Enabling this option causes compiler tests to be built.
#
cdl_option CYGPKG_HAL_BUILD_COMPILER_TESTS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_TESTS
    #     Calculated:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
};

# Common HAL tests
# This option specifies the set of tests for the common HAL.
#
cdl_component CYGPKG_HAL_TESTS {
    # Calculated value:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
    #     CYGINT_HAL_TESTS_NO_CACHES == 0
    #     CYGPKG_HAL_BUILD_COMPILER_TESTS == 0
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    # Flavor: data
    # Current_value: tests/context tests/basic tests/cache
};

# >
# Interface for cache presence
# Some architectures and/or platforms do not have caches. By
# implementing this interface, these can disable the various
# cache-related tests.
#
cdl_interface CYGINT_HAL_TESTS_NO_CACHES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_TESTS
    #     Calculated:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
};

# <
# Cortex-M Architecture
# This package provides generic support for the ARM Cortex-M architecture.
# It is also necessary to select a variant and platform HAL package.
#
cdl_package CYGPKG_HAL_CORTEXM {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    #     CYGHWR_HAL_CORTEXM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O0 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #   --> 1
    # Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
    #     CYGHWR_HAL_CORTEXM_BIGENDIAN == 0
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O0 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #     CYGBLD_GLOBAL_LDFLAGS == "-mcpu=cortex-m3 -mthumb -Wl,--gc-sections -Wl,-static -Wl,-n -g -nostdlib"
    #   --> 1

    # The following properties are affected by this value
};

# >
# The platform and architecture supports Big Endian operation
#
cdl_interface CYGINT_HAL_CORTEXM_BIGENDIAN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_BIGENDIAN
    #     ActiveIf:  CYGINT_HAL_CORTEXM_BIGENDIAN != 0 
};

# Use big-endian mode
# Use the CPU in big-endian mode.
#
cdl_option CYGHWR_HAL_CORTEXM_BIGENDIAN {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_CORTEXM_BIGENDIAN != 0 
    #     CYGINT_HAL_CORTEXM_BIGENDIAN == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             is_substr(CYGBLD_GLOBAL_CFLAGS,   " -mbig-endian ") &&
    #             is_substr(CYGBLD_GLOBAL_LDFLAGS,  " -mbig-endian ") 
    # package CYGPKG_HAL_CORTEXM
    #     Requires:  !CYGHWR_HAL_CORTEXM_BIGENDIAN implies
    #             !is_substr(CYGBLD_GLOBAL_CFLAGS,  " -mbig-endian ") &&
    #             !is_substr(CYGBLD_GLOBAL_LDFLAGS, " -mbig-endian ") 
};

# Cortex-M CPU family
# The Cortex-M architecture has two variants at present. The
# M3 and M4 are based on the ARMV7 architecture specification
# and execute the Thumb2 instruction set. The M4 in addition
# to M3 instruction set has SIMD and optional single precision
# floating point instructions.
#
cdl_option CYGHWR_HAL_CORTEXM {
    # Flavor: data
    user_value M4
    # value_source user
    # Default value: M3
    # Legal values:  "M3" "M4" 

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM_KINETIS
    #     Requires:  CYGHWR_HAL_CORTEXM == "M4" 
};

# System tick timer clock
# Select the Cortex-M system tick timer clock source.
#
cdl_option CYGHWR_HAL_CORTEXM_SYSTICK_CLK_SOURCE {
    # Flavor: data
    user_value INTERNAL
    # value_source user
    # Default value: EXTERNAL
    # Legal values:  "EXTERNAL" "INTERNAL" 

    # The following properties are affected by this value
    # package CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM
    #     Requires:  CYGHWR_HAL_CORTEXM_SYSTICK_CLK_SOURCE == "INTERNAL" 
};

# The platform and architecture contains floating point unit.
#
cdl_interface CYGINT_HAL_CORTEXM_FPU {
    # Implemented by CYGHWR_HAL_CORTEXM_KINETIS_FPU, active, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_FPU
    #     ActiveIf:  CYGINT_HAL_CORTEXM_FPU != 0 
    # option CYGHWR_HAL_CORTEXM_FPU
    #     DefaultValue: CYGINT_HAL_CORTEXM_FPU
};

# Floating Point Unit
# Use the Floating Point Unit.
#
cdl_option CYGHWR_HAL_CORTEXM_FPU {
    # This option is not active
    # ActiveIf constraint:  CYGINT_HAL_CORTEXM_FPU != 0 
    #     CYGINT_HAL_CORTEXM_FPU == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_CORTEXM_FPU
    #     CYGINT_HAL_CORTEXM_FPU == 0
    #   --> 0
};

# Architecture optimized endian functions
# Cortex-M architecture implements instructions for endian
# manipulation (byte swapping).  If enabled, this feature
# can produce shorter and faster code for that.
#
cdl_option CYGIMP_HAL_ARCH_ENDIAN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Maximum usable priority
# Calculate the maximum exception priority that can be set by interrupts.
# Higher priorities are reserved for the DEBUG and SVC traps.
#
cdl_option CYGNUM_HAL_CORTEXM_PRIORITY_MAX {
    # Calculated value: 1<<(8-CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS)
    #     CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS == 4
    # Flavor: data
    # Current_value: 16
};

# Linker script
#
cdl_option CYGBLD_LINKER_SCRIPT {
    # Calculated value:  "src/cortexm.ld" 
    # Flavor: data
    # Current_value: src/cortexm.ld
};

# Number of breakpoints supported by the HAL.
# This option determines the number of breakpoints supported by the HAL.
#
cdl_option CYGNUM_HAL_BREAKPOINT_LIST_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
};

# Freescale Kinetis Cortex-M4 Variant
# This package provides generic support for the Freescale Cortex-M4
# based Kinetis microcontroller family.
# It is also necessary to select a variant and platform HAL package.
#
cdl_package CYGPKG_HAL_CORTEXM_KINETIS {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGHWR_HAL_CORTEXM == "M4" 
    #     CYGHWR_HAL_CORTEXM == M4
    #   --> 1

    # The following properties are affected by this value
};

# >
# Kinetis part
# Kinetis family has several sub-families, with various peripheral
# sets and CPU options. Each sub-family consists of several
# members differing by sizes of on-chip FLASH and SRAM. This
# control, enables the user to build Kinetis member part and so
# tailor HAL for a specific microcontroller by selection of
# microcontroller's properties such as microcontroller sub-family,
# memory options, etc.
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS {
    # Calculated value:  "MK" . CYGHWR_HAL_CORTEXM_KINETIS_SUBFAM .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FPU ? "F" : "D") .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "X" : "N") .
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME 
    #     CYGHWR_HAL_CORTEXM_KINETIS_SUBFAM == 60
    #     CYGHWR_HAL_CORTEXM_KINETIS_FPU == 0
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM == 0
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME == 512
    # Flavor: data
    # Current_value: MK60DN512
};

# >
# Sub-family
# Kinetis family consists of several sub-families differing by
# features and CPU power.
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_SUBFAM {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 60
    # value_source default
    # Default value: 60
    # Legal values:  10 20 30 40 50 60 70 

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS
    #     Calculated:  "MK" . CYGHWR_HAL_CORTEXM_KINETIS_SUBFAM .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FPU ? "F" : "D") .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "X" : "N") .
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME 
};

# Floating Point Unit option
# Select whether the chip has Floating Point Unit.
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_FPU {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS
    #     Calculated:  "MK" . CYGHWR_HAL_CORTEXM_KINETIS_SUBFAM .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FPU ? "F" : "D") .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "X" : "N") .
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME 
};

# Flash name segment
# Flash size is represented in part name encoded as KiB
# (e.g. 512) or MiB (e.g. 1M0).
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 512
    # value_source default
    # Default value: 512
    # Legal values:  32 64 96 128 256 512 "1M0" 

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS
    #     Calculated:  "MK" . CYGHWR_HAL_CORTEXM_KINETIS_SUBFAM .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FPU ? "F" : "D") .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "X" : "N") .
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME 
    # option CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #     Calculated:  (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME == "1M0")
    #                     ? 1024 : CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #     Calculated:  (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME == "1M0")
    #                     ? 1024 : CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME
    #                 
};

# FlexNVM option
# Select whether the chip has FlexNVM.
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS
    #     Calculated:  "MK" . CYGHWR_HAL_CORTEXM_KINETIS_SUBFAM .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FPU ? "F" : "D") .
    #                 (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "X" : "N") .
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME 
    # component CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF
    #     ActiveIf: CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM
    # option CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT
    #     Calculated: (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "flexnvm_": "flash_")
    #                     . CYGHWR_HAL_CORTEXM_KINETIS_SRAM_LAYOUT 
    # option CYGHWR_HAL_KINETIS_FLEXNVM_FLEXRAM_SIZE
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM &
    #                         !CYGHWR_HAL_CORTEXM_KINETIS_EEE 
};

# <
# CPU exception priority level bits
# This option defines the number of bits used to encode the
# exception priority levels that this variant of the Cortex-M
# CPU implements.
#
cdl_option CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 4

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_PRIORITY_MAX
    #     Calculated: 1<<(8-CYGNUM_HAL_CORTEXM_PRIORITY_LEVEL_BITS)
};

# Clocking
# Configure system clock and subsystem clocking.
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_CLOCKING {
    # Calculated value: CYGHWR_HAL_CORTEXM_KINETIS_MCG
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG == "PLL 96MHz, OSC"
    # Flavor: data
    # Current_value: PLL 96MHz, OSC
};

# >
# System frequency clock setpoint
# Desired system clock frequency
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ_SP {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 96000000
    # value_source default
    # Default value: 96000000
    # Legal values: 32768 to 220000000

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP
    #     Calculated: CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ_SP
};

# System frequency actual value
# Operating system clock frequency.
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ {
    # Calculated value: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC == 0
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC == 0
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC == 0
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC == 0
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL == 1
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV == 96000000
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL == 1
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV == 457656250
    # Flavor: data
    # Current_value: 96000000

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_MCG
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK . " " .
    #                 ((CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ+500000)/1000000) . "MHz, " . (
    #                       (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK") ?
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS :
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC)
    #     
    #             
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #     DefaultValue:  !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                                       CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #     DefaultValue:  !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                                       CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #     DefaultValue:  !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                                       CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP + 1)
    #                     
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP + 1)
    #                     
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX ? 1 :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN) >
    #                          (CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP * 4) ? 1 :
    #                          (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN %
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP ? 2 : 1))
    #                     
    # option CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN
    #     Calculated: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #                     
};

# MCG
# Multipurpose Clock Generator
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_MCG {
    # Calculated value:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK . " " .
    #                 ((CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ+500000)/1000000) . "MHz, " . (
    #                       (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK") ?
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS :
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC)
    #     
    #             
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == EXT_REFCLK
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == EXT_REFCLK
    # Flavor: data
    # Current_value: PLL 96MHz, OSC

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLOCKING
    #     Calculated: CYGHWR_HAL_CORTEXM_KINETIS_MCG
};

# >
# System clock source
# Select one of 3 options for MCG output clock:
# PLL or FLL oscillator or External reference clock.
#
cdl_option CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value PLL
    # value_source default
    # Default value: PLL
    # Legal values: 
    #                     "PLL" "FLL" "EXT_REFCLK"
    #                 

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_MCG
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK . " " .
    #                 ((CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ+500000)/1000000) . "MHz, " . (
    #                       (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK") ?
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS :
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC)
    #     
    #             
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT
    #     ActiveIf: 
    #                     (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK") ||
    #                     (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK")
    #                 
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL")
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "INT_RC_32KHZ")
    #                         implies (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL")
    #                     
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "PLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK"
    #                     
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "PLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK"
    #                     
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "PLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK"
    #                     
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN_CHECK
    #     Calculated: 
    #                             CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN >= 31250) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN <= 39063) ?
    #                              "OK" : "NOK" ) :
    #                             "NotApplicable"
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN_CHECK
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" 
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "PLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK"
    #                     
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "PLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK"
    #                     
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK ==  "INT_REFCLK" 
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK ==  "EXT_REFCLK" 
};

# EXT_REFCLK source clock settings
# Set External Reference Clock frequency and type.
#
cdl_component CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT {
    # ActiveIf constraint: 
    #                     (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK") ||
    #                     (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK")
    #                 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == EXT_REFCLK
    #   --> 1

    # There is no associated value.

    # The following properties are affected by this value
    # component CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ
    #     Calculated:  is_active (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT) ?
    #                         CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ :
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC
    #                          == "INT_RC_32KHZ" ? 32768 : 2000000 )
    #                     
};

# >
# Clock type
# Ext reference can be External oscillator or a crystal
# for the on-chip oscillator or Real Time Clock.
#
cdl_option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value OSC
    # value_source default
    # Default value: OSC
    # Legal values:  "OSC" "XTAL" "RTC"
    # Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC") implies
    #                         (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 50000000)
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    #   --> 1
    # Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL") implies
    #                         (((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 3000000) &&
    #                           (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 32000000)) ||
    #                           ((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 32000) &&
    #                            (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 40000)))
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    #   --> 1
    # Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGHWR_HAL_CORTEXM_KINETIS_RTC == 1)
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #     CYGHWR_HAL_CORTEXM_KINETIS_RTC == 1
    #   --> 1
    # Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL")
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #   --> 1
    # Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 32768)
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    #   --> 1

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_MCG
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK . " " .
    #                 ((CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ+500000)/1000000) . "MHz, " . (
    #                       (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK") ?
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS :
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC)
    #     
    #             
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC") implies
    #                         (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 50000000)
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL") implies
    #                         (((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 3000000) &&
    #                           (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 32000000)) ||
    #                           ((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 32000) &&
    #                            (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 40000)))
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGHWR_HAL_CORTEXM_KINETIS_RTC == 1)
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL")
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 32768)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_OSC_CAP
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    # package CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM
    #     Requires:  is_active(CYGPKG_DEVS_ETH_FREESCALE_ENET)
    #                       implies CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC" 
    # option CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC" ||
    #                        CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    # option CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC" ||
    #                        CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    # option CYGHWR_HAL_CORTEXM_KINETIS_PLF_OSC_CAP
    #     DefaultValue:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    # option CYGHWR_HAL_CORTEXM_KINETIS_PLF_OSC_CAP
    #     ActiveIf:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
};

# Clock frequency
# External oscillator or crystal reference in Hz.
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 50000000
    # value_source default
    # Default value: 
    #                         is_active(CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ) ?
    #                         CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ :
    #                         4000000
    #                     
    #     CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ == 50000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ == 50000000
    #   --> 50000000
    # Legal values: 0 to 50000000

    # The following properties are affected by this value
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC") implies
    #                         (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 50000000)
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL") implies
    #                         (((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 3000000) &&
    #                           (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 32000000)) ||
    #                           ((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 32000) &&
    #                            (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 40000)))
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL") implies
    #                         (((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 3000000) &&
    #                           (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 32000000)) ||
    #                           ((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 32000) &&
    #                            (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 40000)))
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL") implies
    #                         (((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 3000000) &&
    #                           (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 32000000)) ||
    #                           ((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 32000) &&
    #                            (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 40000)))
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires: 
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL") implies
    #                         (((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 3000000) &&
    #                           (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 32000000)) ||
    #                           ((CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ >= 32000) &&
    #                            (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ <= 40000)))
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 32768)
    #                     
    # component CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ
    #     Calculated:  is_active (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT) ?
    #                         CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ :
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC
    #                          == "INT_RC_32KHZ" ? 32768 : 2000000 )
    #                     
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC
    #     Calculated: CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ
};

# XTAL parallel C [pF]
# The oscillator has 4 on-chip capacitors that combined
# produce capacitance in parallel to the crystal.
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_OSC_CAP {
    # This option is not active
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values:  0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_PLF_OSC_CAP
    #     Requires:  CYGHWR_HAL_CORTEXM_KINETIS_OSC_CAP == 20 
};

# Platform Clock Frequency
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ {
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC" ||
    #                        CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 50000000
    # value_source default
    # Default value: 50000000
    # Legal values:  25000000 50000000 

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ
    #     DefaultValue: 
    #                         is_active(CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ) ?
    #                         CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ :
    #                         4000000
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ
    #     DefaultValue: 
    #                         is_active(CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ) ?
    #                         CYGHWR_HAL_CORTEXM_KINETIS_PLF_XTAL_OR_OSC_FREQ :
    #                         4000000
    #                     
};

# Platform requred XTAL || C [pF]
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_PLF_OSC_CAP {
    # This option is not active
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "XTAL" 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #   --> 0
    # Requires:  CYGHWR_HAL_CORTEXM_KINETIS_OSC_CAP == 20 
    #     CYGHWR_HAL_CORTEXM_KINETIS_OSC_CAP == 0
    #   --> 0
};

# <
# FLL / PLL configuration
# PLL / FLL parameters are being calculated on a
# base of required system frequrncy and output as well as
# reference oscillator/frequency settings.
#
cdl_component CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL {
    # There is no associated value.
};

# >
# PLL/FLL output frequency set point
# Desired PLL output frequency.
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP {
    # Calculated value: CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ_SP
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ_SP == 96000000
    # Flavor: data
    # Current_value: 96000000
    # Legal values: 32768 to 220000000

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS
    #     DefaultValue: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 80000000 ? 3 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 60000000 ? 2 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 40000000 ? 1 : 0
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS
    #     DefaultValue: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 80000000 ? 3 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 60000000 ? 2 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 40000000 ? 1 : 0
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS
    #     DefaultValue: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 80000000 ? 3 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 60000000 ? 2 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 40000000 ? 1 : 0
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32
    #     DefaultValue: 
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 72000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 48000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 24000000)) ?
    #                             0x80 : 0x00
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32
    #     DefaultValue: 
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 72000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 48000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 24000000)) ?
    #                             0x80 : 0x00
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32
    #     DefaultValue: 
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 72000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 48000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 24000000)) ?
    #                             0x80 : 0x00
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32
    #     DefaultValue: 
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 72000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 48000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 24000000)) ?
    #                             0x80 : 0x00
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 180000000) ?
    #                             3800000 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 110000000) ?
    #                             3000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 3) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 4) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 5) ? 2500000 :
    #                             300000
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 180000000) ?
    #                             3800000 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 110000000) ?
    #                             3000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 3) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 4) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 5) ? 2500000 :
    #                             300000
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 180000000) ?
    #                             3800000 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 110000000) ?
    #                             3000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 3) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 4) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 5) ? 2500000 :
    #                             300000
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 180000000) ?
    #                             3800000 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 110000000) ?
    #                             3000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 3) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 4) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 5) ? 2500000 :
    #                             300000
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 180000000) ?
    #                             3800000 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 110000000) ?
    #                             3000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 3) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 4) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 5) ? 2500000 :
    #                             300000
    #                         
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV
    #     DefaultValue:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ) : -1
    #                         
};

# Reference clock source for FLL or PLL
# PLL/FLL oscillators can use one of 3 clock
# references: External Reference Clock or Low (32768 Hz)
# or High (2MHz) Frequency Internal oscillator
#
cdl_option CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value EXT_REFCLK
    # value_source default
    # Default value: EXT_REFCLK
    # Legal values:  "INT_RC_32KHZ" "EXT_REFCLK" 
    # Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "INT_RC_32KHZ")
    #                         implies (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL")
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == EXT_REFCLK
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #   --> 1

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_MCG
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK . " " .
    #                 ((CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ+500000)/1000000) . "MHz, " . (
    #                       (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK") ?
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS :
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC)
    #     
    #             
    # component CYGHWR_HAL_CORTEXM_KINETIS_MCG
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK . " " .
    #                 ((CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ+500000)/1000000) . "MHz, " . (
    #                       (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK") ?
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS :
    #                       CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC)
    #     
    #             
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT
    #     ActiveIf: 
    #                     (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK") ||
    #                     (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "EXT_REFCLK")
    #                 
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == "INT_RC_32KHZ")
    #                         implies (CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL")
    #                     
    # component CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ
    #     Calculated:  is_active (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT) ?
    #                         CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ :
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC
    #                          == "INT_RC_32KHZ" ? 32768 : 2000000 )
    #                     
};

# Reference frequency.
#
cdl_component CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ {
    # Calculated value:  is_active (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT) ?
    #                         CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ :
    #                         (CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC
    #                          == "INT_RC_32KHZ" ? 32768 : 2000000 )
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT == 1
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REFSRC == EXT_REFCLK
    # Flavor: data
    # Current_value: 50000000

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ > 8000000 ? 2 :
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 1000000 ? 1 :
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 32000) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ <= 40000)) ? 0 :
    #                             -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ > 8000000 ? 2 :
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 1000000 ? 1 :
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 32000) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ <= 40000)) ? 0 :
    #                             -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ > 8000000 ? 2 :
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 1000000 ? 1 :
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 32000) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ <= 40000)) ? 0 :
    #                             -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ > 8000000 ? 2 :
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 1000000 ? 1 :
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 32000) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ <= 40000)) ? 0 :
    #                             -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE >= 1 ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+32768*16) / (32768*32)) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+16384) / 32768) : -1)
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE >= 1 ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+32768*16) / (32768*32)) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+16384) / 32768) : -1)
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                             ( CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 1 : 32 ) :
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG *
    #                               ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 2 : 64)))
    #                         
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV
    #     DefaultValue: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ) : -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV) : -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV *
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV) : -1
    #                         
};

# FLL oscillator
#
cdl_component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL {
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "PLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK"
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #   --> 1

    # There is no associated value.

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
};

# >
# Reference frequency range
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE {
    # Calculated value: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ > 8000000 ? 2 :
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 1000000 ? 1 :
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ >= 32000) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ <= 40000)) ? 0 :
    #                             -1
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    # Flavor: data
    # Current_value: 2
    # Legal values: 0 1 2

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE >= 1 ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+32768*16) / (32768*32)) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+16384) / 32768) : -1)
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV
    #     Calculated: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE >= 1 ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+32768*16) / (32768*32)) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+16384) / 32768) : -1)
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG
    #     DefaultValue: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) <= 5 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) : 5
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                             ( CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 1 : 32 ) :
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG *
    #                               ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 2 : 64)))
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                             ( CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 1 : 32 ) :
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG *
    #                               ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 2 : 64)))
    #                         
};

# Calculated FLL divider
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV {
    # Calculated value: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE >= 1 ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+32768*16) / (32768*32)) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ+16384) / 32768) : -1)
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 2
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 2
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    # Flavor: data
    # Current_value: 48

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG
    #     DefaultValue: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) <= 5 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) : 5
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG
    #     DefaultValue: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) <= 5 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) : 5
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG
    #     DefaultValue: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) <= 5 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) : 5
    #                         
};

# FLL divider register value
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 5
    # value_source default
    # Default value: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) <= 5 ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV/2) : 5
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 2
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV == 48
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV == 48
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV == 48
    #   --> 5
    # Legal values: 0 1 2 3 4 5 6 7

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                             ( CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 1 : 32 ) :
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG *
    #                               ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 2 : 64)))
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                             ( CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 1 : 32 ) :
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG *
    #                               ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 2 : 64)))
    #                         
};

# DCO Range Select
#
cdl_option CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 3
    # value_source default
    # Default value: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 80000000 ? 3 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 60000000 ? 2 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP) >= 40000000 ? 1 : 0
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #   --> 3
    # Legal values: 0 1 2 3

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
};

# DCO max. frequency with 32768 reference
#
cdl_option CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x00000080
    # value_source default
    # Default value: 
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 72000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 48000000) ||
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 24000000)) ?
    #                             0x80 : 0x00
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #   --> 0x00000080
    # Legal values: 0 0x80

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT
    #     Calculated: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
};

# FLL factor
#
cdl_option CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT {
    # Calculated value: 
    #                             (CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x80) ?
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  732 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1464 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 2197 : 2929 ) :
    #                             ((CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 0 ) ?  640 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 1 ) ? 1280 :
    #                              (CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 2 ) ? 1920 : 2560 )
    #                         
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_DMX32 == 0x00000080
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 3
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 3
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 3
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 3
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 3
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_DRST_DRS == 3
    # Flavor: data
    # Current_value: 2929

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV
    #     Calculated: CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN *
    #                             CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT 
};

# DCO input frequency
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN {
    # Calculated value:  CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                             ( CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 0 ?
    #                              ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 1 : 32 ) :
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG *
    #                               ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 0) ? 2 : 64)))
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 5
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 2
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FRDIV_REG == 5
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_REF_FREQ_RANGE == 2
    # Flavor: data
    # Current_value: 156250

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN_CHECK
    #     Calculated: 
    #                             CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN >= 31250) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN <= 39063) ?
    #                              "OK" : "NOK" ) :
    #                             "NotApplicable"
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN_CHECK
    #     Calculated: 
    #                             CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN >= 31250) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN <= 39063) ?
    #                              "OK" : "NOK" ) :
    #                             "NotApplicable"
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN_CHECK
    #     Requires: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN >= 31250) &&
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN <= 39063)
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN_CHECK
    #     Requires: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN >= 31250) &&
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN <= 39063)
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV
    #     Calculated: CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN *
    #                             CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT 
};

# DCO input frequency check
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN_CHECK {
    # This option is not active
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #   --> 0

    # Calculated value: 
    #                             CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "FLL" ?
    #                             ((CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN >= 31250) &&
    #                              (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN <= 39063) ?
    #                              "OK" : "NOK" ) :
    #                             "NotApplicable"
    #                         
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN == 156250
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN == 156250
    # Flavor: data
    # Current_value: NotApplicable
    # Legal values:  "OK" "NOK" "not applicable" 
    # Requires: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN >= 31250) &&
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN <= 39063)
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN == 156250
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN == 156250
    #   --> 0
};

# FLL output frequency actual value
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV {
    # Calculated value: CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN *
    #                             CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT 
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_DCO_IN == 156250
    #     CYGNUM_HAL_CORTEXM_MCG_DCO_FLL_FACT == 2929
    # Flavor: data
    # Current_value: 457656250

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
};

# <
# PLL oscillator
#
cdl_component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL {
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "PLL" ||
    #                         CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == "EXT_REFCLK"
    #                     
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #   --> 1

    # There is no associated value.

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
};

# >
# Phase detector proposed input frequency
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X {
    # Calculated value: 
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 180000000) ?
    #                             3800000 :
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP > 110000000) ?
    #                             3000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 3) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 4) ? 2000000 :
    #                             !(CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP % 5) ? 2500000 :
    #                             300000
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    # Flavor: data
    # Current_value: 2000000

    # The following properties are affected by this value
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV
    #     DefaultValue: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ) : -1
    #                         
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV
    #     DefaultValue: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ) : -1
    #                         
};

# PLL External Reference Divider
#
cdl_option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 25
    # value_source default
    # Default value: 
    #                             CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X ) : -1
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X == 2000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ_X == 2000000
    #   --> 25
    # Legal values: 1 to 25

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV) : -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV) : -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV *
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV) : -1
    #                         
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV *
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV) : -1
    #                         
};

# Phase detector input frequency
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ {
    # Calculated value:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV) : -1
    #                         
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV == 25
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV == 25
    # Flavor: data
    # Current_value: 2000000
    # Legal values: 2000000 to 4000000

    # The following properties are affected by this value
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV
    #     DefaultValue:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ) : -1
    #                         
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV
    #     DefaultValue:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ) : -1
    #                         
};

# VCO Divider
#
cdl_option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 48
    # value_source default
    # Default value:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP /
    #                              CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ) : -1
    #                         
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ == 2000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_FREQ_SP == 96000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_PLL_INFREQ == 2000000
    #   --> 48
    # Legal values: 24 to 55

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV *
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV) : -1
    #                         
};

# PLL output frequency actual value
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV {
    # Calculated value:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV ?
    #                             (CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ /
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV *
    #                              CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV) : -1
    #                         
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV == 25
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_PLL_REF_FREQ == 50000000
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_PRDIV == 25
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL_VDIV == 48
    # Flavor: data
    # Current_value: 96000000

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
};

# <
# <
# Internal Reference Clock
#
cdl_component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC {
    # This option is not active
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK ==  "INT_REFCLK" 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #   --> 0

    # Calculated value:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC_HI ? 2000000 : 32768 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC_HI == 0
    # Flavor: data
    # Current_value: 32768

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
};

# >
# Use highh frequency internal osc.
#
cdl_option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC_HI {
    # This option is not active
    # The parent CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC
    #     Calculated:  CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC_HI ? 2000000 : 32768 
};

# <
# External Reference Clock
#
cdl_option CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC {
    # This option is not active
    # ActiveIf constraint:  CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK ==  "EXT_REFCLK" 
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_MCGOUTCLK == PLL
    #   --> 0

    # Calculated value: CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ
    #     CYGHWR_HAL_CORTEXM_KINETIS_MCG_REF_EXT_FREQ == 50000000
    # Flavor: data
    # Current_value: 50000000

    # The following properties are affected by this value
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
    # option CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #     Calculated: 
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_INT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   ?
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_EXT_RC   :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_PLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_PLL_FREQ_AV :
    #                 CYGOPT_HAL_CORTEXM_KINETIS_MCGOUT_FLL      ?
    #                 CYGNUM_HAL_CORTEXM_KINETIS_MCG_FLL_FREQ_AV :
    #                 0
    #             
};

# <
# Subsystem clocking
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_CLK_DIST {
    # There is no associated value.
};

# >
# Peripheral bus
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS {
    # Calculated value:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #                 
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS == 2
    # Flavor: data
    # Current_value: 48000000

    # The following properties are affected by this value
    # option CYGHWR_FREESCALE_ENET_MII_MDC_HAL_CLOCK
    #     Calculated: CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS
};

# >
# Frequency limit
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 50000000
    # value_source default
    # Default value: 50000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP
    #     LegalValues: 0 to CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX
};

# Calculated value
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 50000000
    # value_source default
    # Default value: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX == 50000000
    #   --> 50000000
    # Legal values: 0 to CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_MAX == 50000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #     DefaultValue:  !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                                       CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #     DefaultValue:  !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                                       CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #     DefaultValue:  !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                                       CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP + 1)
    #                     
};

# Divider
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value:  !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                                       CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP + 1)
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS_SP == 50000000
    #   --> 2
    # Legal values: 1 to 16

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_PER_BUS
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_PER_BUS
    #                 
};

# <
# Flash
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH {
    # Calculated value:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #                 
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH == 4
    # Flavor: data
    # Current_value: 24000000
};

# >
# Frequency limit
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 25000000
    # value_source default
    # Default value: 25000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP
    #     LegalValues: 0 to CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX
};

# Calculated value
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 25000000
    # value_source default
    # Default value: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX == 25000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX == 25000000
    #   --> 25000000
    # Legal values: 0 to CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_MAX == 25000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP + 1)
    #                     
};

# Divider
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4
    # value_source default
    # Default value: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP + 1)
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP == 25000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP == 25000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH_SP == 25000000
    #   --> 4
    # Legal values: 1 to 16

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLASH
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLASH
    #                 
};

# <
# Flex bus
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS {
    # Calculated value:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #                 
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS == 2
    # Flavor: data
    # Current_value: 48000000
};

# >
# Frequency limit
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 50000000
    # value_source default
    # Default value: 50000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP
    #     LegalValues: 0 to CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX
};

# Calculated value
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 50000000
    # value_source default
    # Default value: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <=
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX ?
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ :
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX == 50000000
    #   --> 50000000
    # Legal values: 0 to CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_MAX == 50000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP + 1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #     DefaultValue: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP + 1)
    #                     
};

# Divider
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value: 
    #                         !(CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ %
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP)  :
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP + 1)
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP == 50000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS_SP == 50000000
    #   --> 2
    # Legal values: 1 to 16

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_FLEX_BUS
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_CLKDIV_FLEX_BUS
    #                 
};

# <
# USB clock
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB {
    # Calculated value:  CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #                 
    #     CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC == 1
    #     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV == 2
    # Flavor: data
    # Current_value: 48000000
};

# >
# Frequency limit
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 48000000
    # value_source default
    # Default value: 48000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX ? 1 :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN) >
    #                          (CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP * 4) ? 1 :
    #                          (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN %
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP ? 2 : 1))
    #                     
};

# Fractional Divider
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX ? 1 :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN) >
    #                          (CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP * 4) ? 1 :
    #                          (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN %
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP ? 2 : 1))
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX == 48000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP == 48000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP == 48000000
    #   --> 1
    # Legal values: 1 to 2

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
};

# Divider
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2
    # value_source default
    # Default value:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC == 1
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP == 48000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC == 1
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP == 48000000
    #     CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN == 96000000
    #     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC == 1
    #     CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP == 48000000
    #   --> 2
    # Legal values: 1 to 8

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #                 
};

# USB divider input frequency
#
cdl_option CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN {
    # Calculated value: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ
    #                     
    #     CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ == 96000000
    # Flavor: data
    # Current_value: 96000000

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB
    #     Calculated:  CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                     CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX ? 1 :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN) >
    #                          (CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP * 4) ? 1 :
    #                          (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN %
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP ? 2 : 1))
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX ? 1 :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN) >
    #                          (CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP * 4) ? 1 :
    #                          (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN %
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP ? 2 : 1))
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
};

# Desired
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP {
    # Calculated value: 48000000
    # Flavor: data
    # Current_value: 48000000

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX ? 1 :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN) >
    #                          (CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP * 4) ? 1 :
    #                          (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN %
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP ? 2 : 1))
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC
    #     DefaultValue: 
    #                         CYGNUM_HAL_CORTEXM_KINETIS_MCGOUT_FREQ <
    #                         CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_MAX ? 1 :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN) >
    #                          (CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP * 4) ? 1 :
    #                          (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN %
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP ? 2 : 1))
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
    # option CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_DIV
    #     DefaultValue:  !((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC) %
    #                                        CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  ?
    #                         (CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                          CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                          CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP)  :
    #                         ((CYGNUM_HAL_CORTEXM_KINETIS_CLK_USB_IN *
    #                           CYGHWR_HAL_CORTEXM_KINETIS_USBCLK_FRAC /
    #                           CYGHWR_HAL_CORTEXM_KINETIS_CLK_USB_SP) +1)
    #                     
};

# <
# Trace clock source
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_TRACECLK {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value CORE
    # value_source default
    # Default value: CORE
    # Legal values:  "CORE" "MCGOUT" 
};

# Enable Trace Clock out
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_TRACE_CLKOUT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
#
cdl_interface CYGINT_HAL_CORTEXM_KINETIS_RTC {
    # Implemented by CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_RTC
    #     DefaultValue: CYGINT_HAL_CORTEXM_KINETIS_RTC
};

# Real Time Clock
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_RTC {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGINT_HAL_CORTEXM_KINETIS_RTC
    #     CYGINT_HAL_CORTEXM_KINETIS_RTC == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS
    #     Requires:  (CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "RTC")
    #                         implies (CYGHWR_HAL_CORTEXM_KINETIS_RTC == 1)
    #                     
};

# >
# RTC XTAL parallel C [pF]
# The Real Time Clock oscillator has 4 capacitors that
# combined produce capacitance in parallel to the crystal.
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_RTC_OSC_CAP {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values:  0 2 4 6 8 10 12 14 16 18 20 22 24 26 28
    #                     30 32 

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_PLF_RTC
    #     Requires:  CYGHWR_HAL_CORTEXM_KINETIS_RTC_OSC_CAP == 20 
};

# Platform requred RTC XTAL || C [pF]
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_PLF_RTC {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYGHWR_HAL_CORTEXM_KINETIS_RTC_OSC_CAP == 20 
    #     CYGHWR_HAL_CORTEXM_KINETIS_RTC_OSC_CAP == 0
    #   --> 0
};

# <
# <
# Clock interrupt ISR priority
# Set clock ISR priority. Default setting is lowest priority.
#
cdl_option CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x000000E0
    # value_source default
    # Default value: 0x000000E0

    # The following properties are affected by this value
    # option CYGNUM_KERNEL_COUNTERS_CLOCK_ISR_PRIORITY
    #     DefaultValue:  is_loaded(CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY) ?
    #      	                      CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY : 1 
    # option CYGNUM_KERNEL_COUNTERS_CLOCK_ISR_PRIORITY
    #     DefaultValue:  is_loaded(CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY) ?
    #      	                      CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY : 1 
};

# Real-time clock constants
#
cdl_component CYGNUM_HAL_RTC_CONSTANTS {
    # There is no associated value.
};

# >
# Real-time clock numerator
#
cdl_option CYGNUM_HAL_RTC_NUMERATOR {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1000000000
    # value_source default
    # Default value: 1000000000
};

# Real-time clock denominator
#
cdl_option CYGNUM_HAL_RTC_DENOMINATOR {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100

    # The following properties are affected by this value
    # option CYGNUM_HAL_RTC_PERIOD
    #     DefaultValue: 1000000 / CYGNUM_HAL_RTC_DENOMINATOR
};

# Real-time clock period
# The period defined here is something of a fake, it is
# expressed in terms of a notional 1MHz clock. The value
# actually installed in the hardware is calculated from
# the current settings of the clock generation hardware.
#
cdl_option CYGNUM_HAL_RTC_PERIOD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10000
    # value_source default
    # Default value: 1000000 / CYGNUM_HAL_RTC_DENOMINATOR
    #     CYGNUM_HAL_RTC_DENOMINATOR == 100
    #   --> 10000
};

# <
# Startup type
# Startup type defines what type of application shall be built.
# Startup type  can be defined by variant (CYG_HAL_STARTUP_VAR)
# or platform (CYG_HAL_STARTUP_PLF). If CYG_HAL_STARTUP_PLF
# is defined and not equal to 'ByVariant' then it shall
# override CYG_HAL_STARTUP_VAR.
#
cdl_component CYG_HAL_STARTUP {
    # Calculated value: 
    #                 (CYG_HAL_STARTUP_PLF && (CYG_HAL_STARTUP_PLF!="ByVariant")) ?
    #                 CYG_HAL_STARTUP_PLF : CYG_HAL_STARTUP_VAR
    #             
    #     CYG_HAL_STARTUP_PLF == MRAM
    #     CYG_HAL_STARTUP_PLF == MRAM
    #     CYG_HAL_STARTUP_PLF == MRAM
    #     CYG_HAL_STARTUP_VAR == 0
    # Flavor: data
    # Current_value: MRAM

    # The following properties are affected by this value
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated: 
    #                 (CYGHWR_MEMORY_LAYOUT_PLF) ? CYGHWR_MEMORY_LAYOUT_PLF :
    #                 (CYG_HAL_STARTUP == "ROM" ) ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_rom" :
    #                 (CYG_HAL_STARTUP == "SRAM") ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_sram" :
    #                 "undefined" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated: 
    #                 (CYGHWR_MEMORY_LAYOUT_PLF) ? CYGHWR_MEMORY_LAYOUT_PLF :
    #                 (CYG_HAL_STARTUP == "ROM" ) ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_rom" :
    #                 (CYG_HAL_STARTUP == "SRAM") ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_sram" :
    #                 "undefined" 
    # option CYGOPT_HAL_KINETIS_MISC_FLASH_SECTION
    #     DefaultValue:  CYG_HAL_STARTUP == "ROM" 
    # option CYGOPT_HAL_KINETIS_MISC_FLASH_SECTION
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" 
    # component CYGHWR_HAL_KINETIS_FLASH_CONF
    #     ActiveIf:  CYG_HAL_STARTUP == "ROM" 
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "JTAG" 
    # option CYGSEM_HAL_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "ROM" || CYG_HAL_STARTUP == "JTAG" 
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     DefaultValue:  CYG_HAL_STARTUP == "RAM" ? "GDB_stubs" : 0 
    # option CYGSEM_HAL_USE_ROM_MONITOR
    #     Requires:  CYG_HAL_STARTUP == "RAM" 
    # component CYGBLD_HAL_CORTEXM_TWR_MK60N512_GDB_STUBS
    #     Requires:  CYG_HAL_STARTUP == "ROM" 
    # option CYGSEM_HAL_INSTALL_MMU_TABLES
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" 
    # component CYGDBG_HAL_DIAG_TO_DEBUG_CHAN
    #     DefaultValue:  (CYGDBG_HAL_DEBUG_GDB_INCLUDE_STUBS  || CYG_HAL_STARTUP == "RAM") ? 1 : 0
    # option CYGSEM_HAL_VIRTUAL_VECTOR_INIT_WHOLE_TABLE
    #     DefaultValue:  CYG_HAL_STARTUP != "RAM" || !CYGSEM_HAL_USE_ROM_MONITOR 
};

# >
# By variant
# 'ROM' startup builds a stand-alone application which will
# be placed into flash. SRAM startup builds application
# intended for loading in on-chip SRAM by means of JTAG/SWD.
# Note: Variant Startup Type can be overriden/overloaded by
# Platform Startup Type.
#
cdl_option CYG_HAL_STARTUP_VAR {
    # This option is not active
    # ActiveIf constraint: ((!CYG_HAL_STARTUP_PLF) || (CYG_HAL_STARTUP_PLF=="ByVariant"))
    #     CYG_HAL_STARTUP_PLF == MRAM
    #     CYG_HAL_STARTUP_PLF == MRAM
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ByPlatform
    # value_source default
    # Default value: 
    #                     (CYG_HAL_STARTUP_PLF) && (CYG_HAL_STARTUP_PLF!="ByVariant") ?
    #                     "ByPlatform" : "ROM" 
    #     CYG_HAL_STARTUP_PLF == MRAM
    #     CYG_HAL_STARTUP_PLF == MRAM
    #   --> ByPlatform
    # Legal values:  "ROM" "SRAM" 

    # The following properties are affected by this value
    # component CYG_HAL_STARTUP
    #     Calculated: 
    #                 (CYG_HAL_STARTUP_PLF && (CYG_HAL_STARTUP_PLF!="ByVariant")) ?
    #                 CYG_HAL_STARTUP_PLF : CYG_HAL_STARTUP_VAR
    #             
};

# By platform
# Startup tupes provided by the platform, in addition to variant
# startup types.
# If 'ByVariant' is selected, then
# startup type shall be selected from the variant
# (CYG_HAL_STARTUP_VAR).
# 'MRAM' startup builds application for MRAM debug.
# 'RAM' not used.
#
cdl_option CYG_HAL_STARTUP_PLF {
    # Flavor: data
    user_value MRAM
    # value_source user
    # Default value: MRAM
    # Legal values: "ByVariant" "ROM" "MRAM"

    # The following properties are affected by this value
    # component CYGHWR_MEMORY_LAYOUT_PLF
    #     Calculated: 
    #                 (CYG_HAL_STARTUP_PLF == "MRAM" ) ? "kinetis_unisram_mram" :
    #                 (CYG_HAL_STARTUP_PLF == "ROM" ) ? "kinetis_unisram_rom" :
    #                 "undefined" 
    # component CYGHWR_MEMORY_LAYOUT_PLF
    #     Calculated: 
    #                 (CYG_HAL_STARTUP_PLF == "MRAM" ) ? "kinetis_unisram_mram" :
    #                 (CYG_HAL_STARTUP_PLF == "ROM" ) ? "kinetis_unisram_rom" :
    #                 "undefined" 
    # component CYG_HAL_STARTUP
    #     Calculated: 
    #                 (CYG_HAL_STARTUP_PLF && (CYG_HAL_STARTUP_PLF!="ByVariant")) ?
    #                 CYG_HAL_STARTUP_PLF : CYG_HAL_STARTUP_VAR
    #             
    # component CYG_HAL_STARTUP
    #     Calculated: 
    #                 (CYG_HAL_STARTUP_PLF && (CYG_HAL_STARTUP_PLF!="ByVariant")) ?
    #                 CYG_HAL_STARTUP_PLF : CYG_HAL_STARTUP_VAR
    #             
    # component CYG_HAL_STARTUP
    #     Calculated: 
    #                 (CYG_HAL_STARTUP_PLF && (CYG_HAL_STARTUP_PLF!="ByVariant")) ?
    #                 CYG_HAL_STARTUP_PLF : CYG_HAL_STARTUP_VAR
    #             
    # option CYG_HAL_STARTUP_VAR
    #     DefaultValue: 
    #                     (CYG_HAL_STARTUP_PLF) && (CYG_HAL_STARTUP_PLF!="ByVariant") ?
    #                     "ByPlatform" : "ROM" 
    # option CYG_HAL_STARTUP_VAR
    #     DefaultValue: 
    #                     (CYG_HAL_STARTUP_PLF) && (CYG_HAL_STARTUP_PLF!="ByVariant") ?
    #                     "ByPlatform" : "ROM" 
    # option CYG_HAL_STARTUP_VAR
    #     ActiveIf: ((!CYG_HAL_STARTUP_PLF) || (CYG_HAL_STARTUP_PLF=="ByVariant"))
    # option CYG_HAL_STARTUP_VAR
    #     ActiveIf: ((!CYG_HAL_STARTUP_PLF) || (CYG_HAL_STARTUP_PLF=="ByVariant"))
};

# <
# FlexNVM configuration
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF {
    # This option is not active
    # ActiveIf constraint: CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM == 0
    #   --> 0

    # There is no associated value.
    # Requires: 
    #                 CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB <=
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #             
    #     CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB == 0
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #   --> 1
};

# >
# Enhanced EEPROM (EEE)
#
cdl_component CYGHWR_HAL_CORTEXM_KINETIS_EEE {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FLEXRAM_RAM
    #     ActiveIf:  !CYGHWR_HAL_CORTEXM_KINETIS_EEE 
    # option CYGHWR_HAL_KINETIS_FLEXNVM_FLEXRAM_SIZE
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM &
    #                         !CYGHWR_HAL_CORTEXM_KINETIS_EEE 
};

# >
# EEE Size [Bytes]
#
cdl_option CYGHWR_HAL_KINETIS_EEE_SIZE {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_EEE is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_EEE is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4096
    # value_source default
    # Default value: 4096
    # Legal values:  32 64 128 256 512 1024 2048 4096 

    # The following properties are affected by this value
    # option CYGHWR_HAL_KINETIS_EEE0_SIZE
    #     Calculated:  CYGHWR_HAL_KINETIS_EEE_SPLIT > 0 ?
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE /
    #                             CYGHWR_HAL_KINETIS_EEE_SPLIT :
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE 
    # option CYGHWR_HAL_KINETIS_EEE0_SIZE
    #     Calculated:  CYGHWR_HAL_KINETIS_EEE_SPLIT > 0 ?
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE /
    #                             CYGHWR_HAL_KINETIS_EEE_SPLIT :
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE 
    # option CYGHWR_HAL_KINETIS_EEE1_SIZE
    #     Calculated:  CYGHWR_HAL_KINETIS_EEE_SIZE -
    #                             CYGHWR_HAL_KINETIS_EEE0_SIZE 
};

# EEE Split ratio
# Enhanced EEPROM is split in two partitions that are
# represented by separate sections in MLT files.
# The split, CYGHWR_HAL_KINETIS_EEE_SPLIT, represents
# partition size ratio where EEE0 partition size is
# 1/CYGHWR_HAL_KINETIS_EEE_SPLIT of EEE size, and EEE1
# is the rest. As a special arrangement
# (CYGHWR_HAL_KINETIS_EEE_SPLIT == 0) is a PHONY, where
# split equals 2 but in MLT files whole EEE is counted
# as a single section.
#
cdl_component CYGHWR_HAL_KINETIS_EEE_SPLIT {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_EEE is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_EEE is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values:  0 2 4 8 

    # The following properties are affected by this value
    # option CYGHWR_HAL_KINETIS_EEE0_SIZE
    #     Calculated:  CYGHWR_HAL_KINETIS_EEE_SPLIT > 0 ?
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE /
    #                             CYGHWR_HAL_KINETIS_EEE_SPLIT :
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE 
    # option CYGHWR_HAL_KINETIS_EEE0_SIZE
    #     Calculated:  CYGHWR_HAL_KINETIS_EEE_SPLIT > 0 ?
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE /
    #                             CYGHWR_HAL_KINETIS_EEE_SPLIT :
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE 
    # option CYGHWR_HAL_KINETIS_EEE1_SIZE
    #     ActiveIf:  CYGHWR_HAL_KINETIS_EEE_SPLIT > 0 
};

# >
# e_eeprom0 section size [Bytes]
#
cdl_option CYGHWR_HAL_KINETIS_EEE0_SIZE {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_EEE_SPLIT is not active

    # Calculated value:  CYGHWR_HAL_KINETIS_EEE_SPLIT > 0 ?
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE /
    #                             CYGHWR_HAL_KINETIS_EEE_SPLIT :
    #                             CYGHWR_HAL_KINETIS_EEE_SIZE 
    #     CYGHWR_HAL_KINETIS_EEE_SPLIT == 0
    #     CYGHWR_HAL_KINETIS_EEE_SIZE == 0
    #     CYGHWR_HAL_KINETIS_EEE_SPLIT == 0
    #     CYGHWR_HAL_KINETIS_EEE_SIZE == 0
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # option CYGHWR_HAL_KINETIS_EEE1_SIZE
    #     Calculated:  CYGHWR_HAL_KINETIS_EEE_SIZE -
    #                             CYGHWR_HAL_KINETIS_EEE0_SIZE 
};

# e_eeprom1 section size [Bytes]
#
cdl_option CYGHWR_HAL_KINETIS_EEE1_SIZE {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_EEE_SPLIT is not active
    # ActiveIf constraint:  CYGHWR_HAL_KINETIS_EEE_SPLIT > 0 
    #     CYGHWR_HAL_KINETIS_EEE_SPLIT == 0
    #   --> 0

    # Calculated value:  CYGHWR_HAL_KINETIS_EEE_SIZE -
    #                             CYGHWR_HAL_KINETIS_EEE0_SIZE 
    #     CYGHWR_HAL_KINETIS_EEE_SIZE == 0
    #     CYGHWR_HAL_KINETIS_EEE0_SIZE == 0
    # Flavor: data
    # Current_value: 0
};

# <
# FlexNVM partition used for EEE [KiB]
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_EEE is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_EEE is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values:  32 64 128 192 224 256 

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF
    #     Requires: 
    #                 CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB <=
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #             
    # component CYGHWR_HAL_KINETIS_FLEXNVM_DFLASH_SIZE
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB <
    #                     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB
    # component CYGHWR_HAL_KINETIS_FLEXNVM_DFLASH_SIZE
    #     Calculated: 
    #                     1024 * ( CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB -
    #                              CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB)
    #                 
    # option CYGHWR_HAL_KINETIS_FLEXNVM_FLASH_SIZE
    #     Calculated:  (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #                               - CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB)* 0x400 
};

# <
# FlexNVM D Flash
#
cdl_component CYGHWR_HAL_KINETIS_FLEXNVM_DFLASH_SIZE {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF is not active
    # ActiveIf constraint:  CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB <
    #                     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB
    #     CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB == 0
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB == 0
    #   --> 0

    # Calculated value: 
    #                     1024 * ( CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB -
    #                              CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB)
    #                 
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB == 0
    #     CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB == 0
    # Flavor: data
    # Current_value: 0
};

# Flexram ordinary RAM
#
cdl_component CYGHWR_HAL_KINETIS_FLEXRAM_RAM {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF is not active
    # ActiveIf constraint:  !CYGHWR_HAL_CORTEXM_KINETIS_EEE 
    #     CYGHWR_HAL_CORTEXM_KINETIS_EEE == 0
    #   --> 1

    # Calculated value: CYGHWR_HAL_KINETIS_FLEXRAM_SIZE
    #     CYGHWR_HAL_KINETIS_FLEXRAM_SIZE == 0
    # Flavor: data
    # Current_value: 0
};

# Flexram size
#
cdl_component CYGHWR_HAL_KINETIS_FLEXRAM_SIZE {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 4096
    # value_source default
    # Default value: 4096

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FLEXRAM_RAM
    #     Calculated: CYGHWR_HAL_KINETIS_FLEXRAM_SIZE
};

# FlexNVM size [KiB]
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB {
    # This option is not active
    # The parent CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF is not active

    # Calculated value: CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    # Flavor: data
    # Current_value: 512

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FLEXNVM_DFLASH_SIZE
    #     ActiveIf:  CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB <
    #                     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB
    # component CYGHWR_HAL_KINETIS_FLEXNVM_DFLASH_SIZE
    #     Calculated: 
    #                     1024 * ( CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB -
    #                              CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB)
    #                 
};

# <
# Memory layout
# Combination of 'Startup type' and 'Kinetis part'
# produces the memory layout.
#
cdl_component CYGHWR_MEMORY_LAYOUT {
    # Calculated value: 
    #                 (CYGHWR_MEMORY_LAYOUT_PLF) ? CYGHWR_MEMORY_LAYOUT_PLF :
    #                 (CYG_HAL_STARTUP == "ROM" ) ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_rom" :
    #                 (CYG_HAL_STARTUP == "SRAM") ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_sram" :
    #                 "undefined" 
    #     CYGHWR_MEMORY_LAYOUT_PLF == kinetis_unisram_mram
    #     CYGHWR_MEMORY_LAYOUT_PLF == kinetis_unisram_mram
    #     CYG_HAL_STARTUP == MRAM
    #     CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT == flash_unisram
    #     CYG_HAL_STARTUP == MRAM
    #     CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT == flash_unisram
    # Flavor: data
    # Current_value: kinetis_unisram_mram

    # The following properties are affected by this value
    # option CYGHWR_MEMORY_LAYOUT_LDI
    #     Calculated:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".ldi>" 
    # option CYGHWR_MEMORY_LAYOUT_H
    #     Calculated:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".h>" 
};

# >
# Memory layout linker script fragment
#
cdl_option CYGHWR_MEMORY_LAYOUT_LDI {
    # Calculated value:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".ldi>" 
    #     CYGHWR_MEMORY_LAYOUT == kinetis_unisram_mram
    # Flavor: data
    # Current_value: <pkgconf/mlt_kinetis_unisram_mram.ldi>
};

# Memory layout header file
#
cdl_option CYGHWR_MEMORY_LAYOUT_H {
    # Calculated value:  "<pkgconf/mlt_" . CYGHWR_MEMORY_LAYOUT . ".h>" 
    #     CYGHWR_MEMORY_LAYOUT == kinetis_unisram_mram
    # Flavor: data
    # Current_value: <pkgconf/mlt_kinetis_unisram_mram.h>
};

# <
# Unified on chip SRAM region
# Kinetis have two equal SRAM banks SRAM_L and SRAM_U that
# occupy consecutive memory blocks with (possibility for
# simultaneous) access from on separate buses.
# SRAM_L is placed below 0x20000000 and SRAM_U above 0x20000000.
# This option provides for selection between memory layout with
# single (unified) (S)RAM region and layout with two separate
# (S)RAM regions.
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_UNIFIED {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_LAYOUT
    #     Calculated:  CYGHWR_HAL_CORTEXM_KINETIS_SRAM_UNIFIED ?
    #                     "unisram" :
    #                     "sram2s"
    #                 
};

# Utilize ".kinetis_misc" section for HAL
# Kinetis use FLASH locations between 0x400 and 0x40F for FLASH
# security configuration. This leaves FLASH area below 0x400
# out of standard linker sections. Special section
# ".kinetis_misc" provides linker access to this area.
# Setting this option instructs linker to place some HAL
# (variant/platform) "misc." functions in this area.
#
cdl_option CYGOPT_HAL_KINETIS_MISC_FLASH_SECTION {
    # This option is not active
    # ActiveIf constraint:  CYG_HAL_STARTUP == "ROM" 
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYG_HAL_STARTUP == "ROM" 
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0

    # The following properties are affected by this value
    # option CYGOPT_HAL_KINETIS_DIAG_IN_MISC_FLASH_SECTION
    #     ActiveIf: CYGOPT_HAL_KINETIS_MISC_FLASH_SECTION
};

# HAL diag. in ".kinetis_misc" section
# By default only misc. HAL functions are stored in
# ".kinetis_misc" section. In addition HAL diagnostc
# functions may be placed as well.
#
cdl_option CYGOPT_HAL_KINETIS_DIAG_IN_MISC_FLASH_SECTION {
    # This option is not active
    # ActiveIf constraint: CYGOPT_HAL_KINETIS_MISC_FLASH_SECTION
    #     CYGOPT_HAL_KINETIS_MISC_FLASH_SECTION == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# On chip memory resources
# View and manage on-chip memory resources.
# Output is used for naming of 'mlt' files.
#
cdl_component CYGHWR_HAL_KINETIS_MEMORY_RESOURCES {
    # There is no associated value.
};

# >
# On chip Flash option [KiB]
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB {
    # Calculated value:  (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME == "1M0")
    #                     ? 1024 : CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME
    #                 
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_NAME == 512
    # Flavor: data
    # Current_value: 512

    # The following properties are affected by this value
    # component CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_CONF
    #     Requires: 
    #                 CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB <=
    #                 CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #             
    # option CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM_KIB
    #     Calculated: CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB
    #     Calculated: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB
    #     Calculated: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB
    #     Calculated: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB
    #     Calculated: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB
    #     Calculated: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB
    #     Calculated: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    # option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB
    #     Calculated: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    # option CYGHWR_HAL_KINETIS_FLASH_SIZE
    #     Calculated:  CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB * 0x400 
    # option CYGHWR_HAL_KINETIS_FLEXNVM_FLASH_SIZE
    #     Calculated:  (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #                               - CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB)* 0x400 
};

# Kinetis on chip SRAM size [KiB]
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB {
    # Calculated value: 
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 1024 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512)   ? 128 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 256)   ? 64 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 128)   ? 32 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 96 ||
    #                      CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 64)    ? 16 :
    #                     (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 32)    ? 8 :
    #                     "Unknown"
    #                 
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    # Flavor: data
    # Current_value: 128

    # The following properties are affected by this value
    # option CYGHWR_HAL_KINETIS_SRAM_SIZE
    #     Calculated:  CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB * 0x400 
};

# SRAM layout
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_SRAM_LAYOUT {
    # Calculated value:  CYGHWR_HAL_CORTEXM_KINETIS_SRAM_UNIFIED ?
    #                     "unisram" :
    #                     "sram2s"
    #                 
    #     CYGHWR_HAL_CORTEXM_KINETIS_SRAM_UNIFIED == 1
    # Flavor: data
    # Current_value: unisram

    # The following properties are affected by this value
    # option CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT
    #     Calculated: (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "flexnvm_": "flash_")
    #                     . CYGHWR_HAL_CORTEXM_KINETIS_SRAM_LAYOUT 
};

# On-chip memory layout
#
cdl_option CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT {
    # Calculated value: (CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM ? "flexnvm_": "flash_")
    #                     . CYGHWR_HAL_CORTEXM_KINETIS_SRAM_LAYOUT 
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM == 0
    #     CYGHWR_HAL_CORTEXM_KINETIS_SRAM_LAYOUT == unisram
    # Flavor: data
    # Current_value: flash_unisram

    # The following properties are affected by this value
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated: 
    #                 (CYGHWR_MEMORY_LAYOUT_PLF) ? CYGHWR_MEMORY_LAYOUT_PLF :
    #                 (CYG_HAL_STARTUP == "ROM" ) ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_rom" :
    #                 (CYG_HAL_STARTUP == "SRAM") ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_sram" :
    #                 "undefined" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated: 
    #                 (CYGHWR_MEMORY_LAYOUT_PLF) ? CYGHWR_MEMORY_LAYOUT_PLF :
    #                 (CYG_HAL_STARTUP == "ROM" ) ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_rom" :
    #                 (CYG_HAL_STARTUP == "SRAM") ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_sram" :
    #                 "undefined" 
};

# Kinetis on chip FLASH size
#
cdl_option CYGHWR_HAL_KINETIS_FLASH_SIZE {
    # Calculated value:  CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB * 0x400 
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    # Flavor: data
    # Current_value: 0x00080000
};

# Kinetis on chip SRAM size
#
cdl_option CYGHWR_HAL_KINETIS_SRAM_SIZE {
    # Calculated value:  CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB * 0x400 
    #     CYGHWR_HAL_CORTEXM_KINETIS_SRAM_KIB == 128
    # Flavor: data
    # Current_value: 0x00020000

    # The following properties are affected by this value
    # option CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE
    #     Calculated:  CYGHWR_HAL_KINETIS_SRAM_SIZE/2 
};

# Kinetis onchip RAM bank size
#
cdl_option CYGHWR_HAL_KINETIS_SRAM_BANK_SIZE {
    # Calculated value:  CYGHWR_HAL_KINETIS_SRAM_SIZE/2 
    #     CYGHWR_HAL_KINETIS_SRAM_SIZE == 0x00020000
    # Flavor: data
    # Current_value: 0x00010000
};

# Kinetis on chip FLASH size
#
cdl_option CYGHWR_HAL_KINETIS_FLEXNVM_FLASH_SIZE {
    # Calculated value:  (CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB
    #                               - CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB)* 0x400 
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLASH_KIB == 512
    #     CYGHWR_HAL_CORTEXM_KINETIS_EEE_NVM_PART_KIB == 0
    # Flavor: data
    # Current_value: 0x00080000
};

# Kinetis on chip FlexRAM size
#
cdl_option CYGHWR_HAL_KINETIS_FLEXNVM_FLEXRAM_SIZE {
    # This option is not active
    # ActiveIf constraint:  CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM &
    #                         !CYGHWR_HAL_CORTEXM_KINETIS_EEE 
    #     CYGHWR_HAL_CORTEXM_KINETIS_FLEXNVM == 0
    #     CYGHWR_HAL_CORTEXM_KINETIS_EEE == 0
    #   --> 0

    # Calculated value:  4096 
    # Flavor: data
    # Current_value: 4096
};

# <
# Platform uses FlexBus
# This interface will be implemented if the specific
# controller being used provides FlexBus and if FlexBus is
# used on target hardware
#
cdl_interface CYGINT_HAL_CORTEXM_KINETIS_FLEXBUS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS
    #     ActiveIf: CYGINT_HAL_CORTEXM_KINETIS_FLEXBUS
    # component CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS
    #     DefaultValue: CYGINT_HAL_CORTEXM_KINETIS_FLEXBUS
};

# FlexBus
# FlexBus provides access for external memory.
#
cdl_component CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS {
    # This option is not active
    # ActiveIf constraint: CYGINT_HAL_CORTEXM_KINETIS_FLEXBUS
    #     CYGINT_HAL_CORTEXM_KINETIS_FLEXBUS == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_CORTEXM_KINETIS_FLEXBUS
    #     CYGINT_HAL_CORTEXM_KINETIS_FLEXBUS == 0
    #   --> 0
};

# >
# Platform uses Chip select 0
# This interface will be implemented if the specific
# controller being used provides chip select 0, and if
# that chip select is used on target hardware.
#
cdl_interface CYGINT_HAL_KINETIS_FB_CS0 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FB_CS0
    #     ActiveIf: CYGINT_HAL_KINETIS_FB_CS0
    # component CYGHWR_HAL_KINETIS_FB_CS0
    #     DefaultValue: CYGINT_HAL_KINETIS_FB_CS0
};

# Chip select 0
# This option includes initialization data for
# chip select 0.
#
cdl_component CYGHWR_HAL_KINETIS_FB_CS0 {
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled
    # ActiveIf constraint: CYGINT_HAL_KINETIS_FB_CS0
    #     CYGINT_HAL_KINETIS_FB_CS0 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_KINETIS_FB_CS0
    #     CYGINT_HAL_KINETIS_FB_CS0 == 0
    #   --> 0
};

# >
# Port size (encoded)
#
cdl_option CYGHWR_HAL_KINETIS_FB_CS0_CR_PS {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS0 is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS0 is disabled

    # Calculated value: ( CYGHWR_HAL_KINETIS_FB_CS0_CR_PSB == 32 ? 0 : CYGHWR_HAL_KINETIS_FB_CS0_CR_PSB == 8 ? 1 : CYGHWR_HAL_KINETIS_FB_CS0_CR_PSB == 16 ? 2 : 3)
    #     CYGHWR_HAL_KINETIS_FB_CS0_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS0_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS0_CR_PSB (unknown) == 0
    # Flavor: data
    # Current_value: 3
};

# <
# Platform uses Chip select 1
# This interface will be implemented if the specific
# controller being used provides chip select 1, and if
# that chip select is used on target hardware.
#
cdl_interface CYGINT_HAL_KINETIS_FB_CS1 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FB_CS1
    #     ActiveIf: CYGINT_HAL_KINETIS_FB_CS1
    # component CYGHWR_HAL_KINETIS_FB_CS1
    #     DefaultValue: CYGINT_HAL_KINETIS_FB_CS1
};

# Chip select 1
# This option includes initialization data for
# chip select 1.
#
cdl_component CYGHWR_HAL_KINETIS_FB_CS1 {
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled
    # ActiveIf constraint: CYGINT_HAL_KINETIS_FB_CS1
    #     CYGINT_HAL_KINETIS_FB_CS1 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_KINETIS_FB_CS1
    #     CYGINT_HAL_KINETIS_FB_CS1 == 0
    #   --> 0
};

# >
# Port size (encoded)
#
cdl_option CYGHWR_HAL_KINETIS_FB_CS1_CR_PS {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS1 is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS1 is disabled

    # Calculated value: ( CYGHWR_HAL_KINETIS_FB_CS1_CR_PSB == 32 ? 0 : CYGHWR_HAL_KINETIS_FB_CS1_CR_PSB == 8 ? 1 : CYGHWR_HAL_KINETIS_FB_CS1_CR_PSB == 16 ? 2 : 3)
    #     CYGHWR_HAL_KINETIS_FB_CS1_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS1_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS1_CR_PSB (unknown) == 0
    # Flavor: data
    # Current_value: 3
};

# <
# Platform uses Chip select 2
# This interface will be implemented if the specific
# controller being used provides chip select 2, and if
# that chip select is used on target hardware.
#
cdl_interface CYGINT_HAL_KINETIS_FB_CS2 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FB_CS2
    #     ActiveIf: CYGINT_HAL_KINETIS_FB_CS2
    # component CYGHWR_HAL_KINETIS_FB_CS2
    #     DefaultValue: CYGINT_HAL_KINETIS_FB_CS2
};

# Chip select 2
# This option includes initialization data for
# chip select 2.
#
cdl_component CYGHWR_HAL_KINETIS_FB_CS2 {
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled
    # ActiveIf constraint: CYGINT_HAL_KINETIS_FB_CS2
    #     CYGINT_HAL_KINETIS_FB_CS2 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_KINETIS_FB_CS2
    #     CYGINT_HAL_KINETIS_FB_CS2 == 0
    #   --> 0
};

# >
# Port size (encoded)
#
cdl_option CYGHWR_HAL_KINETIS_FB_CS2_CR_PS {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS2 is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS2 is disabled

    # Calculated value: ( CYGHWR_HAL_KINETIS_FB_CS2_CR_PSB == 32 ? 0 : CYGHWR_HAL_KINETIS_FB_CS2_CR_PSB == 8 ? 1 : CYGHWR_HAL_KINETIS_FB_CS2_CR_PSB == 16 ? 2 : 3)
    #     CYGHWR_HAL_KINETIS_FB_CS2_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS2_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS2_CR_PSB (unknown) == 0
    # Flavor: data
    # Current_value: 3
};

# <
# Platform uses Chip select 3
# This interface will be implemented if the specific
# controller being used provides chip select 3, and if
# that chip select is used on target hardware.
#
cdl_interface CYGINT_HAL_KINETIS_FB_CS3 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FB_CS3
    #     ActiveIf: CYGINT_HAL_KINETIS_FB_CS3
    # component CYGHWR_HAL_KINETIS_FB_CS3
    #     DefaultValue: CYGINT_HAL_KINETIS_FB_CS3
};

# Chip select 3
# This option includes initialization data for
# chip select 3.
#
cdl_component CYGHWR_HAL_KINETIS_FB_CS3 {
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled
    # ActiveIf constraint: CYGINT_HAL_KINETIS_FB_CS3
    #     CYGINT_HAL_KINETIS_FB_CS3 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_KINETIS_FB_CS3
    #     CYGINT_HAL_KINETIS_FB_CS3 == 0
    #   --> 0
};

# >
# Port size (encoded)
#
cdl_option CYGHWR_HAL_KINETIS_FB_CS3_CR_PS {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS3 is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS3 is disabled

    # Calculated value: ( CYGHWR_HAL_KINETIS_FB_CS3_CR_PSB == 32 ? 0 : CYGHWR_HAL_KINETIS_FB_CS3_CR_PSB == 8 ? 1 : CYGHWR_HAL_KINETIS_FB_CS3_CR_PSB == 16 ? 2 : 3)
    #     CYGHWR_HAL_KINETIS_FB_CS3_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS3_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS3_CR_PSB (unknown) == 0
    # Flavor: data
    # Current_value: 3
};

# <
# Platform uses Chip select 4
# This interface will be implemented if the specific
# controller being used provides chip select 4, and if
# that chip select is used on target hardware.
#
cdl_interface CYGINT_HAL_KINETIS_FB_CS4 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FB_CS4
    #     ActiveIf: CYGINT_HAL_KINETIS_FB_CS4
    # component CYGHWR_HAL_KINETIS_FB_CS4
    #     DefaultValue: CYGINT_HAL_KINETIS_FB_CS4
};

# Chip select 4
# This option includes initialization data for
# chip select 4.
#
cdl_component CYGHWR_HAL_KINETIS_FB_CS4 {
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled
    # ActiveIf constraint: CYGINT_HAL_KINETIS_FB_CS4
    #     CYGINT_HAL_KINETIS_FB_CS4 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_KINETIS_FB_CS4
    #     CYGINT_HAL_KINETIS_FB_CS4 == 0
    #   --> 0
};

# >
# Port size (encoded)
#
cdl_option CYGHWR_HAL_KINETIS_FB_CS4_CR_PS {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS4 is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS4 is disabled

    # Calculated value: ( CYGHWR_HAL_KINETIS_FB_CS4_CR_PSB == 32 ? 0 : CYGHWR_HAL_KINETIS_FB_CS4_CR_PSB == 8 ? 1 : CYGHWR_HAL_KINETIS_FB_CS4_CR_PSB == 16 ? 2 : 3)
    #     CYGHWR_HAL_KINETIS_FB_CS4_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS4_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS4_CR_PSB (unknown) == 0
    # Flavor: data
    # Current_value: 3
};

# <
# Platform uses Chip select 5
# This interface will be implemented if the specific
# controller being used provides chip select 5, and if
# that chip select is used on target hardware.
#
cdl_interface CYGINT_HAL_KINETIS_FB_CS5 {
    # No options implement this inferface
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled

    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0

    # The following properties are affected by this value
    # component CYGHWR_HAL_KINETIS_FB_CS5
    #     ActiveIf: CYGINT_HAL_KINETIS_FB_CS5
    # component CYGHWR_HAL_KINETIS_FB_CS5
    #     DefaultValue: CYGINT_HAL_KINETIS_FB_CS5
};

# Chip select 5
# This option includes initialization data for
# chip select 5.
#
cdl_component CYGHWR_HAL_KINETIS_FB_CS5 {
    # This option is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is not active
    # The parent CYGPKG_HAL_CORTEXM_KINETIS_FLEXBUS is disabled
    # ActiveIf constraint: CYGINT_HAL_KINETIS_FB_CS5
    #     CYGINT_HAL_KINETIS_FB_CS5 == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGINT_HAL_KINETIS_FB_CS5
    #     CYGINT_HAL_KINETIS_FB_CS5 == 0
    #   --> 0
};

# >
# Port size (encoded)
#
cdl_option CYGHWR_HAL_KINETIS_FB_CS5_CR_PS {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS5 is not active
    # The parent CYGHWR_HAL_KINETIS_FB_CS5 is disabled

    # Calculated value: ( CYGHWR_HAL_KINETIS_FB_CS5_CR_PSB == 32 ? 0 : CYGHWR_HAL_KINETIS_FB_CS5_CR_PSB == 8 ? 1 : CYGHWR_HAL_KINETIS_FB_CS5_CR_PSB == 16 ? 2 : 3)
    #     CYGHWR_HAL_KINETIS_FB_CS5_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS5_CR_PSB (unknown) == 0
    #     CYGHWR_HAL_KINETIS_FB_CS5_CR_PSB (unknown) == 0
    # Flavor: data
    # Current_value: 3
};

# <
# <
# Flash configuration field
# The program flash memory contains a 16-byte flash
# configuration field that stores default protection settings
# (loaded on reset) and security information that allows the MCU to
# restrict access to the flash module.
# Note: Changing some values in Flash configuration field may make
# flash inaccessible and disable further re-programming of the flash
# permanently. Consult respective Kinetis' documentation before dealing
# with the Flash configuration field. Default values are equal
# to the factory values.
#
cdl_component CYGHWR_HAL_KINETIS_FLASH_CONF {
    # This option is not active
    # ActiveIf constraint:  CYG_HAL_STARTUP == "ROM" 
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0

    # There is no associated value.
};

# >
# Backdoor comparison key
#
cdl_option CYGHWR_HAL_KINETIS_FLASH_CONF_BACKDOOR_KEY {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FLASH_CONF is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff }"
    # value_source default
    # Default value: "{ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff }"
};

# Program flash protection
#
cdl_option CYGHWR_HAL_KINETIS_FLASH_CONF_FPROT {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FLASH_CONF is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value "{ 0xff, 0xff, 0xff, 0xff }"
    # value_source default
    # Default value: "{ 0xff, 0xff, 0xff, 0xff }"
};

# Flash security byte
# Note: FSEC default value is deliberately set to
# 0xfe in order to disable chip lockout.
#
cdl_option CYGHWR_HAL_KINETIS_FLASH_CONF_FSEC {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FLASH_CONF is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x000000FE
    # value_source default
    # Default value: 0x000000FE
};

# Flash nonvolatile option byte
#
cdl_option CYGHWR_HAL_KINETIS_FLASH_CONF_FOPT {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FLASH_CONF is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x000000FF
    # value_source default
    # Default value: 0x000000FF
};

# Data flash protection byte
#
cdl_option CYGHWR_HAL_KINETIS_FLASH_CONF_FDPROT {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FLASH_CONF is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x000000FF
    # value_source default
    # Default value: 0x000000FF
};

# EEPROM protection byte
#
cdl_option CYGHWR_HAL_KINETIS_FLASH_CONF_FEPROT {
    # This option is not active
    # The parent CYGHWR_HAL_KINETIS_FLASH_CONF is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x000000FF
    # value_source default
    # Default value: 0x000000FF
};

# <
# Platform provides UART 0 HAL
# This interface will be implemented if the specific
# controller being used has on-chip UART 0,
# and if that UART is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART0 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides HAL for UART0 hardware flow control.
# This interface will be implemented if the specific
# on-chip UART 0 has RTS/CTS flow control
# that is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART0_RTSCTS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides UART 1 HAL
# This interface will be implemented if the specific
# controller being used has on-chip UART 1,
# and if that UART is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART1 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides HAL for UART1 hardware flow control.
# This interface will be implemented if the specific
# on-chip UART 1 has RTS/CTS flow control
# that is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART1_RTSCTS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides UART 2 HAL
# This interface will be implemented if the specific
# controller being used has on-chip UART 2,
# and if that UART is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART2 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides HAL for UART2 hardware flow control.
# This interface will be implemented if the specific
# on-chip UART 2 has RTS/CTS flow control
# that is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART2_RTSCTS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides UART 3 HAL
# This interface will be implemented if the specific
# controller being used has on-chip UART 3,
# and if that UART is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART3 {
    # Implemented by CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM, active, enabled
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 1

    # The following properties are affected by this value
};

# Platform provides HAL for UART3 hardware flow control.
# This interface will be implemented if the specific
# on-chip UART 3 has RTS/CTS flow control
# that is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART3_RTSCTS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides UART 4 HAL
# This interface will be implemented if the specific
# controller being used has on-chip UART 4,
# and if that UART is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART4 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides HAL for UART4 hardware flow control.
# This interface will be implemented if the specific
# on-chip UART 4 has RTS/CTS flow control
# that is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART4_RTSCTS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides UART 5 HAL
# This interface will be implemented if the specific
# controller being used has on-chip UART 5,
# and if that UART is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART5 {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Platform provides HAL for UART5 hardware flow control.
# This interface will be implemented if the specific
# on-chip UART 5 has RTS/CTS flow control
# that is accessible on the target hardware.
#
cdl_interface CYGINT_HAL_FREESCALE_UART5_RTSCTS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
};

# Build options
# Package specific build options including control over
# compiler flags used only in building this package.
#
cdl_component CYGPKG_HAL_CORTEXM_KINETIS_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the Kinetis variant HAL package. These flags
# are used in addition to the set of global flags.
#
cdl_option CYGPKG_HAL_CORTEXM_KINETIS_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the Kinetis variant HAL package. These flags
# are removed from the set of global flags if present.
#
cdl_option CYGPKG_HAL_CORTEXM_KINETIS_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# Freescale Kinetis TWR-K60N512 Platform MRAM Test!!!!
# The Freescale TWR K60N512 Platform HAL package provides the support
# needed to run eCos on the TWR K60N512 development system. This package
# can also be used for other boards that employ a controller from Kinetis
# families.
#
cdl_package CYGPKG_HAL_CORTEXM_KINETIS_TWR_K60N512_MRAM {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGHWR_HAL_CORTEXM_SYSTICK_CLK_SOURCE == "INTERNAL" 
    #     CYGHWR_HAL_CORTEXM_SYSTICK_CLK_SOURCE == INTERNAL
    #   --> 1
    # Requires:  is_active(CYGPKG_DEVS_ETH_FREESCALE_ENET)
    #                       implies CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == "OSC" 
    #     CYGPKG_DEVS_ETH_FREESCALE_ENET == 0
    #     CYGOPT_HAL_CORTEXM_KINETIS_MCG_REF_EXT_IS == OSC
    #   --> 1
    # Requires:  is_active(CYGPKG_DEVS_ETH_PHY) implies
    #             (1 == CYGHWR_DEVS_ETH_PHY_KSZ8041) 
    #     CYGPKG_DEVS_ETH_PHY == 0
    #     CYGHWR_DEVS_ETH_PHY_KSZ8041 == 0
    #   --> 1
};

# >
# Memory layout
# Combination of 'Startup type' and 'Kinetis part'
# produces the memory layout.
#
cdl_component CYGHWR_MEMORY_LAYOUT_PLF {
    # Calculated value: 
    #                 (CYG_HAL_STARTUP_PLF == "MRAM" ) ? "kinetis_unisram_mram" :
    #                 (CYG_HAL_STARTUP_PLF == "ROM" ) ? "kinetis_unisram_rom" :
    #                 "undefined" 
    #     CYG_HAL_STARTUP_PLF == MRAM
    #     CYG_HAL_STARTUP_PLF == MRAM
    # Flavor: data
    # Current_value: kinetis_unisram_mram

    # The following properties are affected by this value
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated: 
    #                 (CYGHWR_MEMORY_LAYOUT_PLF) ? CYGHWR_MEMORY_LAYOUT_PLF :
    #                 (CYG_HAL_STARTUP == "ROM" ) ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_rom" :
    #                 (CYG_HAL_STARTUP == "SRAM") ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_sram" :
    #                 "undefined" 
    # component CYGHWR_MEMORY_LAYOUT
    #     Calculated: 
    #                 (CYGHWR_MEMORY_LAYOUT_PLF) ? CYGHWR_MEMORY_LAYOUT_PLF :
    #                 (CYG_HAL_STARTUP == "ROM" ) ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_rom" :
    #                 (CYG_HAL_STARTUP == "SRAM") ? "kinetis_"
    #                 . CYGHWR_HAL_CORTEXM_KINETIS_OC_MEM_LAYOUT  . "_sram" :
    #                 "undefined" 
};

# Number of communication channels on the board
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Legal values: 0 to 2

    # The following properties are affected by this value
    # option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    # option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL
    #     LegalValues: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
};

# Debug serial port
# The TWR board has one serial port fitted to RS232 connector.
# This option chooses which port will be used to connect to a host
# running GDB.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL {
    # This option is not active
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_CONFIGURABLE == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 1
};

# Diagnostic serial port
# The TWR has one serial port fitted to RS232 connector.
# This option chooses which port will be used for diagnostic output.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL {
    # ActiveIf constraint: CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE
    #     CYGPRI_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_CONFIGURABLE == 1
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS-1
    #     CYGNUM_HAL_VIRTUAL_VECTOR_COMM_CHANNELS == 1
};

# Console serial port baud rate
# This option controls the default baud rate used for the
# console connection.
# Note: this should match the value chosen for the GDB port if the
# diagnostic and GDB port are the same.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_CONSOLE_CHANNEL_BAUD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values: 9600 19200 38400 57600 115200
};

# GDB serial port baud rate
# This option controls the default baud rate used for the
# GDB connection.
# Note: this should match the value chosen for the console port
# if the console and GDB port are the same.
#
cdl_option CYGNUM_HAL_VIRTUAL_VECTOR_DEBUG_CHANNEL_BAUD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 38400
    # value_source default
    # Default value: 38400
    # Legal values: 9600 19200 38400 57600 115200
};

# Create StubROM SREC and binary files
# This component causes the ELF image generated by the
# build process to be converted to S-Record and binary
# files.
#
cdl_component CYGBLD_HAL_CORTEXM_TWR_MK60N512_GDB_STUBS {
    # This option is not active
    # ActiveIf constraint: CYGBLD_BUILD_COMMON_GDB_STUBS
    #     CYGBLD_BUILD_COMMON_GDB_STUBS == 0
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
    # Requires:  CYG_HAL_STARTUP == "ROM" 
    #     CYG_HAL_STARTUP == MRAM
    #   --> 0
};

# <
# <
# <
# <
# Infrastructure
# Common types and useful macros.
# Tracing and assertion facilities.
# Package startup options.
#
cdl_package CYGPKG_INFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # package CYGPKG_HAL
    #     Requires: CYGPKG_INFRA
};

# >
# Asserts & Tracing
# The eCos source code contains a significant amount of
# internal debugging support, in the form of assertions and
# tracing.
# Assertions check at runtime that various conditions are as
# expected; if not, execution is halted.
# Tracing takes the form of text messages that are output
# whenever certain events occur, or whenever functions are
# called or return.
# The most important property of these checks and messages is
# that they are not required for the program to run.
# It is prudent to develop software with assertions enabled,
# but disable them when making a product release, thus
# removing the overhead of that checking.
# It is possible to enable assertions and tracing
# independently.
# There are also options controlling the exact behaviour of
# the assertion and tracing facilities, thus giving users
# finer control over the code and data size requirements.
#
cdl_component CYGPKG_INFRA_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGNUM_INFRA_EMPTY_DELETE_THRESHOLD
    #     ActiveIf: CYGPKG_INFRA_DEBUG
    # component CYGFUN_KERNEL_THREADS_STACK_CHECKING
    #     ActiveIf: CYGPKG_INFRA_DEBUG
    # component CYGFUN_KERNEL_THREADS_STACK_MEASUREMENT
    #     DefaultValue:  0 != CYGPKG_INFRA_DEBUG 
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
};

# >
# Use asserts
# If this option is defined, asserts in the code are tested.
# Assert functions (CYG_ASSERT()) are defined in
# 'include/cyg/infra/cyg_ass.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no checking of the asserted conditions.
#
cdl_component CYGDBG_USE_ASSERTS {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0

    # The following properties are affected by this value
    # component CYGFUN_KERNEL_THREADS_STACK_CHECKING
    #     ActiveIf: CYGDBG_USE_ASSERTS
    # option CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG
    #     Requires: CYGDBG_USE_ASSERTS
    # option CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG
    #     DefaultValue:  0 != CYGDBG_USE_ASSERTS 
};

# >
# Preconditions
# This option allows individual control of preconditions.
# A precondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_PRECONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_PRECONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Postconditions
# This option allows individual control of postconditions.
# A postcondition is one type of assert, which it is
# useful to control separately from more general asserts.
# The function is CYG_POSTCONDITION(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_POSTCONDITIONS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Loop invariants
# This option allows individual control of loop invariants.
# A loop invariant is one type of assert, which it is
# useful to control separately from more general asserts,
# particularly since a loop invariant is typically evaluated
# a great many times when used correctly.
# The function is CYG_LOOP_INVARIANT(condition,msg).
#
cdl_option CYGDBG_INFRA_DEBUG_LOOP_INVARIANTS {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use assert text
# All assertions within eCos contain a text message
# which should give some information about the condition
# being tested.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information if an assertion actually gets
# triggered.
#
cdl_option CYGDBG_INFRA_DEBUG_ASSERT_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_ASSERTS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use tracing
# If this option is defined, tracing operations
# result in output or logging, depending on other options.
# This may have adverse effects on performance, if the time
# taken to output message overwhelms the available CPU
# power or output bandwidth.
# Trace functions (CYG_TRACE()) are defined in
# 'include/cyg/infra/cyg_trac.h' within the 'install' tree.
# If it is not defined, these result in no additional
# object code and no trace information.
#
cdl_component CYGDBG_USE_TRACING {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    #     CYGINT_INFRA_DEBUG_TRACE_IMPL == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT
    #     ActiveIf: CYGDBG_USE_TRACING
    # option CYGDBG_KERNEL_TRACE_TIMESLICE
    #     ActiveIf: CYGDBG_USE_TRACING
    # component CYGPKG_LIBM_TRACE
    #     Requires: CYGDBG_USE_TRACING
};

# >
# Trace function reports
# This option allows individual control of
# function entry/exit tracing, independent of
# more general tracing output.
# This may be useful to remove clutter from a
# trace log.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_REPORTS {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use trace text
# All trace calls within eCos contain a text message
# which should give some information about the circumstances.
# These text messages will end up being embedded in the
# application image and hence there is a significant penalty
# in terms of image size.
# It is possible to suppress the use of these messages by
# disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_MESSAGE {
    # This option is not active
    # The parent CYGDBG_USE_TRACING is not active
    # The parent CYGDBG_USE_TRACING is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Trace output implementations
#
cdl_interface CYGINT_INFRA_DEBUG_TRACE_IMPL {
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY, inactive, disabled
    # Implemented by CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER, inactive, enabled
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGDBG_USE_ASSERTS
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
    # component CYGDBG_USE_TRACING
    #     Requires:  1 == CYGINT_INFRA_DEBUG_TRACE_IMPL 
};

# Null output
# A null output module which is useful when
# debugging interactively; the output routines
# can be breakpointed rather than have them actually
# 'print' something.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_NULL {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Simple output
# An output module which produces simple output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGDBG_KERNEL_TRACE_TIMESLICE
    #     Requires: !CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE
};

# Fancy output
# An output module which produces fancy output
# from tracing and assertion events.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGDBG_KERNEL_TRACE_TIMESLICE
    #     Requires: !CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY
};

# Buffered tracing
# An output module which buffers output
# from tracing and assertion events. The stored
# messages are output when an assert fires, or
# CYG_TRACE_PRINT() (defined in <cyg/infra/cyg_trac.h>)
# is called.
# Of course, there will only be stored messages
# if tracing per se (CYGDBG_USE_TRACING)
# is enabled above.
#
cdl_component CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Trace buffer size
# The size of the trace buffer. This counts the number
# of trace records stored. When the buffer fills it
# either wraps, stops recording, or generates output.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 5 to 65535
};

# Wrap trace buffer when full
# When the trace buffer has filled with records it
# starts again at the beginning. Hence only the last
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_WRAP {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Halt trace buffer when full
# When the trace buffer has filled with records it
# stops recording. Hence only the first
# CYGDBG_INFRA_DEBUG_TRACE_BUFFER_SIZE messages will
# be recorded.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_HALT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer when full
# When the trace buffer has filled with records it
# prints the contents of the buffer. The buffer is then
# emptied and the system continues.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Print trace buffer on assert fail
# When an assertion fails the trace buffer will be 
# printed to the default diagnostic device.
#
cdl_option CYGDBG_INFRA_DEBUG_TRACE_BUFFER_PRINT_ON_ASSERT {
    # This option is not active
    # The parent CYGDBG_INFRA_DEBUG_TRACE_ASSERT_BUFFER is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use function names
# All trace and assert calls within eCos contain a
# reference to the builtin macro '__PRETTY_FUNCTION__',
# which evaluates to a string containing
# the name of the current function.
# This is useful when reading a trace log.
# It is possible to suppress the use of the function name
# by disabling this option.
# This results in smaller code size, but there is less
# human-readable information available in the trace output,
# possibly only filenames and line numbers.
#
cdl_option CYGDBG_INFRA_DEBUG_FUNCTION_PSEUDOMACRO {
    # This option is not active
    # The parent CYGPKG_INFRA_DEBUG is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Startup options
# Some packages require a startup routine to be called.
# This can be carried out by application code, by supplying
# a routine called cyg_package_start() which calls the
# appropriate package startup routine(s).
# Alternatively, this routine can be constructed automatically
# and configured to call the startup routines of your choice.
#
cdl_component CYGPKG_INFRA_STARTUP {
    # There is no associated value.
};

# >
# Start uITRON subsystem
# Generate a call to initialize the
# uITRON compatibility subsystem
# within the system version of cyg_package_start().
# This enables compatibility with uITRON.
# You must configure uITRON with the correct tasks before
# starting the uItron subsystem.
# If this is disabled, and you want to use uITRON,
# you must call cyg_uitron_start() from your own
# cyg_package_start() or cyg_userstart().
#
cdl_option CYGSEM_START_UITRON_COMPATIBILITY {
    # This option is not active
    # ActiveIf constraint: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGPKG_UITRON
    #     CYGPKG_UITRON (unknown) == 0
    #   --> 0
};

# <
# Smaller slower memcpy()
# Enabling this option causes the implementation of
# the standard memcpy() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memcpy() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMCPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Smaller slower memset()
# Enabling this option causes the implementation of
# the standard memset() routine to reduce code
# size at the expense of execution speed. This
# option is automatically enabled with the use of
# the -Os option to the compiler. Also note that
# the compiler will try to use its own builtin
# version of memset() if possible, ignoring the
# implementation in this package, unless given
# the -fno-builtin compiler option.
#
cdl_option CYGIMP_INFRA_PREFER_SMALL_TO_FAST_MEMSET {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide empty C++ delete functions
# To deal with virtual destructors, where the correct delete()
# function must be called for the derived class in question, the
# underlying delete is called when needed, from destructors.  This
# is regardless of whether the destructor is called by delete itself.
# So there is a reference to delete() from all destructors.  The
# default builtin delete() attempts to call free() if there is
# one defined.  So, if you have destructors, and you have free(),
# as in malloc() and free(), any destructor counts as a reference
# to free().  So the dynamic memory allocation code is linked
# in regardless of whether it gets explicitly called. This
# increases code and data size needlessly.
# To defeat this undesirable behaviour, we define empty versions
# of delete and delete[].  But doing this prevents proper use
# of dynamic memory in C++ programs via C++'s new and delete
# operators.
# Therefore, this option is provided
# for explicitly disabling the provision of these empty functions,
# so that new and delete can be used, if that is what is required.
#
cdl_option CYGFUN_INFRA_EMPTY_DELETE_FUNCTIONS {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Threshold for valid number of delete calls
# Some users don't know about the empty delete function and then
# wonder why their C++ classes are leaking memory. If
# INFRA_DEBUG is enabled we keep a counter for the number of
# times delete is called. If it goes above this threshold we throw
# an assertion failure. This should point heavy users of
# delete in the right direction without upsetting those who want
# an empty delete function. 
#
cdl_option CYGNUM_INFRA_EMPTY_DELETE_THRESHOLD {
    # This option is not active
    # ActiveIf constraint: CYGPKG_INFRA_DEBUG
    #     CYGPKG_INFRA_DEBUG == 0
    #   --> 0

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 100
    # value_source default
    # Default value: 100
};

# Provide dummy abort() function
# This option controls the inclusion of a dummy abort() function.
# Parts of the C and C++ compiler runtime systems contain references
# to abort(), particulary in the C++ exception handling code. It is
# not possible to eliminate these references, so this dummy function
# in included to satisfy them. It is not expected that this function
# will ever be called, so its current behaviour is to simply loop.
#
cdl_option CYGFUN_INFRA_DUMMY_ABORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  CYGINT_ISO_EXIT == 0 
    #     CYGINT_ISO_EXIT == 0
    #   --> 1
    # Requires: !CYGINT_ISO_EXIT
    #     CYGINT_ISO_EXIT == 0
    #   --> 1
};

# Reset platform at end of test case execution
# If this option is set then test case programs will reset the platform
# when they terminate, as opposed to the default which is to just hang
# in a loop.
#
cdl_option CYGSEM_INFRA_RESET_ON_TEST_EXIT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Provide dummy strlen() function
# This option controls the inclusion of a dummy strlen() function.
# Parts of the C and C++ compiler runtime systems contain references
# to strlen(), particulary in the C++ exception handling code. It is
# not possible to eliminate these references, so this dummy function
# in included to satisfy them. While it is not expected that this function
# will ever be called, it is functional but uses the simplest, smallest
# algorithm. There is a faster version of strlen() in the C library.
#
cdl_option CYGFUN_INFRA_DUMMY_STRLEN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  CYGINT_ISO_STRING_STRFUNCS == 0 
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 0
    # Requires: !CYGINT_ISO_STRING_STRFUNCS
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 0
};

# Make all compiler warnings show as errors
# Enabling this option will cause all compiler warnings to show
# as errors and bring the library build to a halt. This is used
# to ensure that the code base is warning free, and thus ensure
# that newly introduced warnings stand out and get fixed before
# they show up as weird run-time behavior.
#
cdl_option CYGBLD_INFRA_CFLAGS_WARNINGS_AS_ERRORS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -Werror") 
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O0 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #   --> 0
};

# Make compiler and assembler communicate by pipe
# Enabling this option will cause the compiler to feed the
# assembly output the the assembler via a pipe instead of
# via a temporary file. This normally reduces the build
# time.
#
cdl_option CYGBLD_INFRA_CFLAGS_PIPE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  is_substr(CYGBLD_GLOBAL_CFLAGS, " -pipe") 
    #     CYGBLD_GLOBAL_CFLAGS == "-Wall -Wpointer-arith -Wstrict-prototypes -Wundef -Woverloaded-virtual -Wno-write-strings -mcpu=cortex-m3 -mthumb -g -O0 -ffunction-sections -fdata-sections -fno-rtti -fno-exceptions"
    #   --> 0
};

# Infra build options
# Package specific build options including control over
# compiler flags used only in building this package.
#
cdl_component CYGPKG_INFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are used
# in addition to the set of global flags.
#
cdl_option CYGPKG_INFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the eCos infra package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed linker flags
# This option modifies the set of linker flags for
# building the eCos infra package tests. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_LDFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Wl,--gc-sections
    # value_source default
    # Default value: -Wl,--gc-sections
};

# Additional linker flags
# This option modifies the set of linker flags for
# building the eCos infra package tests. These flags are added to
# the set of global flags if present.
#
cdl_option CYGPKG_INFRA_LDFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -Wl,--fatal-warnings
    # value_source default
    # Default value: -Wl,--fatal-warnings
};

# Infra package tests
#
cdl_component CYGPKG_INFRA_TESTS {
    # Calculated value:  "tests/cxxsupp tests/diag_sprintf1 tests/diag_sprintf2" 
    # Flavor: data
    # Current_value: tests/cxxsupp tests/diag_sprintf1 tests/diag_sprintf2
};

# >
# Number of times a test runs
# This option controls the number of times tests will execute their
# basic function.  Not all tests will honor this setting, but those
# that do will execute the test N times before terminating.  A value
# less than 0 indicates to run forever.
#
cdl_option CYGNUM_TESTS_RUN_COUNT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# <
# <
# eCos kernel
# doc: ref/kernel.html
# This package contains the core functionality of the eCos
# kernel. It relies on functionality provided by various HAL
# packages and by the eCos infrastructure. In turn the eCos
# kernel provides support for other packages such as the device
# drivers and the uITRON compatibility layer.
#
cdl_package CYGPKG_KERNEL {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # option CYGFUN_HAL_COMMON_KERNEL_SUPPORT
    #     Requires: CYGPKG_KERNEL
    # option CYGFUN_HAL_COMMON_KERNEL_SUPPORT
    #     DefaultValue: CYGPKG_KERNEL
    # option CYGNUM_HAL_COMMON_INTERRUPTS_STACK_SIZE
    #     DefaultValue:  CYGPKG_KERNEL ? 4096 : 32768 
    # option CYGSEM_MEMALLOC_ALLOCATOR_FIXED_THREADAWARE
    #     ActiveIf: CYGPKG_KERNEL
    # option CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_THREADAWARE
    #     ActiveIf: CYGPKG_KERNEL
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_THREADAWARE
    #     ActiveIf: CYGPKG_KERNEL
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_THREADAWARE
    #     Requires: CYGPKG_KERNEL
    # option CYGSEM_MEMALLOC_ALLOCATOR_SEPMETA_THREADAWARE
    #     ActiveIf: CYGPKG_KERNEL
    # option CYGFUN_MEMALLOC_KAPI
    #     ActiveIf: CYGPKG_KERNEL
    # option CYGSEM_LIBC_STRING_PER_THREAD_STRTOK
    #     ActiveIf: CYGPKG_KERNEL
    # package CYGPKG_CPULOAD
    #     Requires: CYGPKG_KERNEL
    # option CYGSEM_LIBC_I18N_PER_THREAD_MB
    #     ActiveIf: CYGPKG_KERNEL
};

# >
# Kernel interrupt handling
# doc: ref/kernel-interrupts.html
# The majority of configuration options related to interrupt
# handling are in the HAL packages, since usually the code has
# to be platform-specific. There are a number of options
# provided within the kernel related to slightly higher-level
# concepts, for example Delayed Service Routines.
#
cdl_component CYGPKG_KERNEL_INTERRUPTS {
    # There is no associated value.

    # The following properties are affected by this value
    # option CYGDBG_KERNEL_INSTRUMENT_INTR
    #     ActiveIf: CYGPKG_KERNEL_INTERRUPTS
};

# >
# Use delayed service routines (DSRs)
# In eCos the recommended way to handle device interrupts is to
# do a minimum amount of work inside the low level interrupt
# handler itself, and instead do as much as possible in a
# Delayed Service Routine or DSR. If an application does not
# make use of DSRs directly or indirectly then it is possible
# to disable the DSR support completely, which reduces the
# overheads of context switches and interrupt handling. Note
# that the kernel real-time clock makes use of DSRs, as do many
# of the device drivers. 
#
cdl_component CYGIMP_KERNEL_INTERRUPTS_DSRS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGVAR_KERNEL_COUNTERS_CLOCK
    #     Requires: CYGIMP_KERNEL_INTERRUPTS_DSRS
};

# >
#
cdl_interface CYGINT_KERNEL_INTERRUPTS_DSRS {
    # Implemented by CYGIMP_KERNEL_INTERRUPTS_DSRS_LIST, active, enabled
    # Implemented by CYGIMP_KERNEL_INTERRUPTS_DSRS_TABLE, active, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires: 1 == CYGINT_KERNEL_INTERRUPTS_DSRS
    #     CYGINT_KERNEL_INTERRUPTS_DSRS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_KERNEL_INTERRUPTS_DSRS
    #     Requires: 1 == CYGINT_KERNEL_INTERRUPTS_DSRS
};

# Use linked lists for DSRs
# When DSR support is enabled the kernel must keep track of all
# the DSRs that are pending. This information can be kept in a
# fixed-size table or in a linked list. The list implementation
# requires that the kernel disable interrupts for a very short
# period of time outside interrupt handlers, but there is no
# possibility of a table overflow occurring.
#
cdl_component CYGIMP_KERNEL_INTERRUPTS_DSRS_LIST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Schedule DSRs in FIFO order
# When this option is set, DSRs are scheduled
# in the natural FIFO (first in, first out) order,
# otherwise they are scheduled in LIFO (last in, first
# out) order. Applications should not rely on any
# particular order of scheduling of DSRs. LIFO
# scheduling is kept for backward compatibility only and
# is not recommended as it may lead to high (up to 2
# times higher then FIFO) IRQ-to-DSR latencies at some
# (typically rare) conditions. If unsure, leave this set.
#
cdl_option CYGSEM_KERNEL_INTERRUPTS_DSRS_LIST_FIFO {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Use fixed-size table for DSRs
# When DSR support is enabled the kernel must keep track of all
# the DSRs that are pending. This information can be kept in a
# fixed-size table or in a linked list. The table
# implementation involves a very small risk of overflow at
# run-time if a given interrupt source is able to have more
# than one pending DSR. However it has the advantage that
# the kernel does not need to disable interrupts outside
# interrupt handlers.
#
cdl_component CYGIMP_KERNEL_INTERRUPTS_DSRS_TABLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Number of entries in fixed-size DSR table
# When DSR support is enabled the kernel must keep track of all
# the DSRs that are pending. One approach involves a fixed-size
# table, which involves a very small risk of overflow at
# run-time. By increasing the table size it is possible to reduce
# this risk.
#
cdl_option CYGNUM_KERNEL_INTERRUPTS_DSRS_TABLE_SIZE {
    # This option is not active
    # The parent CYGIMP_KERNEL_INTERRUPTS_DSRS_TABLE is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 2 to 1024
};

# <
# Chain all interrupts together
# Interrupts can be attached to vectors either singly, or be
# chained together. The latter is necessary if there is no way
# of discovering which device has interrupted without
# inspecting the device itself. It can also reduce the amount
# of RAM needed for interrupt decoding tables and code.
#
cdl_option CYGIMP_KERNEL_INTERRUPTS_CHAIN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN
    #     CYGIMP_HAL_COMMON_INTERRUPTS_CHAIN == 0
    #   --> 0
};

# <
# <
# Exception handling
# doc: ref/kernel-exceptions.html
# In the context of the eCos kernel exceptions are unexpected
# events detected by the hardware, for example an attempt to
# execute an illegal instruction. There is no relation with
# other forms of exception, for example the catch and throw
# facilities of languages like C++. It is possible to disable
# all support for exceptions and thus save some memory.
#
cdl_component CYGPKG_KERNEL_EXCEPTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGPKG_HAL_EXCEPTIONS
    #     CYGPKG_HAL_EXCEPTIONS == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGPKG_HAL_EXCEPTIONS
    #     Requires: CYGPKG_KERNEL_EXCEPTIONS
    # option CYGPKG_HAL_EXCEPTIONS
    #     DefaultValue: CYGPKG_KERNEL_EXCEPTIONS
};

# >
# Decode exception types in kernel
# On targets where several different types of exception are
# possible, for example executing an illegal instruction and
# division by zero, it is possible for the kernel to do some
# decoding of the exception type and deliver the different
# types of exception to different handlers in the application
# code. Alternatively the kernel can simply pass all
# exceptions directly to application code, leaving the
# decoding to be done by the application
#
cdl_option CYGSEM_KERNEL_EXCEPTIONS_DECODE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Use global exception handlers
# In the context of the eCos kernel exceptions are
# unexpected events detected by the hardware, for
# example an attempt to execute an illegal
# instruction. If the kernel is configured
# to support exceptions then two implementations are
# possible. The default implementation involves a single set
# of exception handlers that are in use for the entire
# system. The alternative implementation allows different
# exception handlers to be specified for each thread.
#
cdl_option CYGSEM_KERNEL_EXCEPTIONS_GLOBAL {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Kernel schedulers
# doc: ref/kernel-overview.html#KERNEL-OVERVIEW-SCHEDULERS
# The eCos kernel provides a choice of schedulers. In addition
# there are a number of configuration options to control the
# detailed behaviour of these schedulers.
#
cdl_component CYGPKG_KERNEL_SCHED {
    # There is no associated value.

    # The following properties are affected by this value
    # option CYGDBG_KERNEL_INSTRUMENT_SCHED
    #     ActiveIf: CYGPKG_KERNEL_SCHED
};

# >
# Number of schedulers in this configuration
#
cdl_interface CYGINT_KERNEL_SCHEDULER {
    # Implemented by CYGSEM_KERNEL_SCHED_MLQUEUE, active, enabled
    # Implemented by CYGSEM_KERNEL_SCHED_BITMAP, active, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires: 1 == CYGINT_KERNEL_SCHEDULER
    #     CYGINT_KERNEL_SCHEDULER == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_KERNEL_SCHEDULER
    #     Requires: 1 == CYGINT_KERNEL_SCHEDULER
};

# Non-zero if the active schedule only has unique priorities
# Not all schedulers allow mutiple threads to use the same
# priority. That property is signalled via this option, allowing
# scheduler and tests to behave accordingly.
#
cdl_interface CYGINT_KERNEL_SCHEDULER_UNIQUE_PRIORITIES {
    # Implemented by CYGSEM_KERNEL_SCHED_BITMAP, active, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0

    # The following properties are affected by this value
    # component CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL
    #     Requires:  CYGINT_KERNEL_SCHEDULER_UNIQUE_PRIORITIES == 0 
};

# Multi-level queue scheduler
# The multi-level queue scheduler supports multiple priority
# levels and multiple threads at each priority level.
# Preemption between priority levels is automatic. Timeslicing
# within a given priority level is controlled by a separate
# configuration option.
#
cdl_component CYGSEM_KERNEL_SCHED_MLQUEUE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGPRI_KERNEL_SCHED_IMPL_HXX
    #     Calculated:   CYGSEM_KERNEL_SCHED_BITMAP  ? "<cyg/kernel/bitmap.hxx>"  : CYGSEM_KERNEL_SCHED_MLQUEUE ? "<cyg/kernel/mlqueue.hxx>" : CYGSEM_KERNEL_SCHED_LOTTERY ? "<cyg/kernel/lottery.hxx>" : "!!!-- Configuration broken - no scheduler selected --!!!"
    # component CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL
    #     ActiveIf:  CYGSEM_KERNEL_SCHED_MLQUEUE 
    # option CYGDBG_KERNEL_INSTRUMENT_MLQ
    #     ActiveIf: CYGSEM_KERNEL_SCHED_MLQUEUE
};

# >
# Output timeslices when tracing
# When tracing is enabled, output trace messages every
# timeslice. This can be quite verbose so is disabled by
# default.
#
cdl_option CYGDBG_KERNEL_TRACE_TIMESLICE {
    # This option is not active
    # ActiveIf constraint: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: !CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE
    #     CYGDBG_INFRA_DEBUG_TRACE_ASSERT_SIMPLE == 0
    #   --> 1
    # Requires: !CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY
    #     CYGDBG_INFRA_DEBUG_TRACE_ASSERT_FANCY == 0
    #   --> 1
};

# <
# Bitmap scheduler
# The bitmap scheduler supports multiple priority levels but
# only one thread can exist at each priority level. This means
# that scheduling decisions are very simple and hence the
# scheduler is efficient. Preemption between priority levels is
# automatic. Timeslicing within a given priority level is
# irrelevant since there can be only one thread at each
# priority level.
#
cdl_option CYGSEM_KERNEL_SCHED_BITMAP {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: !CYGPKG_KERNEL_SMP_SUPPORT
    #     CYGPKG_KERNEL_SMP_SUPPORT == 0
    #   --> 1

    # The following properties are affected by this value
    # option CYGPRI_KERNEL_SCHED_IMPL_HXX
    #     Calculated:   CYGSEM_KERNEL_SCHED_BITMAP  ? "<cyg/kernel/bitmap.hxx>"  : CYGSEM_KERNEL_SCHED_MLQUEUE ? "<cyg/kernel/mlqueue.hxx>" : CYGSEM_KERNEL_SCHED_LOTTERY ? "<cyg/kernel/lottery.hxx>" : "!!!-- Configuration broken - no scheduler selected --!!!"
    # component CYGSEM_KERNEL_SCHED_TIMESLICE
    #     Requires: !CYGSEM_KERNEL_SCHED_BITMAP
    # option CYGDBG_KERNEL_INSTRUMENT_BITMAP
    #     ActiveIf: CYGSEM_KERNEL_SCHED_BITMAP
};

# Scheduler header file
# This option sets a preprocessor symbol which names the header
# file for the selected scheduler.  It is used internally by the
# common scheduler code to include the correct header file.
#
cdl_option CYGPRI_KERNEL_SCHED_IMPL_HXX {
    # Calculated value:   CYGSEM_KERNEL_SCHED_BITMAP  ? "<cyg/kernel/bitmap.hxx>"  : CYGSEM_KERNEL_SCHED_MLQUEUE ? "<cyg/kernel/mlqueue.hxx>" : CYGSEM_KERNEL_SCHED_LOTTERY ? "<cyg/kernel/lottery.hxx>" : "!!!-- Configuration broken - no scheduler selected --!!!"
    #     CYGSEM_KERNEL_SCHED_BITMAP == 0
    #     CYGSEM_KERNEL_SCHED_MLQUEUE == 1
    #     CYGSEM_KERNEL_SCHED_LOTTERY (unknown) == 0
    # Flavor: data
    # Current_value: <cyg/kernel/mlqueue.hxx>
};

# Number of priority levels
# This option controls the number of priority levels that are
# available. For some types of scheduler including the bitmap
# scheduler this may impose an upper bound on the number of
# threads in the system. For other schedulers such as the
# mlqueue scheduler the number of threads is independent from
# the number of priority levels. Note that the lowest priority
# level is normally used only by the idle thread, although
# application threads can run at this priority if necessary.
#
cdl_component CYGNUM_KERNEL_SCHED_PRIORITIES {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 1 to 32

    # The following properties are affected by this value
    # option CYGIMP_IDLE_THREAD_YIELD
    #     ActiveIf: (CYGNUM_KERNEL_SCHED_PRIORITIES == 1)
    # option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT_PRIORITY
    #     LegalValues: 0 to  CYGNUM_KERNEL_SCHED_PRIORITIES - 1 
};

# >
# Bitmap size
# This option automatically defines the size of bitmap
# used to track occupied priority levels.
#
cdl_option CYGNUM_KERNEL_SCHED_BITMAP_SIZE {
    # Calculated value: "CYGNUM_KERNEL_SCHED_PRIORITIES"
    # Flavor: data
    # Current_value: CYGNUM_KERNEL_SCHED_PRIORITIES
};

# Dequeue highest priority threads first
# With this option enabled, threads queued in a thread queue
# will be dequeued in priority order, rather than first in,
# first out (FIFO). Threads of equal priority are dequeued
# oldest first. The only exception is the scheduler run 
# queues where order is less important as each is already
# sorted by priority. Note that this makes the thread queueing
# less deterministic.
#
cdl_option CYGIMP_KERNEL_SCHED_SORTED_QUEUES {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Scheduler timeslicing
# Some schedulers including the mlqueue scheduler support
# timeslicing. This means that the kernel will check regularly
# whether or not there is another runnable thread with the
# same priority, and if there is such a thread there will be
# an automatic context switch. Not all applications require
# timeslicing, for example because every thread performs a
# blocking operation regularly. For these applications it is
# possible to disable timeslicing, which reduces the overheads
# associated with timer interrupts.
#
cdl_component CYGSEM_KERNEL_SCHED_TIMESLICE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: !CYGSEM_KERNEL_SCHED_BITMAP
    #     CYGSEM_KERNEL_SCHED_BITMAP == 0
    #   --> 1
    # Requires: CYGVAR_KERNEL_COUNTERS_CLOCK
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    #   --> 1
};

# >
# Number of clock ticks between timeslices
# Assuming timeslicing is enabled, how frequently should it
# take place? The value of this option corresponds to the
# number of clock ticks that should occur before a timeslice
# takes place, so increasing the value reduces the frequency
# of timeslices.
#
cdl_option CYGNUM_KERNEL_SCHED_TIMESLICE_TICKS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 5
    # value_source default
    # Default value: 5
    # Legal values: 1 to 65535
};

# Support runtime enable of timeslice per-thread
# This option makes timslicing a per-thread runtime
# option. When enabled, threads may have timeslicing
# turned on or off dynamically. This is generally used
# by higher level APIs (such as POSIX) to implement
# differing scheduling policies.
#
cdl_option CYGSEM_KERNEL_SCHED_TIMESLICE_ENABLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: false
    #     false (unknown) == 0
    #   --> 0
};

# <
# Enable ASR support
# This component controls support for Asynchronous Service
# Routines (ASRs). This is a function that may be called
# from the scheduler when it has just exited the scheduler
# lock. This is primarily for use by API compatibility layers.
#
cdl_component CYGSEM_KERNEL_SCHED_ASR_SUPPORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: false
    #     false (unknown) == 0
    #   --> 0
};

# >
# Make ASR function global
# This option controls whether the ASR function is shared by
# all threads, or whether each thread may have its own ASR
# function.
#
cdl_option CYGSEM_KERNEL_SCHED_ASR_GLOBAL {
    # This option is not active
    # The parent CYGSEM_KERNEL_SCHED_ASR_SUPPORT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: true
    #     true (unknown) == 0
    #   --> 0
};

# Make ASR data global
# This option controls whether the ASR data is shared by
# all threads, or whether each thread may have its own ASR
# data. This is independent of the previous option because
# it may be useful to pass per-thread data to a shared ASR
# function.
#
cdl_option CYGSEM_KERNEL_SCHED_ASR_DATA_GLOBAL {
    # This option is not active
    # The parent CYGSEM_KERNEL_SCHED_ASR_SUPPORT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: true
    #     true (unknown) == 0
    #   --> 0
};

# <
# <
# SMP support
#
cdl_component CYGPKG_KERNEL_SMP_SUPPORT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGPKG_HAL_SMP_SUPPORT
    #     CYGPKG_HAL_SMP_SUPPORT (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGSEM_KERNEL_SCHED_BITMAP
    #     Requires: !CYGPKG_KERNEL_SMP_SUPPORT
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
    # package CYGPKG_CPULOAD
    #     Requires: !CYGPKG_KERNEL_SMP_SUPPORT
};

# Counters and clocks
# doc: ref/kernel-counters.html
# The counter objects provided by the kernel provide an
# abstraction of the clock facility that is generally provided.
# Application code can associate alarms with counters, where an
# alarm is identified by the number of ticks until it triggers,
# the action to be taken on triggering, and whether or not the
# alarm should be repeated.
#
cdl_component CYGPKG_KERNEL_COUNTERS {
    # There is no associated value.
};

# >
# Provide real-time clock
# On all current target systems the kernel can provide a
# real-time clock. This clock serves two purposes. First it is
# necessary to support clock and alarm related functions.
# Second it is needed to implement timeslicing in some of the
# schedulers including the mlqueue scheduler. If the
# application does not require any of these facilities then it
# is possible to disable the real time clock support
# completely.
#
cdl_option CYGVAR_KERNEL_COUNTERS_CLOCK {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGIMP_KERNEL_INTERRUPTS_DSRS
    #     CYGIMP_KERNEL_INTERRUPTS_DSRS == 1
    #   --> 1

    # The following properties are affected by this value
    # component CYGSEM_KERNEL_SCHED_TIMESLICE
    #     Requires: CYGVAR_KERNEL_COUNTERS_CLOCK
    # option CYGNUM_KERNEL_COUNTERS_CLOCK_ISR_PRIORITY
    #     ActiveIf: CYGVAR_KERNEL_COUNTERS_CLOCK
    # option CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY
    #     Requires: CYGVAR_KERNEL_COUNTERS_CLOCK
    # option CYGFUN_KERNEL_THREADS_TIMER
    #     Requires: CYGVAR_KERNEL_COUNTERS_CLOCK
    # option CYGDBG_KERNEL_INSTRUMENT_CLOCK
    #     ActiveIf: CYGVAR_KERNEL_COUNTERS_CLOCK
    # option CYGDBG_KERNEL_INSTRUMENT_ALARM
    #     ActiveIf: CYGVAR_KERNEL_COUNTERS_CLOCK
    # option CYGDBG_KERNEL_INSTRUMENT_SMP
    #     ActiveIf: CYGVAR_KERNEL_COUNTERS_CLOCK
    # component CYGPKG_HAL_TESTS
    #     Calculated:   "tests/context tests/basic"
    #                           . ((!CYGINT_HAL_TESTS_NO_CACHES) ? " tests/cache" : "")
    #                           . ((CYGPKG_HAL_BUILD_COMPILER_TESTS) ? " tests/cpp1 tests/vaargs" : "")
    #                           . ((!CYGVAR_KERNEL_COUNTERS_CLOCK) ?   " tests/intr" : "") 
};

# Interrupt priority for the real-time clock
# The implementation of the kernel's real-time clock typically
# involves installing an interrupt handler on a suitable hardware
# timer. This option controls the priority level used for that
# interrupt. On most platforms the value is not important because 
# the clock ISR leaves most of the work to be done by the DSR. 
# However some processors have interrupt controllers with special
# requirements for the interrupt priorities, in which case
# application developers must be able to manipulate the clock's
# priority.
#
cdl_option CYGNUM_KERNEL_COUNTERS_CLOCK_ISR_PRIORITY {
    # ActiveIf constraint: CYGVAR_KERNEL_COUNTERS_CLOCK
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0x000000E0
    # value_source default
    # Default value:  is_loaded(CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY) ?
    #      	                      CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY : 1 
    #     CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY == 0x000000E0
    #     CYGNUM_HAL_KERNEL_COUNTERS_CLOCK_ISR_DEFAULT_PRIORITY == 0x000000E0
    #   --> 0x000000E0
};

#
cdl_interface CYGINT_KERNEL_COUNTERS {
    # Implemented by CYGIMP_KERNEL_COUNTERS_SINGLE_LIST, active, enabled
    # Implemented by CYGIMP_KERNEL_COUNTERS_MULTI_LIST, active, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires: 1 == CYGINT_KERNEL_COUNTERS
    #     CYGINT_KERNEL_COUNTERS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_KERNEL_COUNTERS
    #     Requires: 1 == CYGINT_KERNEL_COUNTERS
};

# Implement counters using a single list
# There are two different implementations of the counter
# objects. The first implementation stores all alarms in a
# single linked list. The alternative implementation uses a
# table of linked lists. A single list is more efficient in
# terms of memory usage and is generally adequate when the
# application only makes use of a small number of alarms.
#
cdl_option CYGIMP_KERNEL_COUNTERS_SINGLE_LIST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Implement counters using a table of lists
# There are two different implementations of the counter
# objects. The first implementation stores all alarms in a
# single linked list. The alternative implementation uses a
# table of linked lists, with the size of the table being a
# separate configurable option. For more complicated
# operations it is better to have a table of lists since this
# reduces the amount of computation whenever the timer goes
# off. Assuming a table size of 8 (the default value) on
# average the timer code will only need to check 1/8 of the
# pending alarms instead of all of them.
#
cdl_component CYGIMP_KERNEL_COUNTERS_MULTI_LIST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Size of counter list table
# If counters are implemented using an array of linked lists
# then this option controls the size of the array. A larger
# size reduces the amount of computation that needs to take
# place whenever the timer goes off, but requires extra
# memory.
#
cdl_option CYGNUM_KERNEL_COUNTERS_MULTI_LIST_SIZE {
    # This option is not active
    # The parent CYGIMP_KERNEL_COUNTERS_MULTI_LIST is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
    # Legal values: 1 to 1024
};

# <
# Sort the counter list
# Sorting the counter lists reduces the amount of work that
# has to be done when a counter tick is processed, since the
# next alarm to expire is always at the front of the list.
# However, it makes adding an alarm to the list more expensive
# since a search must be done for the correct place to put it.
# Many alarms are used to implement timeouts, which seldom trigger,
# so it is worthwhile optimizing this case. For this reason
# sorted list are disabled by default.
#
cdl_option CYGIMP_KERNEL_COUNTERS_SORT_LIST {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Measure real-time [clock] interrupt latency
# Measure the interrupt latency as seen by the real-time clock
# timer interrupt.  This requires hardware support, defined by
# the HAL_CLOCK_LATENCY() macro.
#
cdl_option CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGVAR_KERNEL_COUNTERS_CLOCK
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGVAR_KERNEL_COUNTERS_CLOCK_DSR_LATENCY
    #     Requires: CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY
    # option CYGVAR_KERNEL_COUNTERS_CLOCK_DSR_LATENCY
    #     DefaultValue: CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY
};

# Measure real-time [clock] DSR latency
# Measure the DSR latency as seen by the real-time clock
# timer interrupt.  This requires hardware support, defined by
# the HAL_CLOCK_LATENCY() macro.
#
cdl_option CYGVAR_KERNEL_COUNTERS_CLOCK_DSR_LATENCY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY
    #     CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY == 0
    #   --> 0
    # Requires: CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY
    #     CYGVAR_KERNEL_COUNTERS_CLOCK_LATENCY == 0
    #   --> 0
};

# RTC resolution
# This option automatically defines the tuple which is used to
# initialize the RTC resolution, consisting of a numerator and
# denominator. The values of the numerator and denominator are
# defined by the HAL.
#
cdl_option CYGNUM_KERNEL_COUNTERS_RTC_RESOLUTION {
    # Calculated value: "{CYGNUM_HAL_RTC_NUMERATOR, CYGNUM_HAL_RTC_DENOMINATOR}"
    # Flavor: data
    # Current_value: {CYGNUM_HAL_RTC_NUMERATOR, CYGNUM_HAL_RTC_DENOMINATOR}
};

# RTC period
# This option defines the RTC period to be used in
# setting the system clock hardware. It is essentially
# an alias for CYGNUM_HAL_RTC_PERIOD, which is defined
# in the HAL.
#
cdl_option CYGNUM_KERNEL_COUNTERS_RTC_PERIOD {
    # Calculated value: "CYGNUM_HAL_RTC_PERIOD"
    # Flavor: data
    # Current_value: CYGNUM_HAL_RTC_PERIOD
};

# <
# Thread-related options
# There are a number of configuration options related to the
# implementation of threads, for example whether or not the
# eCos kernel supports per-thread data.
#
cdl_component CYGPKG_KERNEL_THREADS {
    # There is no associated value.

    # The following properties are affected by this value
    # option CYGDBG_KERNEL_INSTRUMENT_THREAD
    #     ActiveIf: CYGPKG_KERNEL_THREADS
};

# >
# Allow per-thread timers
# This option controls whether or not the kernel should support
# per-thread clock and alarm related functions. Also some of
# the synchronization primitives such as semaphore and
# condition variable timed wait operations require per-thread
# timer support. If none of these facilities are required then
# the option can be disabled.
#
cdl_option CYGFUN_KERNEL_THREADS_TIMER {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGVAR_KERNEL_COUNTERS_CLOCK
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGMFN_KERNEL_SYNCH_CONDVAR_TIMED_WAIT
    #     Requires: CYGFUN_KERNEL_THREADS_TIMER
};

# Support optional name for each thread
# Threads may optionally be supplied with a name string that is
# used to identify them during debugging. This name is only
# present if `this option is defined. Disabling it reduces both
# code and data size.
#
cdl_option CYGVAR_KERNEL_THREADS_NAME {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
};

# Keep track of all threads using a linked list
# Threads may optionally be placed on a housekeeping list so
# that all threads may be located easily. This is useful mainly
# in conjunction with source-level debugging.
#
cdl_option CYGVAR_KERNEL_THREADS_LIST {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1

    # The following properties are affected by this value
    # option CYGFUN_KERNEL_ALL_THREADS_STACK_CHECKING
    #     Requires: CYGVAR_KERNEL_THREADS_LIST
    # option CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT
    #     Requires: CYGVAR_KERNEL_THREADS_LIST
};

# Keep track of the base of each thread's stack
# This option makes the kernel keep track of the lower limit on
# each thread's stack. It allows the kernel to adjust the lower
# limit, thus making space for per-thread data. Note that it
# does not imply any form of run-time stack overflow checking.
#
cdl_option CYGFUN_KERNEL_THREADS_STACK_LIMIT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # component CYGVAR_KERNEL_THREADS_DATA
    #     Requires: CYGFUN_KERNEL_THREADS_STACK_LIMIT
};

# Check thread stacks for overflows
# This option enables a variety of checks for stack overflow
# including signatures at the top and base of thread stacks,
# which are asserted for correctness whenever a thread switches.
#
cdl_component CYGFUN_KERNEL_THREADS_STACK_CHECKING {
    # This option is not active
    # ActiveIf constraint: CYGPKG_INFRA_DEBUG
    #     CYGPKG_INFRA_DEBUG == 0
    #   --> 0
    # ActiveIf constraint: CYGDBG_USE_ASSERTS
    #     CYGDBG_USE_ASSERTS == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Check all threads whenever possible
# This option enables more active checking of all threads for
# wrongdoing.  In theory, checking threads other than the old and new
# executing threads in a thread-switch is pointless, because no other
# thread has run, so no other stack can be exceeded.  But errors such
# as memory scribbling, dangling pointers, overlapping use of store
# or errors accessing objects adjacent to a stack which can be very
# hard to find can be detected this way, saving debug time.
#
cdl_option CYGFUN_KERNEL_ALL_THREADS_STACK_CHECKING {
    # This option is not active
    # The parent CYGFUN_KERNEL_THREADS_STACK_CHECKING is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGVAR_KERNEL_THREADS_LIST
    #     CYGVAR_KERNEL_THREADS_LIST == 0
    #   --> 0
};

# Signature size in bytes, at stack top and bottom
# This is the size of the area reserved for a signature at the top
# and bottom of all stacks.  It also provides a buffer zone for
# detecting overflow before external objects are corrupted, hence the
# ability to vary it here.  But if you are short of stack, increasing
# this value will make the overflow more, not less likely, of course.
#
cdl_option CYGNUM_KERNEL_THREADS_STACK_CHECK_DATA_SIZE {
    # This option is not active
    # The parent CYGFUN_KERNEL_THREADS_STACK_CHECKING is not active

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 32
    # value_source default
    # Default value: 32
    # Legal values: 8 to 512
};

# <
# Measure stack usage
# This option allows measurement of each thread's stack by initializing
# it to a predefined value at thread creation time. Later use of the
# cyg_thread_measure_stack_usage() function allows the maximum stack
# usage of the thread so far to be obtained. Note that this is not
# necessarily the true maximum stack usage that the thread will ever
# use since all that has been measured is the stack usage corresponding
# to the code path followed this time, and not the code path that may
# be followed in future.
#
cdl_component CYGFUN_KERNEL_THREADS_STACK_MEASUREMENT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  0 != CYGPKG_INFRA_DEBUG 
    #     CYGPKG_INFRA_DEBUG == 0
    #   --> 0
};

# >
# Output stack usage on thread exit
# This will output the measured stack usage on the diagnostic
# output when a thread exits.
#
cdl_option CYGDBG_KERNEL_THREADS_STACK_MEASUREMENT_VERBOSE_EXIT {
    # This option is not active
    # The parent CYGFUN_KERNEL_THREADS_STACK_MEASUREMENT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Support for per-thread data
# doc: ref/kernel-thread-data.html
# It is possible for the kernel to support per-thread data, in
# other words an area of memory specific to each thread which
# can be used to store data for that thread. This per-thread
# data can be used by applications or by other packages such as
# the ISO C library.
#
cdl_component CYGVAR_KERNEL_THREADS_DATA {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGFUN_KERNEL_THREADS_STACK_LIMIT
    #     CYGFUN_KERNEL_THREADS_STACK_LIMIT == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGSEM_ERROR_PER_THREAD_ERRNO
    #     Requires: CYGVAR_KERNEL_THREADS_DATA
    # option CYGSEM_LIBC_STRING_PER_THREAD_STRTOK
    #     Requires: CYGVAR_KERNEL_THREADS_DATA
    # option CYGSEM_LIBC_STRING_PER_THREAD_STRTOK
    #     DefaultValue: CYGVAR_KERNEL_THREADS_DATA
    # option CYGSEM_LIBC_I18N_PER_THREAD_MB
    #     Requires: CYGVAR_KERNEL_THREADS_DATA
    # option CYGSEM_LIBC_I18N_PER_THREAD_MB
    #     DefaultValue:  CYGVAR_KERNEL_THREADS_DATA != 0 
    # option CYGSEM_LIBC_PER_THREAD_RAND
    #     Requires: CYGVAR_KERNEL_THREADS_DATA
    # option CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE
    #     Requires: CYGVAR_KERNEL_THREADS_DATA
    # option CYGSEM_LIBM_THREAD_SAFE_GAMMA_FUNCTIONS
    #     Requires: CYGVAR_KERNEL_THREADS_DATA
};

# >
# Number of words of per-thread data
# It is possible for the kernel to support per-thread data, in
# other words an area of memory specific to each thread which
# can be used to store data for that thread. This per-thread
# data can be used by applications or by other packages such as
# the ISO C library. This configuration option controls the
# number of words of per-thread data that the kernel will
# allow. In the current implementation a bitmask is used to identify
# used per-thread data slots and so the maximum legal value must
# remain 32.
#
cdl_option CYGNUM_KERNEL_THREADS_DATA_MAX {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 6
    # value_source default
    # Default value: 6
    # Legal values: 4 to 32
};

# Bitmap of preallocated slots of thread data
# Per thread data options. Per thread data support is based loosely
# on that defined by POSIX. Each thread has an array of slots, up to
# CYGNUM_KERNEL_THREADS_DATA_MAX, that may contain data. Some of the
# slots have been preallocated to specific packages. Others may be
# allocated dynamically.
#
cdl_component CYGNUM_KERNEL_THREADS_DATA_ALL {
    # Calculated value: 15
    # Flavor: data
    # Current_value: 15
};

# >
# Slot 0 preallocated for the kernel
# This option defines the index of a per-thread data
# slot which is reserved by
# the eCos kernel
# for private use.
#
cdl_option CYGNUM_KERNEL_THREADS_DATA_KERNEL {
    # Calculated value: 0
    # Flavor: data
    # Current_value: 0
};

# Slot 1 preallocated for uITRON
# This option defines the index of a per-thread data
# slot which is reserved by
# the uITRON compatibility layer
# for private use.
#
cdl_option CYGNUM_KERNEL_THREADS_DATA_ITRON {
    # Calculated value: 1
    # Flavor: data
    # Current_value: 1
};

# Slot 2 preallocated for errno
# This option defines the index of a per-thread data
# slot which is reserved for use by an errno variable.
#
cdl_option CYGNUM_KERNEL_THREADS_DATA_ERRNO {
    # Calculated value: 2
    # Flavor: data
    # Current_value: 2
};

# Slot 3 preallocated for POSIX
# This option defines the index of a per-thread data
# slot which is reserved by
# POSIX
# for private use.
#
cdl_option CYGNUM_KERNEL_THREADS_DATA_POSIX {
    # Calculated value: 3
    # Flavor: data
    # Current_value: 3
};

# <
# <
# Thread destructors
# doc: ref/kernel-thread-destructors.html
# This option enables support for registered destructor functions to
# be called on thread exit.
#
cdl_component CYGPKG_KERNEL_THREADS_DESTRUCTORS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# >
# Number of possible destructors
# This option gives the number of possible destructors allowed.
# Increasing this will increase the size of every
# thread control structure if per-thread destructors are
# enabled.
#
cdl_option CYGNUM_KERNEL_THREADS_DESTRUCTORS {
    # This option is not active
    # The parent CYGPKG_KERNEL_THREADS_DESTRUCTORS is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 8
    # value_source default
    # Default value: 8
    # Legal values: 1 to 65535
};

# Per-thread destructors
# Enabling this option makes the thread destructors a per-thread
# property, with each thread having its own list of destructors.
# Disabling this option makes the thread destructor list
# global so all threads have the same destructors.
#
cdl_option CYGSEM_KERNEL_THREADS_DESTRUCTORS_PER_THREAD {
    # This option is not active
    # The parent CYGPKG_KERNEL_THREADS_DESTRUCTORS is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Stack size for the idle thread
# This configuration option specifies the stack size in bytes
# for the idle thread. Unless the HAL is configured to use a
# separate interrupt stack this size must be sufficient to meet
# the requirements of all interrupt handlers - these
# requirements are cumulative if nested interrupted are
# enabled. Depending on the target architecture, the stack size
# typically has to be a multiple of eight or sixteen bytes.
# This will be overridden where it is used if the
# architectural HAL requires a minimum stack size
# to handle interrupts correctly.
#
cdl_option CYGNUM_KERNEL_THREADS_IDLE_STACK_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 2048
    # value_source default
    # Default value: 2048
    # Legal values: 512 to 65536
};

# Maximal suspend count
# This option provides for an assertion that the count value for
# counted thread suspends do not exceed set limits.  This is to help
# with debugging, to allow a runaway loop, for example, to be
# detected more easily.
# If the option is not defined, no assert is included.  Whether asserts
# are themselves included depends on infrastructure configury in
# infra.h
#
cdl_option CYGNUM_KERNEL_MAX_SUSPEND_COUNT_ASSERT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 500
    # value_source default
    # Default value: 500
};

# Maximal wake count
# This option provides for an assertion that the count value for
# counted thread wakeups do not exceed set limits.  This is to
# help with debugging, to allow a runaaway loop, for example, to
# be detected more easily.
# If the option is not defined, no assert is included.  Whether asserts
# are themselves included depends on infrastructure configury in
# infra.h
#
cdl_option CYGNUM_KERNEL_MAX_COUNTED_WAKE_COUNT_ASSERT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 500
    # value_source default
    # Default value: 500
};

# Idle thread must always yield
# If the scheduler configuration only has a single priority
# level, then the idle thread must yield each time around its loop.
#
cdl_option CYGIMP_IDLE_THREAD_YIELD {
    # This option is not active
    # ActiveIf constraint: (CYGNUM_KERNEL_SCHED_PRIORITIES == 1)
    #     CYGNUM_KERNEL_SCHED_PRIORITIES == 32
    #   --> 0

    # Calculated value: 1
    # Flavor: bool
    # Current value: 1
};

# <
# Synchronization primitives
# The eCos kernel supports a number of different
# synchronization primitives such as mutexes, semaphores,
# condition variables, and message boxes. There are
# configuration options to control the exact behaviour of some
# of these synchronization primitives.
#
cdl_component CYGPKG_KERNEL_SYNCH {
    # There is no associated value.

    # The following properties are affected by this value
    # option CYGDBG_KERNEL_INSTRUMENT_MUTEX
    #     ActiveIf: CYGPKG_KERNEL_SYNCH
    # option CYGDBG_KERNEL_INSTRUMENT_CONDVAR
    #     ActiveIf: CYGPKG_KERNEL_SYNCH
    # option CYGDBG_KERNEL_INSTRUMENT_BINSEM
    #     ActiveIf: CYGPKG_KERNEL_SYNCH
    # option CYGDBG_KERNEL_INSTRUMENT_CNTSEM
    #     ActiveIf: CYGPKG_KERNEL_SYNCH
    # option CYGDBG_KERNEL_INSTRUMENT_MBOXT
    #     ActiveIf: CYGPKG_KERNEL_SYNCH
    # option CYGDBG_KERNEL_INSTRUMENT_FLAG
    #     ActiveIf: CYGPKG_KERNEL_SYNCH
};

# >
# Priority inversion protection protocols
# doc: ref/kernel-mutexes.html
# This component controls the protocols used to protect mutexes against
# priority inversion. If this option is enabled it defines which
# algorithm is used to implement this protection. At present only
# one such algorithm is defined: "SIMPLE". The implementation
# will only work in the mlqueue scheduler, and it does not handle the
# rare case of nested mutexes completely correctly. However it is
# both fast and deterministic.
#
cdl_component CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL {
    # ActiveIf constraint:  CYGSEM_KERNEL_SCHED_MLQUEUE 
    #     CYGSEM_KERNEL_SCHED_MLQUEUE == 1
    #   --> 1

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 SIMPLE
    # value_source default
    # Default value: 1 SIMPLE
    # Legal values:  "SIMPLE" 
    # Requires:  CYGINT_KERNEL_SCHEDULER_UNIQUE_PRIORITIES == 0 
    #     CYGINT_KERNEL_SCHEDULER_UNIQUE_PRIORITIES == 0
    #   --> 1
};

# >
# Enable priority inheritance protocol
# This option enables priority inheritance protocol. This protocol
# causes the owner of a mutex to be executed at the highest priority
# of the threads waiting for access to the mutex.
#
cdl_option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT
    #     DefaultValue:  CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT ?
    #                             "INHERIT" :
    #                             CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING ?
    #                             "CEILING" : "NONE" 
};

# Enable priority ceiling protocol
# This option enables priority ceiling protocol. This protocol
# causes the owner of a mutex to be executed at a  priority
# associated with the mutex.
#
cdl_component CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT_PRIORITY
    #     ActiveIf: CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING
    # option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT
    #     DefaultValue:  CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT ?
    #                             "INHERIT" :
    #                             CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING ?
    #                             "CEILING" : "NONE" 
};

# >
# Default priority ceiling
# This option defines the default priority ceiling to be
# used if the chosen default priority inversion protocol is
# priority ceoptioniling protocol. The default value for this is zero,
# making all such mutexes boost threads to the maximum priority.
#
cdl_option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT_PRIORITY {
    # ActiveIf constraint: CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING
    #     CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING == 1
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to  CYGNUM_KERNEL_SCHED_PRIORITIES - 1 
    #     CYGNUM_KERNEL_SCHED_PRIORITIES == 32
};

# <
# No priority inversion protocol
# This option enables the ability to have no priority inversion protocol.
# It is equivalent to disabling the priority inversion protocol at
# the top level, but is necessary for the runtime and default
# selection options.
#
cdl_option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_NONE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Default priority inversion protocol
# This option defines the default inversion protocol used for mutexes that
# are created without an explicit protocol being specified. The protocol
# chosen by default is to use priority inheritance if it is present otherwise
# priority ceiling, or none if neither is present.
#
cdl_option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT {
    # ActiveIf constraint:  CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT > 1 
    #     CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT == 3
    #   --> 1

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value INHERIT
    # value_source default
    # Default value:  CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT ?
    #                             "INHERIT" :
    #                             CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING ?
    #                             "CEILING" : "NONE" 
    #     CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT == 1
    #     CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING == 1
    #   --> INHERIT
    # Legal values:  "INHERIT" "CEILING" "NONE" 
};

# Specify mutex priority inversion protocol at runtime
# This option controls whether the priority inversion protocol used by
# a mutex can be specified when that mutex is created.
#
cdl_option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DYNAMIC {
    # ActiveIf constraint:  CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT > 1 
    #     CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT == 3
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Number of protocols selected
#
cdl_interface CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT {
    # Implemented by CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_INHERIT, active, enabled
    # Implemented by CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_CEILING, active, enabled
    # Implemented by CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_NONE, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 3

    # The following properties are affected by this value
    # option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DEFAULT
    #     ActiveIf:  CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT > 1 
    # option CYGSEM_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_DYNAMIC
    #     ActiveIf:  CYGINT_KERNEL_SYNCH_MUTEX_PRIORITY_INVERSION_PROTOCOL_COUNT > 1 
};

# <
# Use mboxt_plain mbox implementation
# Use the plain mboxt implementation instead of the mboxt2
# implementation. The mboxt2 version is designed to provide
# semantics compatible with UITRON, the plain implementation
# is adquate in most other situations.
#
cdl_option CYGIMP_MBOX_USE_MBOXT_PLAIN {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Message box blocking put support
# doc: ref/kernel-mail-boxes.html
# Message boxes can support three different versions of the
# put-message operation. The first is tryput(), which will fail
# if the message box is already full. The other two are the
# ordinary put() function which will block if the message box
# is full, and a timed put() operation which will block for
# upto a certain length of time if the message box is currently
# full. The blocking versions require extra memory in the
# message box data structure and extra code in the other
# message box functions, so they can be disabled if the
# application does not require them. If this option is enabled
# then the system will always provide the blocking put()
# function, and it will also provide the timed put() function
# if thread timers are enabled.
#
cdl_option CYGMFN_KERNEL_SYNCH_MBOXT_PUT_CAN_WAIT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Message box queue size
# doc: ref/kernel-mail-boxes.html
# This configuration option controls the number of messages
# that can be queued in a message box before a non-blocking
# put() operation will fail or a blocking put() operation will
# block. The cost in memory is one pointer per message box for
# each possible message.
#
cdl_option CYGNUM_KERNEL_SYNCH_MBOX_QUEUE_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 10
    # value_source default
    # Default value: 10
    # Legal values: 1 to 65535
};

# Condition variable timed-wait support
# doc: ref/kernel-condition-variables.html
# This option enables the condition variable timed wait
# facility.
#
cdl_option CYGMFN_KERNEL_SYNCH_CONDVAR_TIMED_WAIT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGFUN_KERNEL_THREADS_TIMER
    #     CYGFUN_KERNEL_THREADS_TIMER == 1
    #   --> 1
};

# Condition variable explicit mutex wait support
# doc: ref/kernel-condition-variables.html
# This option enables the condition variable explicit mutex wait
# facility. By default condition variables in eCos are created with
# a statically associated mutex. This option permits wait (and timed wait
# if CYGMFN_KERNEL_SYNCH_CONDVAR_TIMED_WAIT is enabled) to provide a
# different mutex as an argument. This makes no difference to the semantics
# the wait operation except that a different mutex will be used during it.
#
cdl_option CYGMFN_KERNEL_SYNCH_CONDVAR_WAIT_MUTEX {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Avoid inlines in mqueue implementation
# With this option disabled, the 'mqueue' message queue implementation
# provides most of its implementation via inlines. However this can
# adversely affect code size in application that make lots of mqueue
# calls from different places, so enabling this option provides
# non-inline versions to be used instead.
#
cdl_option CYGIMP_KERNEL_SYNCH_MQUEUE_NOT_INLINE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# Kernel instrumentation
# doc: user-guide/kernel-instrumentation.html
# The current release of the kernel contains an initial version
# of instrumentation support. The various parts of the kernel
# will invoke instrumentation routines whenever appropriate
# events occur, and these will be stored in a circular buffer
# for later reference.
#
cdl_component CYGPKG_KERNEL_INSTRUMENT {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0

    # The following properties are affected by this value
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
};

# >
# Use buffer provided by the application
# In most circumstances the kernel should provide the
# instrumentation circular buffer itself. Occasionally
# application code may wish to provide the buffer instead,
# giving the application code more convenient access to the
# buffer. This also makes it possible to put the circular
# buffer in special areas of memory, for example a region that
# is shared with the host.
#
cdl_option CYGVAR_KERNEL_INSTRUMENT_EXTERNAL_BUFFER {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Instrumentation buffer size
# If kernel instrumentation is enabled then the instrumentation
# data goes into a circular buffer. A larger buffer allows
# more data to be stored, but at a significant cost in memory.
# The value of this option corresponds to the number of entries
# in the table, and typically each entry will require 16 bytes
# of memory.
#
cdl_option CYGNUM_KERNEL_INSTRUMENT_BUFFER_SIZE {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 256
    # value_source default
    # Default value: 256
    # Legal values: 16 to 0x100000
};

# Wrap instrumentation buffer
# When the instrumentation buffer is full it can either be restarted
# from the beginning, overwriting older data, or it can stop at the
# end. The former is useful if you want to look at the last entries
# made while the latter is useful if you want to look at the first
# few.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_BUFFER_WRAP {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Perform selective instrumentation
# The kernel can either collect all instrumentation events, or
# it can filter out events at runtime based on a set of flags.
# For example it would be possible to decide at runtime that
# only scheduler and interrupt instrumentation flags are of
# interest and that all other flags should be ignored. This
# flag mechanism involves extra code and processor cycle
# overhead in the instrumentation code, so it can be disabled
# if the application developer is interested in all
# instrumentation events.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_FLAGS {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument common scheduler operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the scheduling code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_SCHED {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_SCHED
    #     CYGPKG_KERNEL_SCHED == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument thread operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the code that manipulates threads.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_THREAD {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_THREADS
    #     CYGPKG_KERNEL_THREADS == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument interrupt-related operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the interrupt handling code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_INTR {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_INTERRUPTS
    #     CYGPKG_KERNEL_INTERRUPTS == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument mutex operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the mutex code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_MUTEX {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_SYNCH
    #     CYGPKG_KERNEL_SYNCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument condition variable operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the condition variable code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_CONDVAR {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_SYNCH
    #     CYGPKG_KERNEL_SYNCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument binary semaphore operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the binary semaphore code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_BINSEM {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_SYNCH
    #     CYGPKG_KERNEL_SYNCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument counting semaphore operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the counting semaphore code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_CNTSEM {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_SYNCH
    #     CYGPKG_KERNEL_SYNCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument message box operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the message box code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_MBOXT {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_SYNCH
    #     CYGPKG_KERNEL_SYNCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument event flag operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the event flag code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_FLAG {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGPKG_KERNEL_SYNCH
    #     CYGPKG_KERNEL_SYNCH == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument clock operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the real-time clock code.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_CLOCK {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGVAR_KERNEL_COUNTERS_CLOCK
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument alarm-related operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the code related to alarm operations.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_ALARM {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGVAR_KERNEL_COUNTERS_CLOCK
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument SMP-related operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the code related to SMP operations.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_SMP {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGVAR_KERNEL_COUNTERS_CLOCK
    #     CYGVAR_KERNEL_COUNTERS_CLOCK == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument multi-level queue scheduler operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the code for the multi-level queue scheduler.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_MLQ {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGSEM_KERNEL_SCHED_MLQUEUE
    #     CYGSEM_KERNEL_SCHED_MLQUEUE == 1
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Instrument bitmap scheduler operations
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not instrumentation support is compiled into
# the code for the bitmap scheduler.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_BITMAP {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled
    # ActiveIf constraint: CYGSEM_KERNEL_SCHED_BITMAP
    #     CYGSEM_KERNEL_SCHED_BITMAP == 0
    #   --> 0

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Support application-level instrumentation
# It is possible to perform selective instrumentation at
# run-time. It is also possible to disable instrumentation
# in various kernel components at compile-time, thus
# reducing the code size overheads. This option controls
# whether or not application-level instrumentation gets
# compiled in.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_USER {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Provide user-friendly instrumentation messages
# Include code which will convert the instrument type field 
# into a more human understandable string
#
cdl_component CYGDBG_KERNEL_INSTRUMENT_MSGS {
    # This option is not active
    # The parent CYGPKG_KERNEL_INSTRUMENT is disabled

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Rebuild the header file
# Make (using a shell script) include/cyg/kernel/instrument_desc.h in
# your build tree; this is normally simply copied from the repository.
# If you make a permanent change to include/instrmnt.h, such that
# instrument_desc.h needs updating, it's up to you to first delete the
# master file
# ECOS_REPOSITORY/kernel/VERSION/include/instrument_desc.h
# in your source repository, make the new version by enabling this
# option then copy the new file
# back from your build place to its source in
# ECOS_REPOSITORY/kernel/VERSION/include/instrument_desc.h
# and/or commit this to any version control system that you use.
#
cdl_option CYGDBG_KERNEL_INSTRUMENT_MSGS_BUILD_HEADERFILE {
    # This option is not active
    # The parent CYGDBG_KERNEL_INSTRUMENT_MSGS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Build the host tool to print out a dump
# Generate a host program which can dump the instrumentation
# data in a human readable format. You have to somehow get the
# instrumentation buffer into a file on the host. 'Exercise for
# the reader' as university lecturers tend to say.
#
cdl_component CYGDBG_KERNEL_INSTRUMENT_BUILD_HOST_DUMP {
    # This option is not active
    # The parent CYGDBG_KERNEL_INSTRUMENT_MSGS is not active

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# <
# <
# Source-level debugging support
# If the source level debugger gdb is to be used for debugging
# application code then it may be necessary to configure in support
# for this in the kernel.
#
cdl_component CYGPKG_KERNEL_DEBUG {
    # There is no associated value.
};

# >
# Include GDB multi-threading debug support
# This option enables some extra kernel code which is needed
# to support multi-threaded source level debugging.
#
cdl_option CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
    # Requires: CYGVAR_KERNEL_THREADS_LIST
    #     CYGVAR_KERNEL_THREADS_LIST == 0
    #   --> 0
    # Requires: CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGDBG_HAL_DEBUG_GDB_THREAD_SUPPORT
    #     ActiveIf:  CYGSEM_HAL_ROM_MONITOR || CYGDBG_KERNEL_DEBUG_GDB_THREAD_SUPPORT 
};

# <
# Kernel APIs
# The eCos kernel is implemented in C++, so a C++ interface
# to the kernel is always available. There is also an optional
# C API. Additional API's may be provided in future versions.
#
cdl_component CYGPKG_KERNEL_API {
    # There is no associated value.
};

# >
# Provide C API
# The eCos kernel is implemented in C++, but there is an
# optional C API for use by application code. This C API can be
# disabled if the application code does not invoke the kernel
# directly, but instead uses higher level code such as the
# uITRON compatibility layer.
#
cdl_option CYGFUN_KERNEL_API_C {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
    # option CYGPKG_KERNEL_TESTS
    #     Calculated:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
    # option CYGFUN_MEMALLOC_KAPI
    #     DefaultValue: CYGFUN_KERNEL_API_C
};

# <
# Kernel build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_KERNEL_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the eCos kernel. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_KERNEL_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the eCos kernel. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_KERNEL_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Kernel tests
# This option specifies the set of tests for the eCos kernel.
#
cdl_option CYGPKG_KERNEL_TESTS {
    # Calculated value:  
    #                     "tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2" 
    #                     . ((CYGFUN_KERNEL_API_C) ? " tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0" : "")
    #                     . ((!CYGPKG_INFRA_DEBUG && !CYGPKG_KERNEL_INSTRUMENT && CYGFUN_KERNEL_API_C) ? " tests/dhrystone" : "")
    #                     . ((CYGPKG_KERNEL_SMP_SUPPORT && CYGFUN_KERNEL_API_C) ? " tests/smp" : "")
    #                     . ((!CYGINT_HAL_TESTS_NO_CACHES && CYGFUN_KERNEL_API_C) ? " tests/kcache1 tests/kcache2" : "")
    #                 
    #     CYGFUN_KERNEL_API_C == 1
    #     CYGPKG_INFRA_DEBUG == 0
    #     CYGPKG_KERNEL_INSTRUMENT == 0
    #     CYGFUN_KERNEL_API_C == 1
    #     CYGPKG_KERNEL_SMP_SUPPORT == 0
    #     CYGFUN_KERNEL_API_C == 1
    #     CYGINT_HAL_TESTS_NO_CACHES == 0
    #     CYGFUN_KERNEL_API_C == 1
    # Flavor: data
    # Current_value: tests/bin_sem0 tests/bin_sem1 tests/bin_sem2 tests/bin_sem3 tests/clock0 tests/clock1 tests/clockcnv tests/clocktruth tests/cnt_sem0 tests/cnt_sem1 tests/except1 tests/flag0 tests/flag1 tests/intr0 tests/kill tests/mbox1 tests/mqueue1 tests/mutex0 tests/mutex1 tests/mutex2 tests/mutex3 tests/release tests/sched1 tests/sync2 tests/sync3 tests/thread0 tests/thread1 tests/thread2 tests/kclock0 tests/kclock1 tests/kexcept1 tests/kflag0 tests/kflag1 tests/kintr0 tests/klock tests/kmbox1 tests/kmutex0 tests/kmutex1 tests/kmutex3 tests/kmutex4 tests/ksched1 tests/ksem0 tests/ksem1 tests/kthread0 tests/kthread1 tests/stress_threads tests/thread_gdb tests/timeslice tests/timeslice2 tests/tm_basic tests/fptest tests/kalarm0 tests/dhrystone tests/kcache1 tests/kcache2
};

# <
# <
# Common error code support
# This package contains the common list of error and
# status codes. It is held centrally to allow
# packages to interchange error codes and status
# codes in a common way, rather than each package
# having its own conventions for error/status
# reporting. The error codes are modelled on the
# POSIX style naming e.g. EINVAL etc. This package
# also provides the standard strerror() function to
# convert error codes to textual representation, as
# well as an implementation of the errno idiom.
#
cdl_package CYGPKG_ERROR {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires:  CYGBLD_ISO_ERRNO_CODES_HEADER == "<cyg/error/codes.h>" 
    #     CYGBLD_ISO_ERRNO_CODES_HEADER == <cyg/error/codes.h>
    #   --> 1

    # The following properties are affected by this value
    # package CYGPKG_IO_SERIAL_FREESCALE_UART
    #     Requires: CYGPKG_ERROR
    # package CYGPKG_IO_SERIAL
    #     Requires: CYGPKG_ERROR
};

# >
# errno variable
# This package controls the behaviour of the
# errno variable (or more strictly, expression)
# from <errno.h>.
#
cdl_component CYGPKG_ERROR_ERRNO {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  CYGBLD_ISO_ERRNO_HEADER == "<cyg/error/errno.h>" 
    #     CYGBLD_ISO_ERRNO_HEADER == <cyg/error/errno.h>
    #   --> 1
};

# >
# Per-thread errno
# This option controls whether the standard error
# code reporting variable errno is a per-thread
# variable, rather than global.
#
cdl_option CYGSEM_ERROR_PER_THREAD_ERRNO {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1
};

# Tracing level
# Trace verbosity level for debugging the errno
# retrieval mechanism in errno.cxx. Increase this
# value to get additional trace output.
#
cdl_option CYGNUM_ERROR_ERRNO_TRACE_LEVEL {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
};

# <
# strerror function
# This package controls the presence and behaviour of the
# strerror() function from <string.h>
#
cdl_option CYGPKG_ERROR_STRERROR {
    # Flavor: bool
    user_value 0
    # value_source user
    # Default value: 1
    # Requires:  CYGBLD_ISO_STRERROR_HEADER == "<cyg/error/strerror.h>" 
    #     CYGBLD_ISO_STRERROR_HEADER == <cyg/error/strerror.h>
    #   --> 1
};

# Error package build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_ERROR_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the error package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_ERROR_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the error package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_ERROR_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# Dynamic memory allocation
# doc: ref/memalloc.html
# This package provides memory allocator infrastructure required for
# dynamic memory allocators, including the ISO standard malloc
# interface. It also contains some sample implementations.
#
cdl_package CYGPKG_MEMALLOC {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
};

# >
# Memory allocator implementations
# This component contains configuration options related to the 
# various memory allocators available.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATORS {
    # There is no associated value.
};

# >
# Fixed block allocator
# This component contains configuration options related to the 
# fixed block memory allocator.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_FIXED {
    # There is no associated value.
};

# >
# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_FIXED_THREADAWARE {
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# Simple variable block allocator
# This component contains configuration options related to the 
# simple variable block memory allocator. This allocator is not
# very fast, and in particular does not scale well with large
# numbers of allocations. It is however very compact in terms of
# code size and does not have very much overhead per allocation.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_VARIABLE {
    # There is no associated value.
};

# >
# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are added that allow a thread to wait until memory
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_THREADAWARE {
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Coalesce memory
# The variable-block memory allocator can perform coalescing
# of memory whenever the application code releases memory back
# to the pool. This coalescing reduces the possibility of
# memory fragmentation problems, but involves extra code and
# processor cycles.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1

    # The following properties are affected by this value
    # option CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE
    #     Requires: CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE
};

# <
# Doug Lea's malloc
# This component contains configuration options related to the 
# port of Doug Lea's memory allocator, normally known as
# dlmalloc. dlmalloc has a reputation for being both fast
# and space-conserving, as well as resisting fragmentation well.
# It is a common choice for a general purpose allocator and
# has been used in both newlib and Linux glibc.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_DLMALLOC {
    # There is no associated value.
};

# >
# Debug build
# Doug Lea's malloc implementation has substantial amounts
# of internal checking in order to verify the operation
# and consistency of the allocator. However this imposes
# substantial overhead on each operation. Therefore this
# checking may be individually disabled.
#
cdl_option CYGDBG_MEMALLOC_ALLOCATOR_DLMALLOC_DEBUG {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value:  0 != CYGDBG_USE_ASSERTS 
    #     CYGDBG_USE_ASSERTS == 0
    #   --> 0
    # Requires: CYGDBG_USE_ASSERTS
    #     CYGDBG_USE_ASSERTS == 0
    #   --> 0
};

# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_THREADAWARE {
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1
};

# Support more than one instance
# Having this option disabled allows important
# implementation structures to be declared as a single
# static instance, allowing faster access. However this
# would fail if there is more than one instance of
# the dlmalloc allocator class. Therefore this option can
# be enabled if multiple instances are required. Note: as
# a special case, if this allocator is used as the
# implementation of malloc, and it can be determined there
# is more than one malloc pool, then this option will be
# silently enabled.
#
cdl_option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_SAFE_MULTIPLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Use system memmove() and memset()
# This may be used to control whether memset() and memmove()
# are used within the implementation. The alternative is
# to use some macro equivalents, which have been reported
# to be faster in some circumstances. The use of "MEMCPY"
# in the CDL option name is an anachronism and only
# present for backwards compatibility.
#
cdl_option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value:  (0 != CYGPKG_ISOINFRA) && (0 != CYGINT_ISO_STRING_MEMFUNCS) 
    #     CYGPKG_ISOINFRA == current
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1
    # Requires: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1
    # Requires: CYGINT_ISO_STRING_MEMFUNCS
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1
};

# Minimum alignment of allocated blocks
# This option controls the minimum alignment that the
# allocated memory blocks are aligned on, specified as
# 2^N. Note that using large mininum alignments can lead
# to excessive memory wastage.
#
cdl_option CYGNUM_MEMALLOC_ALLOCATOR_DLMALLOC_ALIGNMENT {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 3
    # value_source default
    # Default value: 3
    # Legal values: 3 to 10
};

# <
# Variable block allocator with separate metadata
# This component contains configuration options related to the 
# variable block memory allocator with separate metadata.
#
cdl_component CYGPKG_MEMALLOC_ALLOCATOR_SEPMETA {
    # There is no associated value.
};

# >
# Make thread safe
# With this option enabled, this allocator will be
# made thread-safe. Additionally allocation functions
# are made available that allow a thread to wait
# until memory is available.
#
cdl_option CYGSEM_MEMALLOC_ALLOCATOR_SEPMETA_THREADAWARE {
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# <
# <
# Kernel C API support for memory allocation
# This option must be enabled to provide the extensions required
# to support integration into the kernel C API.
#
cdl_option CYGFUN_MEMALLOC_KAPI {
    # ActiveIf constraint: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: CYGFUN_KERNEL_API_C
    #     CYGFUN_KERNEL_API_C == 1
    #   --> 1
};

# malloc(0) returns NULL
# This option controls the behavior of malloc(0) ( or calloc with
# either argument 0 ). It is permitted by the standard to return
# either a NULL pointer or a unique pointer. Enabling this option
# forces a NULL pointer to be returned.
#
cdl_option CYGSEM_MEMALLOC_MALLOC_ZERO_RETURNS_NULL {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Breakpoint site when running out of memory
# Whenever the system runs out of memory, it invokes this function
# before either going to sleep waiting for memory to become 
# available or returning failure.
#
cdl_option CYGSEM_MEMALLOC_INVOKE_OUT_OF_MEMORY {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# malloc() and supporting allocators
# This component enables support for dynamic memory
# allocation as supplied by the functions malloc(),
# free(), calloc() and realloc(). As these
# functions are often used, but can have quite an
# overhead, disabling them here can ensure they
# cannot even be used accidentally when static
# allocation is preferred. Within this component are
# various allocators that can be selected for use
# as the underlying implementation of the dynamic
# allocation functions.
#
cdl_component CYGPKG_MEMALLOC_MALLOC_ALLOCATORS {
    # ActiveIf constraint: CYGPKG_ISOINFRA
    #     CYGPKG_ISOINFRA == current
    #   --> 1

    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# >
# Use external heap definition
# This option allows other components in the
# system to override the default system
# provision of heap memory pools. This should
# be set to a header which provides the equivalent
# definitions to <pkgconf/heaps.hxx>.
#
cdl_component CYGBLD_MEMALLOC_MALLOC_EXTERNAL_HEAP_H {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Use external implementation of joining multiple heaps
# The default implementation of joining multiple heaps
# is fine for the case where there are multiple disjoint
# memory regions of the same type. However, in a system
# there might be e.g. a small amount of internal SRAM and
# a large amount of external DRAM. The SRAM is faster and
# the DRAM is slower. An application can implement some 
# heuristic to choose which pool to allocate from. This
# heuristic can be highly application specific.
#
cdl_component CYGBLD_MEMALLOC_MALLOC_EXTERNAL_JOIN_H {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# malloc() allocator implementations
#
cdl_interface CYGINT_MEMALLOC_MALLOC_ALLOCATORS {
    # Implemented by CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE, active, disabled
    # Implemented by CYGIMP_MEMALLOC_MALLOC_DLMALLOC, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  CYGINT_MEMALLOC_MALLOC_ALLOCATORS == 1 
    #     CYGINT_MEMALLOC_MALLOC_ALLOCATORS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_MEMALLOC_MALLOC_ALLOCATORS
    #     Requires:  CYGINT_MEMALLOC_MALLOC_ALLOCATORS == 1 
};

# malloc() implementation instantiation data
# Memory allocator implementations that are capable of being
# used underneath malloc() must be instantiated. The code
# to do this is set in this option. It is only intended to
# be set by the implementation, not the user.
#
cdl_option CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value <cyg/memalloc/dlmalloc.hxx>
    # value_source default
    # Default value: <cyg/memalloc/dlmalloc.hxx>

    # The following properties are affected by this value
    # option CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE
    #     Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/memvar.hxx>" 
    # option CYGIMP_MEMALLOC_MALLOC_DLMALLOC
    #     Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/dlmalloc.hxx>" 
};

# Simple variable block implementation
# This causes malloc() to use the simple
# variable block allocator.
#
cdl_option CYGIMP_MEMALLOC_MALLOC_VARIABLE_SIMPLE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/memvar.hxx>" 
    #     CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER == <cyg/memalloc/dlmalloc.hxx>
    #   --> 0
    # Requires: CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE
    #     CYGSEM_MEMALLOC_ALLOCATOR_VARIABLE_COALESCE == 1
    #   --> 1
};

# Doug Lea's malloc implementation
# This causes malloc() to use a version of Doug Lea's
# malloc (dlmalloc) as the underlying implementation.
#
cdl_option CYGIMP_MEMALLOC_MALLOC_DLMALLOC {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
    # Requires:  CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER ==  "<cyg/memalloc/dlmalloc.hxx>" 
    #     CYGBLD_MEMALLOC_MALLOC_IMPLEMENTATION_HEADER == <cyg/memalloc/dlmalloc.hxx>
    #   --> 1
};

# <
# Size of the fallback dynamic memory pool in bytes
# If *no* heaps are configured in your memory layout,
# dynamic memory allocation by
# malloc() and calloc() must be from a fixed-size,
# contiguous memory pool (note here that it is the
# pool that is of a fixed size, but malloc() is still
# able to allocate variable sized chunks of memory
# from it). This option is the size
# of that pool, in bytes. Note that not all of
# this is available for programs to
# use - some is needed for internal information
# about memory regions, and some may be lost to
# ensure that memory allocation only returns
# memory aligned on word (or double word)
# boundaries - a very common architecture
# constraint.
#
cdl_option CYGNUM_MEMALLOC_FALLBACK_MALLOC_POOL_SIZE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 16384
    # value_source default
    # Default value: 16384
    # Legal values: 32 to 0x7fffffff
};

# Common memory allocator package build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_MEMALLOC_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_MEMALLOC_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building this package. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_MEMALLOC_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Tests
# This option specifies the set of tests for this package.
#
cdl_option CYGPKG_MEMALLOC_TESTS {
    # Calculated value:  "tests/dlmalloc1 tests/dlmalloc2 tests/heaptest tests/kmemfix1 tests/kmemvar1 tests/malloc1 tests/malloc2 tests/malloc3 tests/malloc4 tests/memfix1 tests/memfix2 tests/memvar1 tests/memvar2 tests/realloc tests/sepmeta1 tests/sepmeta2" 
    # Flavor: data
    # Current_value: tests/dlmalloc1 tests/dlmalloc2 tests/heaptest tests/kmemfix1 tests/kmemvar1 tests/malloc1 tests/malloc2 tests/malloc3 tests/malloc4 tests/memfix1 tests/memfix2 tests/memvar1 tests/memvar2 tests/realloc tests/sepmeta1 tests/sepmeta2
};

# <
# <
# ISO C and POSIX infrastructure
# eCos supports implementations of ISO C libraries and POSIX
# implementations. This package provides infrastructure used by
# all such implementations.
#
cdl_package CYGPKG_ISOINFRA {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # component CYGPKG_IO_SERIAL_TERMIOS
    #     Requires: CYGPKG_ISOINFRA
    # component CYGPKG_IO_SERIAL_TERMIOS
    #     DefaultValue:  0 != CYGPKG_ISOINFRA && 0 != CYGPKG_IO_FILEIO &&  0 != CYGINT_ISO_ERRNO_CODES &&  0 != CYGINT_ISO_ERRNO 
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY
    #     Requires: CYGPKG_ISOINFRA
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY
    #     DefaultValue:  (0 != CYGPKG_ISOINFRA) && (0 != CYGINT_ISO_STRING_MEMFUNCS) 
    # component CYGPKG_MEMALLOC_MALLOC_ALLOCATORS
    #     ActiveIf: CYGPKG_ISOINFRA
    # package CYGPKG_LIBC_STRING
    #     Requires: CYGPKG_ISOINFRA
    # package CYGPKG_LIBC_I18N
    #     Requires: CYGPKG_ISOINFRA
    # package CYGPKG_LIBC_STDLIB
    #     Requires: CYGPKG_ISOINFRA
};

# >
# Startup and termination
#
cdl_component CYGPKG_ISO_STARTUP {
    # There is no associated value.
};

# >
# main() startup implementations
# Implementations of this interface arrange for a user-supplied
# main() to be called in an ISO compatible environment.
#
cdl_interface CYGINT_ISO_MAIN_STARTUP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
    #     CYGINT_ISO_MAIN_STARTUP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MAIN_STARTUP
    #     Requires:  1 >= CYGINT_ISO_MAIN_STARTUP 
};

# environ implementations
# Implementations of this interface provide the environ
# variable required by POSIX.
#
cdl_interface CYGINT_ISO_ENVIRON {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_ENVIRON 
    #     CYGINT_ISO_ENVIRON == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_ENVIRON 
};

# <
# ctype.h functions
#
cdl_component CYGPKG_ISO_CTYPE_H {
    # There is no associated value.
};

# >
# Number of implementations of ctype functions
#
cdl_interface CYGINT_ISO_CTYPE {
    # Implemented by CYGPKG_LIBC_I18N, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_CTYPE 
    #     CYGINT_ISO_CTYPE == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_CTYPE
    #     Requires:  1 >= CYGINT_ISO_CTYPE 
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires: CYGINT_ISO_CTYPE
    # package CYGPKG_LIBC_STDLIB
    #     Requires: CYGINT_ISO_CTYPE
};

# Ctype implementation header
#
cdl_option CYGBLD_ISO_CTYPE_HEADER {
    # Flavor: booldata
    user_value 0 <cyg/libc/i18n/ctype.inl>
    # value_source user
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGPKG_LIBC_I18N_NEWLIB_CTYPE
    #     Requires:  CYGBLD_ISO_CTYPE_HEADER ==  "<cyg/libc/i18n/newlibctype.h>" 
    # option CYGIMP_LIBC_I18N_CTYPE_INLINES
    #     Requires:  CYGBLD_ISO_CTYPE_HEADER ==  "<cyg/libc/i18n/ctype.inl>" 
};

# <
# Error handling
#
cdl_component CYGPKG_ISO_ERRNO {
    # There is no associated value.
};

# >
# Number of implementations of error codes
#
cdl_interface CYGINT_ISO_ERRNO_CODES {
    # Implemented by CYGPKG_ERROR, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
    #     CYGINT_ISO_ERRNO_CODES == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO_CODES
    #     Requires:  1 >= CYGINT_ISO_ERRNO_CODES 
    # component CYGPKG_IO_SERIAL_TERMIOS
    #     Requires: CYGINT_ISO_ERRNO_CODES
    # component CYGPKG_IO_SERIAL_TERMIOS
    #     DefaultValue:  0 != CYGPKG_ISOINFRA && 0 != CYGPKG_IO_FILEIO &&  0 != CYGINT_ISO_ERRNO_CODES &&  0 != CYGINT_ISO_ERRNO 
};

# Error codes implementation header
#
cdl_option CYGBLD_ISO_ERRNO_CODES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/error/codes.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_ERROR
    #     Requires:  CYGBLD_ISO_ERRNO_CODES_HEADER == "<cyg/error/codes.h>" 
};

# Number of implementations of errno variable
#
cdl_interface CYGINT_ISO_ERRNO {
    # Implemented by CYGPKG_ERROR_ERRNO, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_ERRNO 
    #     CYGINT_ISO_ERRNO == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_ERRNO
    #     Requires:  1 >= CYGINT_ISO_ERRNO 
    # component CYGPKG_IO_SERIAL_TERMIOS
    #     Requires: CYGINT_ISO_ERRNO
    # component CYGPKG_IO_SERIAL_TERMIOS
    #     DefaultValue:  0 != CYGPKG_ISOINFRA && 0 != CYGPKG_IO_FILEIO &&  0 != CYGINT_ISO_ERRNO_CODES &&  0 != CYGINT_ISO_ERRNO 
};

# errno variable implementation header
#
cdl_option CYGBLD_ISO_ERRNO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/error/errno.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # component CYGPKG_ERROR_ERRNO
    #     Requires:  CYGBLD_ISO_ERRNO_HEADER == "<cyg/error/errno.h>" 
};

# <
# Locale-related functions
#
cdl_component CYGPKG_ISO_LOCALE {
    # There is no associated value.
};

# >
# Number of implementations of locale functions
#
cdl_interface CYGINT_ISO_LOCALE {
    # Implemented by CYGPKG_LIBC_I18N, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_LOCALE 
    #     CYGINT_ISO_LOCALE == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_LOCALE
    #     Requires:  1 >= CYGINT_ISO_LOCALE 
};

# Locale implementation header
#
cdl_option CYGBLD_ISO_LOCALE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard I/O-related functionality
#
cdl_component CYGPKG_ISO_STDIO {
    # There is no associated value.
};

# >
# Number of implementations of stdio file types
#
cdl_interface CYGINT_ISO_STDIO_FILETYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
    #     CYGINT_ISO_STDIO_FILETYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILETYPES
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILETYPES 
};

# Stdio file types implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILETYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Stdio standard streams implementations
#
cdl_interface CYGINT_ISO_STDIO_STREAMS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
    #     CYGINT_ISO_STDIO_STREAMS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_STREAMS
    #     Requires:  1 >= CYGINT_ISO_STDIO_STREAMS 
};

# Stdio standard streams implementation header
# This header file must define stdin, stdout
# and stderr.
#
cdl_option CYGBLD_ISO_STDIO_STREAMS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file operations
#
cdl_interface CYGINT_ISO_STDIO_FILEOPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
    #     CYGINT_ISO_STDIO_FILEOPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEOPS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEOPS 
};

# Stdio file operations implementation header
# This header controls the file system operations on a file
# such as remove(), rename(), tmpfile(), tmpnam() and associated
# constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEOPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file access  functionals
#
cdl_interface CYGINT_ISO_STDIO_FILEACCESS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
    #     CYGINT_ISO_STDIO_FILEACCESS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEACCESS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEACCESS 
};

# Stdio file access implementation header
# This header controls the file access operations
# such as fclose(), fflush(), fopen(), freopen(), setbuf(),
# setvbuf(), and associated constants.
#
cdl_option CYGBLD_ISO_STDIO_FILEACCESS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio formatted I/O
#
cdl_interface CYGINT_ISO_STDIO_FORMATTED_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
    #     CYGINT_ISO_STDIO_FORMATTED_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FORMATTED_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_FORMATTED_IO 
};

# Stdio formatted I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_FORMATTED_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio character I/O
#
cdl_interface CYGINT_ISO_STDIO_CHAR_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
    #     CYGINT_ISO_STDIO_CHAR_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_CHAR_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_CHAR_IO 
};

# Stdio character I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_CHAR_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio direct I/O
#
cdl_interface CYGINT_ISO_STDIO_DIRECT_IO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
    #     CYGINT_ISO_STDIO_DIRECT_IO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_DIRECT_IO
    #     Requires:  1 >= CYGINT_ISO_STDIO_DIRECT_IO 
};

# Stdio direct I/O implementation header
#
cdl_option CYGBLD_ISO_STDIO_DIRECT_IO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio file positioning
#
cdl_interface CYGINT_ISO_STDIO_FILEPOS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
    #     CYGINT_ISO_STDIO_FILEPOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_FILEPOS
    #     Requires:  1 >= CYGINT_ISO_STDIO_FILEPOS 
};

# Stdio file positioning implementation header
#
cdl_option CYGBLD_ISO_STDIO_FILEPOS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of stdio error handling
#
cdl_interface CYGINT_ISO_STDIO_ERROR {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
    #     CYGINT_ISO_STDIO_ERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_ERROR
    #     Requires:  1 >= CYGINT_ISO_STDIO_ERROR 
};

# Stdio error handling implementation header
#
cdl_option CYGBLD_ISO_STDIO_ERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fd-related function implementations
#
cdl_interface CYGINT_ISO_STDIO_POSIX_FDFUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
    #     CYGINT_ISO_STDIO_POSIX_FDFUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDIO_POSIX_FDFUNCS
    #     Requires:  1 >=  CYGINT_ISO_STDIO_POSIX_FDFUNCS 
};

# POSIX fd-related function implementation header
#
cdl_option CYGBLD_ISO_STDIO_POSIX_FDFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Standard general utility functions
#
cdl_component CYGPKG_ISO_STDLIB {
    # There is no associated value.
};

# >
# String conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV {
    # Implemented by CYGPKG_LIBC_STDLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
    #     CYGINT_ISO_STDLIB_STRCONV == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV 
};

# String conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_HEADER {
    # Flavor: booldata
    user_value 0 <cyg/libc/stdlib/atox.inl>
    # value_source user
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGIMP_LIBC_STDLIB_INLINE_ATOX
    #     Requires:  CYGBLD_ISO_STDLIB_STRCONV_HEADER ==  "<cyg/libc/stdlib/atox.inl>" 
};

# String to FP conversion function implementations
#
cdl_interface CYGINT_ISO_STDLIB_STRCONV_FLOAT {
    # Implemented by CYGFUN_LIBC_strtod, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
    #     CYGINT_ISO_STDLIB_STRCONV_FLOAT == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_STRCONV_FLOAT
    #     Requires:  1 >= CYGINT_ISO_STDLIB_STRCONV_FLOAT 
};

# String to FP conversion function implementation header
#
cdl_option CYGBLD_ISO_STDLIB_STRCONV_FLOAT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Random number generator implementations
#
cdl_interface CYGINT_ISO_RAND {
    # Implemented by CYGIMP_LIBC_RAND_SIMPLEST, active, disabled
    # Implemented by CYGIMP_LIBC_RAND_SIMPLE1, active, enabled
    # Implemented by CYGIMP_LIBC_RAND_KNUTH1, active, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_RAND 
    #     CYGINT_ISO_RAND == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_RAND
    #     Requires:  1 >= CYGINT_ISO_RAND 
};

# Random number generator implementation header
#
cdl_option CYGBLD_ISO_RAND_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Malloc implementations
#
cdl_interface CYGINT_ISO_MALLOC {
    # Implemented by CYGPKG_MEMALLOC_MALLOC_ALLOCATORS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_MALLOC 
    #     CYGINT_ISO_MALLOC == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLOC
    #     Requires:  1 >= CYGINT_ISO_MALLOC 
    # component CYGPKG_IO_SERIAL_TERMIOS
    #     Requires: CYGINT_ISO_MALLOC
    # option CYGFUN_LIBC_STRING_STRDUP
    #     ActiveIf: CYGINT_ISO_MALLOC
};

# Malloc implementation header
#
cdl_option CYGBLD_ISO_MALLOC_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Mallinfo() implementations
#
cdl_interface CYGINT_ISO_MALLINFO {
    # Implemented by CYGPKG_MEMALLOC_MALLOC_ALLOCATORS, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_MALLINFO 
    #     CYGINT_ISO_MALLINFO == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MALLINFO
    #     Requires:  1 >= CYGINT_ISO_MALLINFO 
};

# Mallinfo() implementation header
#
cdl_option CYGBLD_ISO_MALLINFO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program exit functionality implementations
#
cdl_interface CYGINT_ISO_EXIT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_EXIT 
    #     CYGINT_ISO_EXIT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_EXIT
    #     Requires:  1 >= CYGINT_ISO_EXIT 
    # option CYGFUN_INFRA_DUMMY_ABORT
    #     Requires: !CYGINT_ISO_EXIT
    # option CYGFUN_INFRA_DUMMY_ABORT
    #     DefaultValue:  CYGINT_ISO_EXIT == 0 
};

# Program exit functionality implementation header
#
cdl_option CYGBLD_ISO_EXIT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Program environment implementations
#
cdl_interface CYGINT_ISO_STDLIB_ENVIRON {
    # Implemented by CYGPKG_LIBC_STDLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
    #     CYGINT_ISO_STDLIB_ENVIRON == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_ENVIRON
    #     Requires:  1 >= CYGINT_ISO_STDLIB_ENVIRON 
};

# Program environment implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ENVIRON_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# system() implementations
#
cdl_interface CYGINT_ISO_STDLIB_SYSTEM {
    # Implemented by CYGPKG_LIBC_STDLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
    #     CYGINT_ISO_STDLIB_SYSTEM == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_SYSTEM
    #     Requires:  1 >= CYGINT_ISO_STDLIB_SYSTEM 
};

# system() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_SYSTEM_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# bsearch() implementations
#
cdl_interface CYGINT_ISO_BSEARCH {
    # Implemented by CYGPKG_LIBC_STDLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_BSEARCH 
    #     CYGINT_ISO_BSEARCH == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSEARCH
    #     Requires:  1 >= CYGINT_ISO_BSEARCH 
};

# bsearch() implementation header
#
cdl_option CYGBLD_ISO_BSEARCH_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# qsort() implementations
#
cdl_interface CYGINT_ISO_QSORT {
    # Implemented by CYGPKG_LIBC_STDLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_QSORT 
    #     CYGINT_ISO_STDLIB_QSORT (unknown) == 0
    #   --> 1

    # The following properties are affected by this value
};

# qsort() implementation header
#
cdl_option CYGBLD_ISO_QSORT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# abs()/labs() implementations
#
cdl_interface CYGINT_ISO_ABS {
    # Implemented by CYGPKG_LIBC_STDLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_ABS 
    #     CYGINT_ISO_STDLIB_ABS (unknown) == 0
    #   --> 1

    # The following properties are affected by this value
};

# abs()/labs() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_ABS_HEADER {
    # Flavor: booldata
    user_value 0 <cyg/libc/stdlib/abs.inl>
    # value_source user
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGIMP_LIBC_STDLIB_INLINE_ABS
    #     Requires:  CYGBLD_ISO_STDLIB_ABS_HEADER ==  "<cyg/libc/stdlib/abs.inl>" 
};

# div()/ldiv() implementations
#
cdl_interface CYGINT_ISO_DIV {
    # Implemented by CYGPKG_LIBC_STDLIB, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_DIV 
    #     CYGINT_ISO_STDLIB_DIV (unknown) == 0
    #   --> 1

    # The following properties are affected by this value
};

# div()/ldiv() implementation header
#
cdl_option CYGBLD_ISO_STDLIB_DIV_HEADER {
    # Flavor: booldata
    user_value 0 <cyg/libc/stdlib/div.inl>
    # value_source user
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGIMP_LIBC_STDLIB_INLINE_DIV
    #     Requires:  CYGBLD_ISO_STDLIB_DIV_HEADER ==  "<cyg/libc/stdlib/div.inl>" 
};

# Header defining the implementation's MB_CUR_MAX
#
cdl_option CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0

    # The following properties are affected by this value
    # interface CYGINT_LIBC_I18N_MB_REQUIRED
    #     Requires:  CYGBLD_ISO_STDLIB_MB_CUR_MAX_HEADER ==  "<cyg/libc/i18n/mb.h>" 
};

# Multibyte character implementations
#
cdl_interface CYGINT_ISO_STDLIB_MULTIBYTE {
    # Implemented by CYGPKG_LIBC_I18N, active, enabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
    #     CYGINT_ISO_STDLIB_MULTIBYTE == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STDLIB_MULTIBYTE
    #     Requires:  1 >= CYGINT_ISO_STDLIB_MULTIBYTE 
};

# Multibyte character implementation header
#
cdl_option CYGBLD_ISO_STDLIB_MULTIBYTE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# String functions
#
cdl_component CYGPKG_ISO_STRING {
    # There is no associated value.
};

# >
# Number of implementations of strerror() function
#
cdl_interface CYGINT_ISO_STRERROR {
    # Implemented by CYGPKG_ERROR_STRERROR, active, disabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_STRERROR 
    #     CYGINT_ISO_STRERROR == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRERROR
    #     Requires:  1 >= CYGINT_ISO_STRERROR 
};

# strerror() implementation header
#
cdl_option CYGBLD_ISO_STRERROR_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/error/strerror.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGPKG_ERROR_STRERROR
    #     Requires:  CYGBLD_ISO_STRERROR_HEADER == "<cyg/error/strerror.h>" 
};

# memcpy() implementation header
#
cdl_option CYGBLD_ISO_MEMCPY_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# memset() implementation header
#
cdl_option CYGBLD_ISO_MEMSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of strtok_r() function
#
cdl_interface CYGINT_ISO_STRTOK_R {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRTOK_R 
    #     CYGINT_ISO_STRTOK_R == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRTOK_R
    #     Requires:  1 >= CYGINT_ISO_STRTOK_R 
};

# strtok_r() implementation header
#
cdl_option CYGBLD_ISO_STRTOK_R_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRTOK_R_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of locale-specific string  functions
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_interface CYGINT_ISO_STRING_LOCALE_FUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
    #     CYGINT_ISO_STRING_LOCALE_FUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_LOCALE_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_LOCALE_FUNCS 
};

# Locale-specific string functions' implementation  header
# This covers locale-dependent string functions such as strcoll()
# and strxfrm().
#
cdl_option CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_LOCALE_FUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of BSD string functions
#
cdl_interface CYGINT_ISO_STRING_BSD_FUNCS {
    # Implemented by CYGFUN_LIBC_STRING_BSD_FUNCS, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
    #     CYGINT_ISO_STRING_BSD_FUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_BSD_FUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_BSD_FUNCS 
};

# BSD string functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_BSD_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/bsdstring.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # option CYGFUN_LIBC_STRING_BSD_FUNCS
    #     Requires:  CYGBLD_ISO_STRING_BSD_FUNCS_HEADER ==  "<cyg/libc/string/bsdstring.h>" 
};

# Number of implementations of other mem*() functions
#
cdl_interface CYGINT_ISO_STRING_MEMFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    #     CYGINT_ISO_STRING_MEMFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_MEMFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_MEMFUNCS 
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY
    #     Requires: CYGINT_ISO_STRING_MEMFUNCS
    # option CYGIMP_MEMALLOC_ALLOCATOR_DLMALLOC_USE_MEMCPY
    #     DefaultValue:  (0 != CYGPKG_ISOINFRA) && (0 != CYGINT_ISO_STRING_MEMFUNCS) 
};

# Other mem*() functions' implementation header
#
cdl_option CYGBLD_ISO_STRING_MEMFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_MEMFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# Number of implementations of other ISO C str*()  functions
# This covers the other str*() functions defined by ISO C.
#
cdl_interface CYGINT_ISO_STRING_STRFUNCS {
    # Implemented by CYGPKG_LIBC_STRING, active, enabled
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 1
    # Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    #     CYGINT_ISO_STRING_STRFUNCS == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_STRING_STRFUNCS
    #     Requires:  1 >= CYGINT_ISO_STRING_STRFUNCS 
    # option CYGFUN_INFRA_DUMMY_STRLEN
    #     Requires: !CYGINT_ISO_STRING_STRFUNCS
    # option CYGFUN_INFRA_DUMMY_STRLEN
    #     DefaultValue:  CYGINT_ISO_STRING_STRFUNCS == 0 
    # package CYGPKG_LIBC_STDLIB
    #     Requires: CYGINT_ISO_STRING_STRFUNCS
};

# Other ISO C str*() functions' implementation  header
# This covers the other str*() functions defined by ISO C.
#
cdl_option CYGBLD_ISO_STRING_STRFUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # The inferred value should not be edited directly.
    inferred_value 1 <cyg/libc/string/string.h>
    # value_source inferred
    # Default value: 0 0

    # The following properties are affected by this value
    # package CYGPKG_LIBC_STRING
    #     Requires:  CYGBLD_ISO_STRING_STRFUNCS_HEADER ==  "<cyg/libc/string/string.h>" 
};

# <
# Clock and time functionality
#
cdl_component CYGPKG_ISO_TIME {
    # There is no associated value.
};

# >
# time_t implementation header
#
cdl_option CYGBLD_ISO_TIME_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# clock_t implementation header
#
cdl_option CYGBLD_ISO_CLOCK_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# struct timeval implementation header
#
cdl_option CYGBLD_ISO_STRUCTTIMEVAL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# fnmatch implementation header
#
cdl_option CYGBLD_ISO_FNMATCH_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timer types
#
cdl_interface CYGINT_ISO_POSIX_TIMER_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
    #     CYGINT_ISO_POSIX_TIMER_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_TYPES 
};

# POSIX timer types implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clock types
#
cdl_interface CYGINT_ISO_POSIX_CLOCK_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
    #     CYGINT_ISO_POSIX_CLOCK_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCK_TYPES
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCK_TYPES 
};

# POSIX clock types implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCK_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C types
#
cdl_interface CYGINT_ISO_C_TIME_TYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
    #     CYGINT_ISO_C_TIME_TYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_TIME_TYPES
    #     Requires:  1 >= CYGINT_ISO_C_TIME_TYPES 
};

# ISO C time types implementation header
#
cdl_option CYGBLD_ISO_C_TIME_TYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX timers
#
cdl_interface CYGINT_ISO_POSIX_TIMERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
    #     CYGINT_ISO_POSIX_TIMERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMERS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMERS 
};

# POSIX timer implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of POSIX clocks
#
cdl_interface CYGINT_ISO_POSIX_CLOCKS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
    #     CYGINT_ISO_POSIX_CLOCKS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_CLOCKS
    #     Requires:  1 >= CYGINT_ISO_POSIX_CLOCKS 
};

# POSIX clocks implementation header
#
cdl_option CYGBLD_ISO_POSIX_CLOCKS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of ISO C clock functions
#
cdl_interface CYGINT_ISO_C_CLOCK_FUNCS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
    #     CYGINT_ISO_C_CLOCK_FUNCS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_C_CLOCK_FUNCS
    #     Requires:  1 >= CYGINT_ISO_C_CLOCK_FUNCS 
};

# ISO C clock functions' implementation header
#
cdl_option CYGBLD_ISO_C_CLOCK_FUNCS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of implementations of tzset() function
#
cdl_interface CYGINT_ISO_TZSET {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_TZSET 
    #     CYGINT_ISO_TZSET == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TZSET
    #     Requires:  1 >= CYGINT_ISO_TZSET 
};

# tzset() implementation header
#
cdl_option CYGBLD_ISO_TZSET_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Signal functionality
#
cdl_component CYGPKG_ISO_SIGNAL {
    # There is no associated value.
};

# >
# Number of implementations of signal numbers
#
cdl_interface CYGINT_ISO_SIGNAL_NUMBERS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
    #     CYGINT_ISO_SIGNAL_NUMBERS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_NUMBERS
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_NUMBERS 
    # option CYGSEM_IO_SERIAL_TERMIOS_USE_SIGNALS
    #     Requires: CYGINT_ISO_SIGNAL_NUMBERS
    # option CYGSEM_IO_SERIAL_TERMIOS_USE_SIGNALS
    #     DefaultValue:  CYGINT_ISO_SIGNAL_NUMBERS != 0 &&  CYGINT_ISO_SIGNAL_IMPL != 0 
};

# Signal numbering implementation header
# This header provides the mapping of signal
# names (e.g. SIGBUS) to numbers.
#
cdl_option CYGBLD_ISO_SIGNAL_NUMBERS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Number of signal implementations
#
cdl_interface CYGINT_ISO_SIGNAL_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
    #     CYGINT_ISO_SIGNAL_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGNAL_IMPL
    #     Requires:  1 >= CYGINT_ISO_SIGNAL_IMPL 
    # option CYGSEM_IO_SERIAL_TERMIOS_USE_SIGNALS
    #     Requires: CYGINT_ISO_SIGNAL_IMPL
    # option CYGSEM_IO_SERIAL_TERMIOS_USE_SIGNALS
    #     DefaultValue:  CYGINT_ISO_SIGNAL_NUMBERS != 0 &&  CYGINT_ISO_SIGNAL_IMPL != 0 
};

# Signals implementation header
#
cdl_option CYGBLD_ISO_SIGNAL_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX real time signals feature test macro
# This defines the POSIX feature test macro
# that indicates that the POSIX real time signals
# are present.
#
cdl_interface CYGINT_POSIX_REALTIME_SIGNALS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
    #     CYGINT_POSIX_REALTIME_SIGNALS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_POSIX_REALTIME_SIGNALS
    #     Requires:  1 >= CYGINT_POSIX_REALTIME_SIGNALS 
};

# <
# Non-local jumps functionality
#
cdl_component CYGPKG_ISO_SETJMP {
    # There is no associated value.
};

# >
# setjmp() / longjmp() implementations
#
cdl_interface CYGINT_ISO_SETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SETJMP 
    #     CYGINT_ISO_SETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SETJMP
    #     Requires:  1 >= CYGINT_ISO_SETJMP 
};

# setjmp() / longjmp() implementation header
#
cdl_option CYGBLD_ISO_SETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# sigsetjmp() / siglongjmp() implementations
#
cdl_interface CYGINT_ISO_SIGSETJMP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SIGSETJMP 
    #     CYGINT_ISO_SIGSETJMP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SIGSETJMP
    #     Requires:  1 >= CYGINT_ISO_SIGSETJMP 
};

# sigsetjmp() / siglongjmp() implementation header
#
cdl_option CYGBLD_ISO_SIGSETJMP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Assertions implementation header
#
cdl_option CYGBLD_ISO_ASSERT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file control
# This covers the POSIX file control definitions,
# normally found in <fcntl.h>
#
cdl_component CYGPKG_ISO_POSIX_FCNTL {
    # There is no associated value.
};

# >
# POSIX open flags implementation header
#
cdl_option CYGBLD_ISO_OFLAG_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX fcntl() implementations
#
cdl_interface CYGINT_ISO_FCNTL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_FCNTL 
    #     CYGINT_ISO_FCNTL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_FCNTL
    #     Requires:  1 >= CYGINT_ISO_FCNTL 
};

# POSIX fcntl() implementation header
#
cdl_option CYGBLD_ISO_FCNTL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX file open implementations
#
cdl_interface CYGINT_ISO_OPEN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_OPEN 
    #     CYGINT_ISO_OPEN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_OPEN
    #     Requires:  1 >= CYGINT_ISO_OPEN 
};

# POSIX file open implementation header
#
cdl_option CYGBLD_ISO_OPEN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# <sys/stat.h> definitions implementation header
#
cdl_option CYGBLD_ISO_STAT_DEFS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX directory reading implementation
#
cdl_interface CYGINT_ISO_DIRENT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DIRENT 
    #     CYGINT_ISO_DIRENT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DIRENT
    #     Requires:  1 >= CYGINT_ISO_DIRENT 
};

# <dirent.h> definitions implementation header
#
cdl_option CYGBLD_ISO_DIRENT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX <sys/types.h> contents
# This covers the types required by POSIX to be in
# <sys/types.h>
#
cdl_component CYGPKG_ISO_POSIX_TYPES {
    # There is no associated value.
};

# >
# POSIX thread types implementations
#
cdl_interface CYGINT_ISO_PTHREADTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREADTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    # interface CYGINT_ISO_PMUTEXTYPES
    #     Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
};

# POSIX thread types implementation header
#
cdl_option CYGBLD_ISO_PTHREADTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex types implementations
#
cdl_interface CYGINT_ISO_PMUTEXTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_PTHREADTYPES 
    #     CYGINT_ISO_PTHREADTYPES == 0
    #   --> 1
};

# POSIX mutex types implementation header
#
cdl_option CYGBLD_ISO_PMUTEXTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# ssize_t implementation header
#
cdl_option CYGBLD_ISO_SSIZE_T_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Filesystem types implementation header
#
cdl_option CYGBLD_ISO_FSTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# gid_t, pid_t, uid_t implementation header
#
cdl_option CYGBLD_ISO_SCHEDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Non-POSIX <sys/types.h> contents
# This covers the extra types required by non-POSIX
# packages to be in <sys/types.h>. These would normally
# only be visible if _POSIX_SOURCE is not defined.
#
cdl_component CYGPKG_ISO_EXTRA_TYPES {
    # There is no associated value.
};

# >
# BSD compatible types
#
cdl_interface CYGINT_ISO_BSDTYPES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_BSDTYPES 
    #     CYGINT_ISO_BSDTYPES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_BSDTYPES
    #     Requires:  1 >= CYGINT_ISO_BSDTYPES 
};

# BSD types header
#
cdl_option CYGBLD_ISO_BSDTYPES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Utsname structure
#
cdl_component CYGPKG_ISO_UTSNAME {
    # There is no associated value.
};

# >
# Utsname header
#
cdl_option CYGBLD_ISO_UTSNAME_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX scheduler
#
cdl_component CYGPKG_ISO_SCHED {
    # There is no associated value.
};

# >
# POSIX scheduler implementations
#
cdl_interface CYGINT_ISO_SCHED_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
    #     CYGINT_ISO_SCHED_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SCHED_IMPL
    #     Requires:  1 >= CYGINT_ISO_SCHED_IMPL 
};

# POSIX scheduler implementation header
#
cdl_option CYGBLD_ISO_SCHED_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX semaphores
#
cdl_component CYGPKG_ISO_SEMAPHORES {
    # There is no associated value.
};

# >
# POSIX semaphore implementations
#
cdl_interface CYGINT_ISO_SEMAPHORES {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_SEMAPHORES 
    #     CYGINT_ISO_SEMAPHORES == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SEMAPHORES
    #     Requires:  1 >= CYGINT_ISO_SEMAPHORES 
};

# POSIX semaphore implementation header
#
cdl_option CYGBLD_ISO_SEMAPHORES_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX message queues
#
cdl_component CYGPKG_ISO_MQUEUE {
    # There is no associated value.
};

# >
# Implementations
#
cdl_interface CYGINT_ISO_MQUEUE {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_MQUEUE 
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_MQUEUE
    #     Requires:  1 >= CYGINT_ISO_MQUEUE 
    # option CYGNUM_ISO_MQUEUE_OPEN_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
    # option CYGNUM_ISO_MQUEUE_PRIO_MAX
    #     ActiveIf: CYGINT_ISO_MQUEUE
};

# Implementation header
#
cdl_option CYGBLD_ISO_MQUEUE_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Maximum number of open message queues
#
cdl_option CYGNUM_ISO_MQUEUE_OPEN_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value:  CYGNUM_POSIX_MQUEUE_OPEN_MAX > 0 ? CYGNUM_POSIX_MQUEUE_OPEN_MAX : 0 
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #     CYGNUM_POSIX_MQUEUE_OPEN_MAX (unknown) == 0
    #   --> 0 0
};

# Maximum number of message priorities
#
cdl_option CYGNUM_ISO_MQUEUE_PRIO_MAX {
    # This option is not active
    # ActiveIf constraint: CYGINT_ISO_MQUEUE
    #     CYGINT_ISO_MQUEUE == 0
    #   --> 0

    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 1 65535
    # value_source default
    # Default value: 1 65535
};

# <
# POSIX threads
#
cdl_component CYGPKG_ISO_PTHREAD {
    # There is no associated value.
};

# >
# POSIX pthread implementations
#
cdl_interface CYGINT_ISO_PTHREAD_IMPL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
    #     CYGINT_ISO_PTHREAD_IMPL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_IMPL
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_IMPL 
};

# POSIX pthread implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_IMPL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX mutex/cond var implementations
#
cdl_interface CYGINT_ISO_PTHREAD_MUTEX {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
    #     CYGINT_ISO_PTHREAD_MUTEX == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_PTHREAD_MUTEX
    #     Requires:  1 >= CYGINT_ISO_PTHREAD_MUTEX 
};

# POSIX mutex/cond var implementation header
#
cdl_option CYGBLD_ISO_PTHREAD_MUTEX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Limits
#
cdl_component CYGPKG_ISO_LIMITS {
    # There is no associated value.
};

# >
# POSIX pthread limits implementations
#
cdl_interface CYGINT_ISO_POSIX_LIMITS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
    #     CYGINT_ISO_POSIX_LIMITS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_LIMITS
    #     Requires:  1 >= CYGINT_ISO_POSIX_LIMITS 
};

# POSIX pthread limits implementation header
#
cdl_option CYGBLD_ISO_POSIX_LIMITS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# OPEN_MAX implementation header
#
cdl_option CYGBLD_ISO_OPEN_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# LINK_MAX implementation header
#
cdl_option CYGBLD_ISO_LINK_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# NAME_MAX implementation header
#
cdl_option CYGBLD_ISO_NAME_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# PATH_MAX implementation header
#
cdl_option CYGBLD_ISO_PATH_MAX_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# POSIX termios
#
cdl_component CYGPKG_ISO_TERMIOS {
    # There is no associated value.
};

# >
# POSIX termios implementations
#
cdl_interface CYGINT_ISO_TERMIOS {
    # Implemented by CYGPKG_IO_SERIAL_TERMIOS, inactive, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_TERMIOS 
    #     CYGINT_ISO_TERMIOS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_TERMIOS
    #     Requires:  1 >= CYGINT_ISO_TERMIOS 
};

# POSIX termios implementation header
#
cdl_option CYGBLD_ISO_TERMIOS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Dynamic load API
#
cdl_component CYGPKG_ISO_DLFCN {
    # There is no associated value.
};

# >
# Dynamic load implementations
#
cdl_interface CYGINT_ISO_DLFCN {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 0
    # Requires:  1 >= CYGINT_ISO_DLFCN 
    #     CYGINT_ISO_DLFCN == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DLFCN
    #     Requires:  1 >= CYGINT_ISO_DLFCN 
};

# Dynamic load implementation header
#
cdl_option CYGBLD_ISO_DLFCN_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# UNIX standard functions
#
cdl_component CYGPKG_ISO_UNISTD {
    # There is no associated value.
};

# >
# POSIX timer operations implementations
#
cdl_interface CYGINT_ISO_POSIX_TIMER_OPS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
    #     CYGINT_ISO_POSIX_TIMER_OPS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_TIMER_OPS
    #     Requires:  1 >= CYGINT_ISO_POSIX_TIMER_OPS 
};

# POSIX timer operations implementation header
#
cdl_option CYGBLD_ISO_POSIX_TIMER_OPS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# POSIX sleep() implementations
#
cdl_interface CYGINT_ISO_POSIX_SLEEP {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
    #     CYGINT_ISO_POSIX_SLEEP == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POSIX_SLEEP
    #     Requires:  1 >= CYGINT_ISO_POSIX_SLEEP 
};

# POSIX sleep() implementation header
#
cdl_option CYGBLD_ISO_POSIX_SLEEP_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# select()/poll() functions
#
cdl_component CYGPKG_ISO_SELECT {
    # There is no associated value.
};

# >
# select() implementations
#
cdl_interface CYGINT_ISO_SELECT {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_SELECT 
    #     CYGINT_ISO_SELECT == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_SELECT
    #     Requires:  1 >= CYGINT_ISO_SELECT 
};

# select() implementation header
#
cdl_option CYGBLD_ISO_SELECT_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# poll() implementations
#
cdl_interface CYGINT_ISO_POLL {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 0 0
    # Requires:  1 >= CYGINT_ISO_POLL 
    #     CYGINT_ISO_POLL == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_POLL
    #     Requires:  1 >= CYGINT_ISO_POLL 
};

# poll() implementation header
#
cdl_option CYGBLD_ISO_POLL_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# NetDB utility functions
#
cdl_component CYGPKG_ISO_NETDB {
    # There is no associated value.
};

# >
# DNS implementations
#
cdl_interface CYGINT_ISO_DNS {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_DNS 
    #     CYGINT_ISO_DNS == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_DNS
    #     Requires:  1 >= CYGINT_ISO_DNS 
};

# DNS implementation header
#
cdl_option CYGBLD_ISO_DNS_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Protocol network database implementations
#
cdl_interface CYGINT_ISO_NETDB_PROTO {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
    #     CYGINT_ISO_NETDB_PROTO == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_PROTO
    #     Requires:  1 >= CYGINT_ISO_NETDB_PROTO 
};

# Protocol network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_PROTO_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# Services network database implementations
#
cdl_interface CYGINT_ISO_NETDB_SERV {
    # No options implement this inferface
    # This value cannot be modified here.
    # Flavor: bool
    # Current value: 0
    # Requires:  1 >= CYGINT_ISO_NETDB_SERV 
    #     CYGINT_ISO_NETDB_SERV == 0
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_ISO_NETDB_SERV
    #     Requires:  1 >= CYGINT_ISO_NETDB_SERV 
};

# Services network database implementation header
#
cdl_option CYGBLD_ISO_NETDB_SERV_HEADER {
    # Flavor: booldata
    # No user value, uncomment the following line to provide one.
    # user_value 0 0
    # value_source default
    # Default value: 0 0
};

# <
# Build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_ISOINFRA_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are used in addition to the set of global flags.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the ISO C and POSIX infrastructure package.
# These flags are removed from the set of global flags
# if present.
#
cdl_option CYGPKG_ISOINFRA_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# <
# <
# Measure the current CPU load
# doc: ref/services-cpuload.html
# This package measures the CPU load over the last 100ms, 1second 
# and 10 second. All loads are returned as a percentage, ie 0-100.
# This is only a rough measure. Any clever power management, sleep 
# modes etc, will cause these results to be wrong.
#
cdl_package CYGPKG_CPULOAD {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current
    # Requires: CYGPKG_KERNEL
    #     CYGPKG_KERNEL == current
    #   --> 1
    # Requires: !CYGPKG_KERNEL_SMP_SUPPORT
    #     CYGPKG_KERNEL_SMP_SUPPORT == 0
    #   --> 1
};

# >
# CPU load measurement tests
#
cdl_option CYGPKG_CPULOAD_TESTS {
    # Calculated value:  "tests/cpuload" 
    # Flavor: data
    # Current_value: tests/cpuload
};

# <
# Math library
# doc: ref/libc.html
# ISO standard floating point mathematical library
# containing many useful functions for mathematical
# calculations.
#
cdl_package CYGPKG_LIBM {
    # Packages cannot be added or removed, nor can their version be changed,
    # simply by editing their value. Instead the appropriate configuration
    # should be used to perform these actions.

    # This value cannot be modified here.
    # Flavor: booldata
    # Current value: 1 current

    # The following properties are affected by this value
    # option CYGFUN_LIBC_strtod
    #     Requires: CYGPKG_LIBM
    # option CYGFUN_LIBC_strtod
    #     DefaultValue:  0 != CYGPKG_LIBM 
};

# >
# Compatibility mode
# These options deal with behaviour related to
# the various compatibility modes - POSIX, IEEE,
# X/OPEN and SVID.
#
cdl_component CYGPKG_LIBM_COMPATIBILITY {
    # There is no associated value.
};

# >
#
cdl_interface CYGINT_LIBM_COMPAT {
    # Implemented by CYGSEM_LIBM_COMPAT_IEEE_ONLY, active, enabled
    # Implemented by CYGNUM_LIBM_COMPATIBILITY, active, disabled
    # This value cannot be modified here.
    # Flavor: data
    # Current_value: 1
    # Requires: 1 == CYGINT_LIBM_COMPAT
    #     CYGINT_LIBM_COMPAT == 1
    #   --> 1

    # The following properties are affected by this value
    # interface CYGINT_LIBM_COMPAT
    #     Requires: 1 == CYGINT_LIBM_COMPAT
};

# IEEE-only
# The math library can be hard-coded to only
# behave in one compatibility mode - IEEE. This
# cannot be changed at run-time. IEEE mode is the
# most minimal of the compatibility modes, and so
# this will best help code size and speed, as well
# as omitting the code for other compatibility
# modes. If not defined, the math library can be
# set at run-time to any of the supported
# compatibility modes.
#
cdl_option CYGSEM_LIBM_COMPAT_IEEE_ONLY {
    # Flavor: bool
    user_value 1
    # value_source user
    # Default value: 0

    # The following properties are affected by this value
    # option CYGSEM_LIBM_USE_STDERR
    #     Requires: !CYGSEM_LIBM_COMPAT_IEEE_ONLY
    # option CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE
    #     Requires: !CYGSEM_LIBM_COMPAT_IEEE_ONLY
};

# Default mode
# If you want to have support for more than one
# compatibility mode settable at run-time, rather
# than hard-coded IEEE mode, this component lets
# you choose which mode should be the default.
#
cdl_component CYGNUM_LIBM_COMPATIBILITY {
    # Flavor: booldata
    user_value 0 0
    # value_source user
    # Default value: 1 POSIX
    # Legal values:  "POSIX" "IEEE" "XOPEN" "SVID" 
    # Requires: CYGPKG_LIBC
    #     CYGPKG_LIBC (unknown) == 0
    #   --> 0

    # The following properties are affected by this value
    # option CYGNUM_LIBM_COMPAT_DEFAULT
    #     Calculated:   CYGNUM_LIBM_COMPATIBILITY == "POSIX" ? "CYGNUM_LIBM_COMPAT_POSIX" : CYGNUM_LIBM_COMPATIBILITY == "IEEE"  ? "CYGNUM_LIBM_COMPAT_IEEE" : CYGNUM_LIBM_COMPATIBILITY == "XOPEN" ? "CYGNUM_LIBM_COMPAT_XOPEN" : CYGNUM_LIBM_COMPATIBILITY == "SVID"  ? "CYGNUM_LIBM_COMPAT_SVID" : "<undefined>"  
    # option CYGNUM_LIBM_COMPAT_DEFAULT
    #     Calculated:   CYGNUM_LIBM_COMPATIBILITY == "POSIX" ? "CYGNUM_LIBM_COMPAT_POSIX" : CYGNUM_LIBM_COMPATIBILITY == "IEEE"  ? "CYGNUM_LIBM_COMPAT_IEEE" : CYGNUM_LIBM_COMPATIBILITY == "XOPEN" ? "CYGNUM_LIBM_COMPAT_XOPEN" : CYGNUM_LIBM_COMPATIBILITY == "SVID"  ? "CYGNUM_LIBM_COMPAT_SVID" : "<undefined>"  
    # option CYGNUM_LIBM_COMPAT_DEFAULT
    #     Calculated:   CYGNUM_LIBM_COMPATIBILITY == "POSIX" ? "CYGNUM_LIBM_COMPAT_POSIX" : CYGNUM_LIBM_COMPATIBILITY == "IEEE"  ? "CYGNUM_LIBM_COMPAT_IEEE" : CYGNUM_LIBM_COMPATIBILITY == "XOPEN" ? "CYGNUM_LIBM_COMPAT_XOPEN" : CYGNUM_LIBM_COMPATIBILITY == "SVID"  ? "CYGNUM_LIBM_COMPAT_SVID" : "<undefined>"  
    # option CYGNUM_LIBM_COMPAT_DEFAULT
    #     Calculated:   CYGNUM_LIBM_COMPATIBILITY == "POSIX" ? "CYGNUM_LIBM_COMPAT_POSIX" : CYGNUM_LIBM_COMPATIBILITY == "IEEE"  ? "CYGNUM_LIBM_COMPAT_IEEE" : CYGNUM_LIBM_COMPATIBILITY == "XOPEN" ? "CYGNUM_LIBM_COMPAT_XOPEN" : CYGNUM_LIBM_COMPATIBILITY == "SVID"  ? "CYGNUM_LIBM_COMPAT_SVID" : "<undefined>"  
};

# >
# Numeric representation
# This option automatically defines the default compatibility
# mode for numeric representation in terms of the values used
# to set that mode at run-time.
#
cdl_option CYGNUM_LIBM_COMPAT_DEFAULT {
    # This option is not active
    # The parent CYGNUM_LIBM_COMPATIBILITY is disabled

    # Calculated value:   CYGNUM_LIBM_COMPATIBILITY == "POSIX" ? "CYGNUM_LIBM_COMPAT_POSIX" : CYGNUM_LIBM_COMPATIBILITY == "IEEE"  ? "CYGNUM_LIBM_COMPAT_IEEE" : CYGNUM_LIBM_COMPATIBILITY == "XOPEN" ? "CYGNUM_LIBM_COMPAT_XOPEN" : CYGNUM_LIBM_COMPATIBILITY == "SVID"  ? "CYGNUM_LIBM_COMPAT_SVID" : "<undefined>"  
    #     CYGNUM_LIBM_COMPATIBILITY == 0
    #     CYGNUM_LIBM_COMPATIBILITY == 0
    #     CYGNUM_LIBM_COMPATIBILITY == 0
    #     CYGNUM_LIBM_COMPATIBILITY == 0
    # Flavor: data
    # Current_value: <undefined>
};

# <
# SVID3-style scalb()
# SVID3 defined the scalb() function as double
# scalb(double, double) rather than double
# scalb(double, int) which is used by IBM, DEC, and
# probably others. Enabling this option chooses
# the (double, double) version. Note there is a
# function double scalbn(double, int) which is
# unaffected by this choice.
#
cdl_option CYGFUN_LIBM_SVID3_scalb {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 1
    # value_source default
    # Default value: 1
};

# Reduce namespace pollution
# If you do not want to use either the X/Open or
# SVID3 compatibility modes, you may want to define
# this option to reduce the chance of namespace
# pollution. This is particularly likely to occur
# here as these standards define symbols with
# names that often appear in applications, such as
# exception, DOMAIN, OVERFLOW, etc. If your
# application also used these names, it may cause
# problems.
#
cdl_option CYGSYM_LIBM_NO_XOPEN_SVID_NAMESPACE_POLLUTION {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
};

# Output to stderr for math errors
# The SVID3 standard says that error
# messages should be output on the stderr console
# output stream. This option allows this ability
# to be explicitly controlled. However, this still
# only has an effect in SVID3 compatibility mode.
#
cdl_option CYGSEM_LIBM_USE_STDERR {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: !CYGSEM_LIBM_COMPAT_IEEE_ONLY
    #     CYGSEM_LIBM_COMPAT_IEEE_ONLY == 1
    #   --> 0
    # Requires: CYGPKG_LIBC_STDIO
    #     CYGPKG_LIBC_STDIO (unknown) == 0
    #   --> 0
};

# <
# Thread safety
# This option controls whether the C library has
# support for thread safe operation in general.
# This requires eCos kernel support for per-thread
# data, and adjustment of the stack limit.
#
cdl_component CYGPKG_LIBM_THREAD_SAFETY {
    # There is no associated value.
};

# >
# Compatibility mode setting
# This option makes the setting of the compatiblity
# mode be a per-thread property. This directly
# implies that it also becomes thread-safe.
#
cdl_option CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: !CYGSEM_LIBM_COMPAT_IEEE_ONLY
    #     CYGSEM_LIBM_COMPAT_IEEE_ONLY == 1
    #   --> 0
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_LIBM_COMPATMODE_TRACE_LEVEL
    #     Requires: CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE
};

# gamma() and lgamma()
# This option makes the gamma() and lgamma()
# functions be thread-safe. Note that these
# functions are identical - they take the log of
# the absolute value of their argument. The sign
# of the argument is stored in a variable called
# signgam. Enabling this option makes signgam
# a per-thread variable. Note there are also
# gamma_r() and lgamma_r() alternatives that
# allow signgam to be passed in by reference as
# an argument.
#
cdl_option CYGSEM_LIBM_THREAD_SAFE_GAMMA_FUNCTIONS {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGVAR_KERNEL_THREADS_DATA
    #     CYGVAR_KERNEL_THREADS_DATA == 1
    #   --> 1

    # The following properties are affected by this value
    # option CYGNUM_LIBM_SIGNGAM_TRACE_LEVEL
    #     Requires: CYGSEM_LIBM_THREAD_SAFE_GAMMA_FUNCTIONS
};

# <
# Tracing output levels in math library
# Tracing support is useful for debugging. Some
# Math library modules can be configured with
# different levels of tracing verbosity. These
# levels can be configured here.
#
cdl_component CYGPKG_LIBM_TRACE {
    # Flavor: bool
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Requires: CYGDBG_USE_TRACING
    #     CYGDBG_USE_TRACING == 0
    #   --> 0
};

# >
# Compatibility mode get/set
# Trace level for debugging the getting and
# setting of the compatibility mode when it is
# configured to be thread-safe.
#
cdl_option CYGNUM_LIBM_COMPATMODE_TRACE_LEVEL {
    # This option is not active
    # The parent CYGPKG_LIBM_TRACE is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
    # Requires: CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE
    #     CYGSEM_LIBM_THREAD_SAFE_COMPAT_MODE == 0
    #   --> 0
};

# signgam variable access
# Trace level for debugging all accesses to the
# signgam variable in thread-safe mode.
#
cdl_option CYGNUM_LIBM_SIGNGAM_TRACE_LEVEL {
    # This option is not active
    # The parent CYGPKG_LIBM_TRACE is disabled

    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 0
    # value_source default
    # Default value: 0
    # Legal values: 0 to 1
    # Requires: CYGSEM_LIBM_THREAD_SAFE_GAMMA_FUNCTIONS
    #     CYGSEM_LIBM_THREAD_SAFE_GAMMA_FUNCTIONS == 0
    #   --> 0
};

# <
# Bessel function limit of significance
# For the Bessel functions (j0(), j1(), jn(),
# y0(), y1(), yn()) this option defines the
# maximum absolute value of the ordinate
# before we assume total loss of significance.
# This number must be a floating-point number (e.g.
# contains a decimal point), and should be
# large.
#
cdl_option CYGNUM_LIBM_X_TLOSS {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value 1.41484755040569E+16
    # value_source default
    # Default value: 1.41484755040569E+16
    # Legal values: 1 to 1e308
};

# Math library build options
# Package specific build options including control over
# compiler flags used only in building this package,
# and details of which tests are built.
#
cdl_component CYGPKG_LIBM_OPTIONS {
    # There is no associated value.
};

# >
# Additional compiler flags
# This option modifies the set of compiler flags for
# building the math library. These flags are used in addition
# to the set of global flags.
#
cdl_option CYGPKG_LIBM_CFLAGS_ADD {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value -fno-strict-aliasing
    # value_source default
    # Default value:  "-fno-strict-aliasing" .  ((!CYGPKG_HAL_I386 && !CYGPKG_HAL_SYNTH_I386) ? "" : " -ffloat-store") 
    #     CYGPKG_HAL_I386 (unknown) == 0
    #     CYGPKG_HAL_SYNTH_I386 (unknown) == 0
    #   --> -fno-strict-aliasing
};

# Suppressed compiler flags
# This option modifies the set of compiler flags for
# building the math library. These flags are removed from
# the set of global flags if present.
#
cdl_option CYGPKG_LIBM_CFLAGS_REMOVE {
    # Flavor: data
    # No user value, uncomment the following line to provide one.
    # user_value ""
    # value_source default
    # Default value: ""
};

# Math library tests
# This option specifies the set of tests for the math library.
#
cdl_option CYGPKG_LIBM_TESTS {
    # Calculated value:  "tests/vectors/acos tests/vectors/asin tests/vectors/atan tests/vectors/atan2 tests/vectors/ceil tests/vectors/cos tests/vectors/cosh tests/vectors/exp tests/vectors/fabs tests/vectors/floor tests/vectors/fmod tests/vectors/frexp tests/vectors/ldexp tests/vectors/log tests/vectors/log10 tests/vectors/modf tests/vectors/pow tests/vectors/sin tests/vectors/sinh tests/vectors/sqrt tests/vectors/tan tests/vectors/tanh" 
    # Flavor: data
    # Current_value: tests/vectors/acos tests/vectors/asin tests/vectors/atan tests/vectors/atan2 tests/vectors/ceil tests/vectors/cos tests/vectors/cosh tests/vectors/exp tests/vectors/fabs tests/vectors/floor tests/vectors/fmod tests/vectors/frexp tests/vectors/ldexp tests/vectors/log tests/vectors/log10 tests/vectors/modf tests/vectors/pow tests/vectors/sin tests/vectors/sinh tests/vectors/sqrt tests/vectors/tan tests/vectors/tanh
};

# <
# <
# <

